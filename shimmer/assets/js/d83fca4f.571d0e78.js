"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[21019],{53855:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const s={toc:[]};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Guide Coming Soon",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This how to guide is not available in your language of choice at the moment.\nPlease feel free to browse ",(0,o.kt)("a",{parentName:"p",href:"/shimmer/wallet.rs/how_tos/more_examples"},"more examples")," which may suit your requirements.")))}i.isMDXComponent=!0},11351:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const s={toc:[]};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Iota.js",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can also find this guide in the native ",(0,o.kt)("a",{href:t.exampleURL}," iota.js library"))))}i.isMDXComponent=!0},49448:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const s={toc:[]};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Online Faucet",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can request test funds from the ",(0,o.kt)("a",{parentName:"p",href:"https://faucet.testnet.shimmer.network/"},"Shimmer Testnet Faucet"),".")))}i.isMDXComponent=!0},73479:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const s={toc:[]};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Dotenv",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This example uses dotenv, which is not safe for use in production environments.")))}i.isMDXComponent=!0},36795:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>N,default:()=>D,frontMatter:()=>T,metadata:()=>C,toc:()=>Z});var a=t(87462),o=(t(67294),t(3905)),s=t(34259),i=t(18679),r=t(69319);const c={toc:[]};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Update the token ID"),(0,o.kt)(r.Z,{className:"language-typescript",mdxType:"CodeBlock"},"/**\n * This example will mint an NFT\n */\nconst getUnlockedManager = require('./account-manager');\n\nasync function run() {\n    try {\n        const manager = await getUnlockedManager();\n\n        const account = await manager.getAccount('0');\n\n        await account.sync();\n\n        const response = await account.mintNfts([\n            {\n                // Hello in bytes\n                immutableMetadata: '0x48656c6c6f',\n                metadata: '0x48656c6c6f',\n            }\n        ]);\n\n        console.log(response);\n\n        console.log(\n            `Check your block on http://localhost:14265/api/core/v2/blocks/${response.blockId}`,\n        );\n    } catch (error) {\n        console.log('Error: ', error);\n    }\n    process.exit(0);\n}\n\nrun();\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,o.kt)(r.Z,{className:"language-bash",mdxType:"CodeBlock"},"node 25-mint-nft.js"))}l.isMDXComponent=!0;const d={toc:[]};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  payload: {\n    type: 6,\n    essence: {\n      type: 1,\n      networkId: '8342982141227064571',\n      inputs: [Array],\n      inputsCommitment: '0x086739a754bd6e9bd74f6242aaa354a46ee3615ad74a33caab84f0b0621e4885',\n      outputs: [Array]\n    },\n    unlocks: [ [Object] ]\n  },\n  blockId: '0xabe9f275b86ce75dbe64a6868b13eb27d362f27a968f361b888ac9f2423eb7ca',\n  inclusionState: 'Pending',\n  timestamp: '1663000060038',\n  transactionId: '0x2db9d3348abc98b59e8a8f68c3f6243300facc47fd2e005fd28878f295316fe9',\n  networkId: '8342982141227064571',\n  incoming: false,\n  note: null\n}\nCheck your block on http://localhost:14265/api/core/v2/blocks/0xabe9f275b86ce75dbe64a6868b13eb27d362f27a968f361b888ac9f2423eb7ca\n\n")))}u.isMDXComponent=!0;var p=t(53855);const m={toc:[]};function f(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(r.Z,{className:"java",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport org.iota.Wallet;\nimport org.iota.types.*;\nimport org.iota.types.account_methods.MintNfts;\nimport org.iota.types.account_methods.SyncAccount;\nimport org.iota.types.exceptions.WalletException;\nimport org.iota.types.ids.account.AccountAlias;\nimport org.iota.types.secret.StrongholdSecretManager;\n\npublic class MintNft {\n    public static void main(String[] args) throws WalletException, InterruptedException {\n        // This example assumes that a wallet has already been created using the \xb4CreateWallet.java\xb4 example.\n        // If you have not run the \xb4CreateAccount.java\xb4 example yet, run it first to ensure that the wallet can be loaded correctly.\n        Wallet wallet = new Wallet(new WalletConfig()\n                .withClientOptions(new ClientConfig().withNodes("https://api.testnet.shimmer.network"))\n                .withSecretManager(new StrongholdSecretManager("PASSWORD_FOR_ENCRYPTION", null, "example-wallet"))\n                .withCoinType(CoinType.Shimmer)\n        );\n\n        // Get account and sync it with the registered node to ensure that its balances are up-to-date.\n        AccountHandle a = wallet.getAccount(new AccountAlias("Alice"));\n        a.syncAccount(new SyncAccount().withOptions(new SyncOptions()));\n\n        // Fund the account for this example.\n        ExampleUtils.fundAccount(a);\n\n        // TODO: replace with your own values.\n        NftOptions options = new NftOptions();\n        options.withMetadata("0x5368696d6d65722e20546f6b656e697a652045766572797468696e672e2048656c6c6f2066726f6d20746865204a6176612062696e64696e672e");\n\n        // Send transaction.\n        Transaction t = a.mintNfts(new MintNfts().withNftsOptions(new NftOptions[]{options}));\n\n        // Print the transaction.\n        System.out.println(t);\n    }\n\n}'))}f.isMDXComponent=!0;const b={toc:[]};function h(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "payload":{\n      "type":6,\n      "essence":{\n         "type":1,\n         "networkId":"8342982141227064571",\n         "inputs":[\n            {\n               "type":0,\n               "transactionId":"0xa022ebf66347c966f9b74660b7e65ecf561497a002339d057d91e7390e73fcd6",\n               "transactionOutputIndex":2\n            }\n         ],\n         "inputsCommitment":"0xce87842bfde0a55f96b968f28888c1bf1259b9039498e1060fd8e12015f630a6",\n         "outputs":[\n            {\n               "type":6,\n               "amount":"52000",\n               "nftId":"0x0000000000000000000000000000000000000000000000000000000000000000",\n               "unlockConditions":[\n                  {\n                     "type":0,\n                     "address":{\n                        "type":0,\n                        "pubKeyHash":"0x4cfde0600797ae07d19d67d78910e70950bfdaf716f0035e9a30b97828aaf6a2"\n                     }\n                  }\n               ],\n               "features":[\n                  {\n                     "type":2,\n                     "data":"0x5368696d6d65722e20546f6b656e697a652045766572797468696e672e2048656c6c6f2066726f6d20746865204a6176612062696e64696e672e"\n                  }\n               ]\n            },\n            {\n               "type":3,\n               "amount":"2096582500",\n               "nativeTokens":[\n                  {\n                     "id":"0x08429fe5864378ce70699fc2d22bb144cb86a3c4833d136e3b95c5dadfd6ba0cef0100000000",\n                     "amount":"0x3233"\n                  },\n                  {\n                     "id":"0x08429fe5864378ce70699fc2d22bb144cb86a3c4833d136e3b95c5dadfd6ba0cef0200000000",\n                     "amount":"0x3233"\n                  },\n                  {\n                     "id":"0x08429fe5864378ce70699fc2d22bb144cb86a3c4833d136e3b95c5dadfd6ba0cef0300000000",\n                     "amount":"0x17"\n                  },\n                  {\n                     "id":"0x08429fe5864378ce70699fc2d22bb144cb86a3c4833d136e3b95c5dadfd6ba0cef0400000000",\n                     "amount":"0x17"\n                  }\n               ],\n               "unlockConditions":[\n                  {\n                     "type":0,\n                     "address":{\n                        "type":0,\n                        "pubKeyHash":"0x4cfde0600797ae07d19d67d78910e70950bfdaf716f0035e9a30b97828aaf6a2"\n                     }\n                  }\n               ]\n            }\n         ]\n      },\n      "unlocks":[\n         {\n            "type":0,\n            "signature":{\n               "type":0,\n               "publicKey":"0xde3152ce9d67415b9c5a042ea01caccc3f73ff1c0c77036874cb8badf9798d56",\n               "signature":"0x836935b75006582e64d985e346d14ed081aaaa76f6a517cb7528824f87853c1c993fdeb53405c62196539c2cf195c3568571d97b3f57a42f3922b07b98ae3506"\n            }\n         }\n      ]\n   },\n   "blockId":"0xc7d0dedd9e491fabd826365dfb51d5a675b5db61d6891fa024d27f59ba0ba4c2",\n   "inclusionState":"Pending",\n   "timestamp":"1664306373802",\n   "transactionId":"0x87f0eeca7a4fd8706a4f57c5b440c2a1d190254a967e1e678d3e132c9dd44e14",\n   "networkId":"8342982141227064571",\n   "incoming":false\n}\n')))}h.isMDXComponent=!0;var k=t(73479);const y={toc:[{value:"Run the Example",id:"run-the-example",level:3}]};function w(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(k.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(r.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example mint_nft --release\n// In this example we will mint a native token\n// Rename `.env.example` to `.env` first\n\nuse std::env;\n\nuse dotenv::dotenv;\nuse iota_wallet::{\n    account_manager::AccountManager,\n    iota_client::block::output::{\n        feature::{IssuerFeature, SenderFeature},\n        unlock_condition::AddressUnlockCondition,\n        Feature, NftId, NftOutputBuilder, UnlockCondition,\n    },\n    NftOptions, Result,\n};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // This example uses dotenv, which is not safe for use in production\n    dotenv().ok();\n\n    // Create the account manager\n    let manager = AccountManager::builder().finish().await?;\n\n    // Get the account we generated with `01_create_wallet`\n    let account = manager.get_account("Alice").await?;\n\n    account.sync(None).await?;\n\n    // Set the stronghold password\n    manager\n        .set_stronghold_password(&env::var("STRONGHOLD_PASSWORD").unwrap())\n        .await?;\n\n    let nft_options = vec![NftOptions {\n        address: Some("rms1qpszqzadsym6wpppd6z037dvlejmjuke7s24hm95s9fg9vpua7vluaw60xu".to_string()),\n        sender: Some("rms1qpllaj0pyveqfkwxmnngz2c488hfdtmfrj3wfkgxtk4gtyrax0jaxzt70zy".to_string()),\n        metadata: Some(b"some NFT metadata".to_vec()),\n        tag: Some(b"some NFT tag".to_vec()),\n        issuer: Some("rms1qpllaj0pyveqfkwxmnngz2c488hfdtmfrj3wfkgxtk4gtyrax0jaxzt70zy".to_string()),\n        immutable_metadata: Some(b"some NFT immutable metadata".to_vec()),\n    }];\n\n    let transaction = account.mint_nfts(nft_options, None).await?;\n\n    println!("Transaction: {}.", transaction.transaction_id,);\n    println!(\n        "Block sent: {}/api/core/v2/blocks/{}.",\n        &env::var("NODE_URL").unwrap(),\n        transaction.block_id.expect("no block created yet")\n    );\n\n    // Build nft output manually\n    let sender_address = account.addresses().await?[0].address().clone();\n    let token_supply = account.client().get_token_supply()?;\n    let outputs = vec![\n        // address of the owner of the NFT\n        NftOutputBuilder::new_with_amount(1_000_000, NftId::null())?\n            .add_unlock_condition(UnlockCondition::Address(AddressUnlockCondition::new(\n                *sender_address.as_ref(),\n            )))\n            .add_feature(Feature::Sender(SenderFeature::new(*sender_address.as_ref())))\n            .add_immutable_feature(Feature::Issuer(IssuerFeature::new(*sender_address.as_ref())))\n            .finish_output(token_supply)?,\n    ];\n\n    let transaction = account.send(outputs, None).await?;\n\n    println!(\n        "Transaction: {} Block sent: {}/api/core/v2/blocks/{}",\n        transaction.transaction_id,\n        &env::var("NODE_URL").unwrap(),\n        transaction.block_id.expect("No block created yet")\n    );\n\n    Ok(())\n}\n'),(0,o.kt)("h3",{id:"run-the-example"},"Run the Example"),(0,o.kt)("p",null,"Run the example by running the following command:"),(0,o.kt)(r.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example mint_nft --release"))}w.isMDXComponent=!0;const g={toc:[]};function x(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Transaction: 0x0ba6e5d164f4c5ba0e16d9ba42852fa9fa19989956632444fe3ef0bf9d12737c\nBlock sent: http://localhost:14265/api/core/v2/blocks/0x7d9e46cd59119c6b00f2affd88fe497276b5f6f97874e2ca42e4dae9651d1be2\nTransaction: 0xf99a245889f942084b6d9d216c61f2dcb42b6b14fb595bdc92322e87caaa6bbc \nBlock sent: http://localhost:14265/api/core/v2/blocks/0xce3b0f453f935288356bbfdc43f217b29e3a0ff1f7f08459d08e091c941da4b4\n")))}x.isMDXComponent=!0;var v=t(49448),_=t(11351);const T={title:"Mint NFTs",sidebar_label:"Mint",description:"",image:"/img/logo/iota_mark_light.png",keywords:["how to","nodejs","python","java","rust"]},N=void 0,C={unversionedId:"how_tos/NFT/mint_nft",id:"how_tos/NFT/mint_nft",title:"Mint NFTs",description:"",source:"@site/shimmer/external/wallet.rs/documentation/docs/how_tos/NFT/01_mint_nft.mdx",sourceDirName:"how_tos/NFT",slug:"/how_tos/NFT/mint_nft",permalink:"/shimmer/wallet.rs/how_tos/NFT/mint_nft",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/shimmer/external/wallet.rs/documentation/docs/how_tos/NFT/01_mint_nft.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Mint NFTs",sidebar_label:"Mint",description:"",image:"/img/logo/iota_mark_light.png",keywords:["how to","nodejs","python","java","rust"]},sidebar:"docs",previous:{title:"Destroy a Foundry",permalink:"/shimmer/wallet.rs/how_tos/native_tokens/destroy_foundry"},next:{title:"Send",permalink:"/shimmer/wallet.rs/how_tos/NFT/send_nft"}},I={},Z=[{value:"Code Example",id:"code-example",level:2},{value:"Expected Output",id:"expected-output",level:2}],M={toc:Z};function D(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},M,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(v.ZP,{mdxType:"TipFaucet"}),(0,o.kt)("p",null,"You can use a node running the stardust update to mint\n",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/introduction/explanations/what_is_stardust/tokenization#non-fungible-tokens-nfts"},"non-fungible tokens (NFTs)"),".\nTo do so, you will only need to ",(0,o.kt)("a",{parentName:"p",href:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/request_funds"},"add some funds to your account"),", define\nthe native token's options and call the ",(0,o.kt)("inlineCode",{parentName:"p"},"Account.mint_nfts(nft_options, options)")," function."),(0,o.kt)(_.ZP,{exampleURL:"https://wiki.iota.org/iotajs/how_tos/mint_nft",mdxType:"IOTAJsExample"}),(0,o.kt)("h2",{id:"code-example"},"Code Example"),(0,o.kt)("p",null,"The following example will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account manager."),(0,o.kt)("li",{parentName:"ol"},"Get Alice's which was ",(0,o.kt)("a",{parentName:"li",href:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/create_a_wallet_account"},"created in the first guide"),"."),(0,o.kt)("li",{parentName:"ol"},"Create the ",(0,o.kt)("inlineCode",{parentName:"li"},"NftOptions"),"."),(0,o.kt)("li",{parentName:"ol"},"Mint the NFT by calling the ",(0,o.kt)("inlineCode",{parentName:"li"},"Account.mint_nfts(nft_options, options)")," function.")),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(w,{mdxType:"RustCode"})),(0,o.kt)(i.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(l,{mdxType:"NodejsCode"})),(0,o.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(p.ZP,{mdxType:"PythonCode"})),(0,o.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(f,{mdxType:"JavaCode"}))),(0,o.kt)("h2",{id:"expected-output"},"Expected Output"),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(x,{mdxType:"RustOutput"})),(0,o.kt)(i.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(u,{mdxType:"NodejsOutput"})),(0,o.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(p.ZP,{mdxType:"PythonOutput"})),(0,o.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(h,{mdxType:"JavaOutput"}))))}D.isMDXComponent=!0},18679:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),o=t(86010);const s="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,i),hidden:t},n)}},34259:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(87462),o=t(67294),s=t(86010),i=t(51048),r=t(33609),c=t(1943),l=t(72957);const d="tabList__CuJ",u="tabItem_LNqP";function p(e){var n;const{lazy:t,block:i,defaultValue:p,values:m,groupId:f,className:b}=e,h=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??h.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),y=(0,r.l)(k,((e,n)=>e.value===n.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===p?p:p??(null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)??h[0].props.value;if(null!==w&&!k.some((e=>e.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:x}=(0,c.U)(),[v,_]=(0,o.useState)(w),T=[],{blockElementScrollPositionUntilNextRender:N}=(0,l.o5)();if(null!=f){const e=g[f];null!=e&&e!==v&&k.some((n=>n.value===e))&&_(e)}const C=e=>{const n=e.currentTarget,t=T.indexOf(n),a=k[t].value;a!==v&&(N(n),_(a),null!=f&&x(f,String(a)))},I=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,s.Z)("tabs-container",d)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},b)},k.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===n?0:-1,"aria-selected":v===n,key:n,ref:e=>T.push(e),onKeyDown:I,onFocus:C,onClick:C},i,{className:(0,s.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":v===n})}),t??n)}))),t?(0,o.cloneElement)(h.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==v})))))}function m(e){const n=(0,i.Z)();return o.createElement(p,(0,a.Z)({key:String(n)},e))}}}]);