"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[20486],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return f}});var t=n(67294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),f=s,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?t.createElement(m,a(a({ref:r},u),{},{components:n})):t.createElement(m,a({ref:r},u))}));function f(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=p;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},97336:function(e,r,n){n.r(r),n.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var t=n(87462),s=n(63366),o=(n(67294),n(3905)),a=["components"],i={},c="Class: MessageHandler",l={unversionedId:"libraries/nodejs/references/classes/MessageHandler",id:"libraries/nodejs/references/classes/MessageHandler",title:"Class: MessageHandler",description:"The MessageHandler which sends the commands to the Rust side.",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/classes/MessageHandler.md",sourceDirName:"libraries/nodejs/references/classes",slug:"/libraries/nodejs/references/classes/MessageHandler",permalink:"/iota.rs/develop/libraries/nodejs/references/classes/MessageHandler",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/classes/MessageHandler.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Class: Client",permalink:"/iota.rs/develop/libraries/nodejs/references/classes/Client"},next:{title:"Enumeration: CoinType",permalink:"/iota.rs/develop/libraries/nodejs/references/enums/CoinType"}},u={},d=[],p={toc:d};function f(e){var r=e.components,n=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"class-messagehandler"},"Class: MessageHandler"),(0,o.kt)("p",null,"The MessageHandler which sends the commands to the Rust side."))}f.isMDXComponent=!0}}]);