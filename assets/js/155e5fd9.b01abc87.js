"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[77159],{1390:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return p},default:function(){return N},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return k}});var a,l=n(87462),r=n(63366),i=(n(67294),n(3905)),d=["components"],o={description:"Official IOTA Client Library Python API reference.",image:"/img/logo/iota_mark_light.png",keywords:["api","python","param","type","run"]},p="IOTA Client Python Library",s={unversionedId:"libraries/python/api_reference",id:"libraries/python/api_reference",title:"IOTA Client Python Library",description:"Official IOTA Client Library Python API reference.",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/python/api_reference.md",sourceDirName:"libraries/python",slug:"/libraries/python/api_reference",permalink:"/iota.rs/develop/libraries/python/api_reference",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/python/api_reference.md",tags:[],version:"current",frontMatter:{description:"Official IOTA Client Library Python API reference.",image:"/img/logo/iota_mark_light.png",keywords:["api","python","param","type","run"]},sidebar:"docs",previous:{title:"Getting Started with IOTA Client Python Binding",permalink:"/iota.rs/develop/libraries/python/getting_started"},next:{title:"Getting Started with Java",permalink:"/iota.rs/develop/libraries/java/getting_started"}},u={},k=[{value:"Requirements",id:"requirements",level:2},{value:"Try Run w/ Local Hornet",id:"try-run-w-local-hornet",level:2},{value:"Testing",id:"testing",level:2},{value:"Python Example",id:"python-example",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Client",id:"client",level:3},{value:"constructor(network (optional), password (optional), polling_interval (optional)): AccountManager",id:"constructornetwork-optional-password-optional-polling_interval-optional-accountmanager",level:4},{value:"Full Node APIs",id:"full-node-apis",level:3},{value:"get_health(): bool",id:"get_health-bool",level:4},{value:"get_info(): NodeInfoWrapper",id:"get_info-nodeinfowrapper",level:4},{value:"get_peers(): listPeerDto",id:"get_peers-listpeerdto",level:4},{value:"get_tips(): liststr",id:"get_tips-liststr",level:4},{value:"post_block(block): str",id:"post_blockblock-str",level:4},{value:"get_output(output_id): OutputResponse",id:"get_outputoutput_id-outputresponse",level:4},{value:"get_address_balance(address): BalanceAddressResponse",id:"get_address_balanceaddress-balanceaddressresponse",level:4},{value:"get_address_outputs(address, options (optional)): listUtxoInput",id:"get_address_outputsaddress-options-optional-listutxoinput",level:4},{value:"find_outputs(output_ids (optional), addresses (optional)): listOutputResponse",id:"find_outputsoutput_ids-optional-addresses-optional-listoutputresponse",level:4},{value:"get_milestone(index): MilestoneDto",id:"get_milestoneindex-milestonedto",level:4},{value:"get_milestone_utxo_changes(index): MilestoneUTXOChanges",id:"get_milestone_utxo_changesindex-milestoneutxochanges",level:4},{value:"get_receipts(): Vec<ReceiptDto/>",id:"get_receipts-vec",level:4},{value:"get_receipts_migrated_at(index): Vec<ReceiptDto/>",id:"get_receipts_migrated_atindex-vec",level:4},{value:"get_treasury(): TreasuryResponse",id:"get_treasury-treasuryresponse",level:4},{value:"get_included_block(): Block",id:"get_included_block-block",level:4},{value:"High-Level APIs",id:"high-level-apis",level:3},{value:"block(seed (optional), account_index (optional), initial_address_index (optional), inputs (optional), input_range_begin (optional), input_range_end (optional), outputs (optional), dust_allowance_outputs (optional), index (optional), index_raw (optional), data (optional), data_str (optional), parents (optional)): Block",id:"blockseed-optional-account_index-optional-initial_address_index-optional-inputs-optional-input_range_begin-optional-input_range_end-optional-outputs-optional-dust_allowance_outputs-optional-index-optional-index_raw-optional-data-optional-data_str-optional-parents-optional-block",level:4},{value:"get_block_metadata(block_id): BlockMetadataResponse",id:"get_block_metadatablock_id-blockmetadataresponse",level:4},{value:"get_block_data(block_id): Block",id:"get_block_datablock_id-block",level:4},{value:"get_block_raw(block_id): str",id:"get_block_rawblock_id-str",level:4},{value:"get_block_id(payload_str): str",id:"get_block_idpayload_str-str",level:4},{value:"get_block_index(index): liststr",id:"get_block_indexindex-liststr",level:4},{value:"find_blocks(indexation_keys (optional), block_ids (optional)): listBlock",id:"find_blocksindexation_keys-optional-block_ids-optional-listblock",level:4},{value:"get_unspent_address(seed, account_index (optional), initial_address_index(optional)): (str, int)",id:"get_unspent_addressseed-account_index-optional-initial_address_indexoptional-str-int",level:4},{value:"get_addresses(seed, account_index (optional), input_range_begin (optional), input_range_end (optional) get_all (optional)): list(str, bool (optional))",id:"get_addressesseed-account_index-optional-input_range_begin-optional-input_range_end-optional-get_all-optional-liststr-bool-optional",level:4},{value:"get_balance(seed, account_index (optional), initial_address_index(optional), gap_limit(optional)): int",id:"get_balanceseed-account_index-optional-initial_address_indexoptional-gap_limitoptional-int",level:4},{value:"get_address_balances(addresses): listAddressBalancePair",id:"get_address_balancesaddresses-listaddressbalancepair",level:4},{value:"generate_mnemonic()",id:"generate_mnemonic",level:4},{value:"mnemonic_to_hex_seed(mnemonic)",id:"mnemonic_to_hex_seedmnemonic",level:4},{value:"find_inputs(addresses, amount: u64)",id:"find_inputsaddresses-amount-u64",level:4},{value:"bech32_to_hex(bech32)",id:"bech32_to_hexbech32",level:4},{value:"hex_to_bech32(hex, bech32_hrp (optional))",id:"hex_to_bech32hex-bech32_hrp-optional",level:4},{value:"hex_public_key_to_bech32_address(hex, bech32_hrp (optional))",id:"hex_public_key_to_bech32_addresshex-bech32_hrp-optional",level:4},{value:"is_address_valid(address): bool",id:"is_address_validaddress-bool",level:4},{value:"retry(block_id): (str, Block)",id:"retryblock_id-str-block",level:4},{value:"retry_until_included(block_id, interval (optional), max_attempts (optional)): list(str, Block)",id:"retry_until_includedblock_id-interval-optional-max_attempts-optional-liststr-block",level:4},{value:"consolidate_funds(seed, account_index, start_index, end_index): str",id:"consolidate_fundsseed-account_index-start_index-end_index-str",level:4},{value:"search_address(seed, bech32_hrp, account_index, start_index, end_index, address): (int, bool)",id:"search_addressseed-bech32_hrp-account_index-start_index-end_index-address-int-bool",level:4},{value:"reattach(block_id): (str, Block)",id:"reattachblock_id-str-block",level:4},{value:"promote(block_id): (str, Block)",id:"promoteblock_id-str-block",level:4},{value:"MQTT APIs",id:"mqtt-apis",level:3},{value:"subscribe_topic(topic, callback): void",id:"subscribe_topictopic-callback-void",level:4},{value:"subscribe_topics(topics, callback): void",id:"subscribe_topicstopics-callback-void",level:4},{value:"unsubscribe(): void",id:"unsubscribe-void",level:4},{value:"disconnect(): void",id:"disconnect-void",level:4},{value:"WalletAddress",id:"walletaddress",level:4},{value:"BalanceAddressResponse",id:"balanceaddressresponse",level:4},{value:"AddressBalancePair",id:"addressbalancepair",level:4},{value:"MilestoneDto",id:"milestonedto",level:4},{value:"MilestoneUTXOChanges",id:"milestoneutxochanges",level:4},{value:"ReceiptDto",id:"receiptdto",level:4},{value:"TreasuryResponse",id:"treasuryresponse",level:4},{value:"UtxoInput",id:"utxoinput",level:4},{value:"OutputResponse",id:"outputresponse",level:4},{value:"OutputDto",id:"outputdto",level:4},{value:"SignatureLockedSingleOutputDto",id:"signaturelockedsingleoutputdto",level:4},{value:"SignatureLockedDustAllowanceOutputDto",id:"signaturelockeddustallowanceoutputdto",level:4},{value:"pub struct TreasuryOutputDto {",id:"pub-struct-treasuryoutputdto-",level:4},{value:"AddressDto",id:"addressdto",level:4},{value:"Ed25519AddressDto",id:"ed25519addressdto",level:4},{value:"Block",id:"block",level:4},{value:"Payload",id:"payload",level:4},{value:"Transaction",id:"transaction",level:4},{value:"Milestone",id:"milestone",level:4},{value:"MilestonePayloadEssence",id:"milestonepayloadessence",level:4},{value:"Indexation",id:"indexation",level:4},{value:"RegularEssence",id:"regularessence",level:4},{value:"Output",id:"output",level:4},{value:"Input",id:"input",level:4},{value:"Unlock",id:"unlock",level:4},{value:"Ed25519Signature",id:"ed25519signature",level:4},{value:"BrokerOptions",id:"brokeroptions",level:4},{value:"LedgerInclusionStateDto",id:"ledgerinclusionstatedto",level:4},{value:"NodeInfoWrapper",id:"nodeinfowrapper",level:4},{value:"NetworkInfo",id:"networkinfo",level:4},{value:"PeerDto",id:"peerdto",level:4},{value:"RelationDto",id:"relationdto",level:4},{value:"GossipDto",id:"gossipdto",level:4},{value:"HeartbeatDto",id:"heartbeatdto",level:4},{value:"MetricsDto",id:"metricsdto",level:4},{value:"AddressOutputsOptions",id:"addressoutputsoptions",level:4}],m=(a="ReceiptDto",function(t){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)}),c={toc:k};function N(t){var e=t.components,n=(0,r.Z)(t,d);return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"iota-client-python-library"},"IOTA Client Python Library"),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rust 1.52.0+"),(0,i.kt)("li",{parentName:"ul"},"Python 3.6+")),(0,i.kt)("h2",{id:"try-run-w-local-hornet"},"Try Run w/ Local Hornet"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Run your local Hornet")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ git clone git@github.com:gohornet/hornet.git")),(0,i.kt)("li",{parentName:"ul"},"checkout ",(0,i.kt)("inlineCode",{parentName:"li"},"develop")," branch"),(0,i.kt)("li",{parentName:"ul"},"Modify your ",(0,i.kt)("inlineCode",{parentName:"li"},"create_snapshot_alphanet.sh"),", modify Line 14 to ",(0,i.kt)("inlineCode",{parentName:"li"},'go run "..\\main.go" tool snapgen alphanet1 96f9de0989e77d0e150e850a5a600e83045fa57419eaf3b20225b763d4e23813 1000000000 "snapshots\\alphanet1\\full_export.bin"')),(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("inlineCode",{parentName:"li"},"hornet/alphanet")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ ./run_coo_bootstrap.sh"))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To build the iota_client python library by yourself, there are two ways."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"By using the ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("inlineCode",{parentName:"li"},"bindings/python/native")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ cargo build --release")),(0,i.kt)("li",{parentName:"ul"},"The built library is located in ",(0,i.kt)("inlineCode",{parentName:"li"},"target/release/")),(0,i.kt)("li",{parentName:"ul"},"On MacOS, rename ",(0,i.kt)("inlineCode",{parentName:"li"},"libiota_client.dylib")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"iota_client.so"),", on Windows, rename ",(0,i.kt)("inlineCode",{parentName:"li"},"iota_client.dll")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"iota_client.pyd"),", and on Linux ",(0,i.kt)("inlineCode",{parentName:"li"},"libiota_client.so")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"iota_client.so"),"."),(0,i.kt)("li",{parentName:"ul"},"Copy your renamed library to ",(0,i.kt)("inlineCode",{parentName:"li"},"bindings/python/examples/")),(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("inlineCode",{parentName:"li"},"bindings/python/examples")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ python example.py")))),(0,i.kt)("li",{parentName:"ul"},"By using ",(0,i.kt)("a",{parentName:"li",href:"#https://github.com/PyO3/maturin"},(0,i.kt)("inlineCode",{parentName:"a"},"maturin")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("inlineCode",{parentName:"li"},"bindings/python/native")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ pip3 install maturin")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ maturin develop")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ maturin build --manylinux off")),(0,i.kt)("li",{parentName:"ul"},"The wheel file is now created in ",(0,i.kt)("inlineCode",{parentName:"li"},"bindings/python/native/target/wheels")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ pip3 install [THE_BUILT_WHEEL_FILE]")))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To use the pre-build libraries"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To use the pre-built libraries for linux/macos/windows, please check the ",(0,i.kt)("inlineCode",{parentName:"li"},"Artifacts")," files generated by the Github Action in the last commit. Or check this ",(0,i.kt)("a",{parentName:"li",href:"https://nightly.link/iotaledger/iota.rs/workflows/python_binding_publish/dev"},"link"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ pip3 install [THE_DOWNLOADED_WHEEL_FILE]"))))),(0,i.kt)("p",null,"Connecting to a MQTT broker using raw ip doesn't work with TCP. This is a limitation of rustls."),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install ",(0,i.kt)("a",{parentName:"li",href:"#https://pypi.org/project/tox/"},"tox"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ pip install tox")))),(0,i.kt)("li",{parentName:"ul"},"Build the library",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ python setup.py install")))),(0,i.kt)("li",{parentName:"ul"},"To test install tox globally and run",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$ tox -e py"))))),(0,i.kt)("h2",{id:"python-example"},"Python Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import iota_client\nimport os\nLOCAL_NODE_URL = \"http://0.0.0.0:14265\"\n\n# NOTE! Load the seed from your env path instead\n# NEVER assign the seed directly in your codes!\n# DO NOT USE THIS!!:\n# SEED = \"256a818b2aac458941f7274985a410e57fb750f3a3a67969ece5bd9ae7eef5b2\"\n\n# USE THIS INSTEAD\nSEED = os.getenv('MY_IOTA_SEED')\n\nEMPTY_ADDRESS = \"atoi1qzt0nhsf38nh6rs4p6zs5knqp6psgha9wsv74uajqgjmwc75ugupx3y7x0r\"\nclient = iota_client.Client(\n    nodes_name_password=[[node=LOCAL_NODE_URL]], node_sync_disabled=True)\n\n\ndef main():\n    print('get_health()')\n    print(f'health: {client.get_health()}')\n\n    print('get_info()')\n    print(f'node_info: {client.get_info()}')\n\n    print('get_tips()')\n    print(f'tips: {client.get_tips()}')\n\n    print('get_addresses')\n    address_changed_list = client.get_addresses(\n        seed=SEED, account_index=0, input_range_begin=0, input_range_end=10, get_all=True)\n    print(f'address_changed list: {address_changed_list}')\n\n    # Get the (address, changed ) for the first found address\n    address, changed = address_changed_list[0]\n    print(f'get_address_balance() for address {address}')\n    print(f'balance: {client.get_address_balance(address)}')\n\n    print(f'get_address_balance() for address {EMPTY_ADDRESS}')\n    print(f'balance: {client.get_address_balance(EMPTY_ADDRESS)}')\n\n    print(f'get_address_outputs() for address {EMPTY_ADDRESS}')\n    print(f'outputs(): {client.get_address_outputs(EMPTY_ADDRESS)}')\n\n    print(f'block() 100 tokens to address {EMPTY_ADDRESS}')\n    block_id = client.block(\n        seed=SEED, outputs=[{'address': EMPTY_ADDRESS, 'amount': 100}])['block_id']\n    print(f'Token sent with block_id: {block_id}')\n    print(f'Please check http://127.0.0.1:14265/api/core/v2/blocks/{block_id}')\n\n    print(f'get_block_metadata() for block_id {block_id}')\n    block_metadata = client.get_block_metadata(block_id)\n    print(f'block_metadata: {block_metadata}')\n\n    print(f'get_block_data() for block_id {block_id}')\n    block_data = client.get_block_data(block_id)\n    print(f'block_data: {block_data}')\n\n    print(f'get_block_raw() for block_id {block_id}')\n    block_raw = client.get_block_raw(block_id)\n    print(f\"raw_data = {block_raw.encode('utf-8')}\")\n    print(\n        f\"Note the raw data is exactly the same from http://127.0.0.1:14265/api/core/v2/blocks/{block_id}\")\n    print(', which is not utf-8 format. The utf-8 format here is just for ease of demonstration')\n\n    print(f'block() Indexation')\n    block_id_indexation = client.block(\n        index=\"Hello\", data=[84, 97, 110, 103, 108, 101])\n    print(f'Indexation sent with block_id: {block_id_indexation}')\n    print(\n        f'Please check http://127.0.0.1:14265/api/core/v2/blocks/{block_id_indexation}')\n\n    # Note that in rust we need to specify the parameter type explicitly, so if the user wants\n    # to use the utf-8 string as the data, then the `data_str` field can be used.\n    print(f'block() Indexation')\n    block_id_indexation = client.block(\n        index=\"Hi\", data_str=\"Tangle\")\n    print(f'Indexation sent with block_id: {block_id_indexation}')\n    print(\n        f'Please check http://127.0.0.1:14265/api/core/v2/blocks/{block_id_indexation}')\n\n    print(f\"get_block_index() for index 'Hello'\")\n    block_id_indexation_queried = client.get_block_index(\"Hello\")\n    print(f'Indexation: {block_id_indexation_queried}')\n\n    print(f\"find_blocks() for indexation_keys = ['Hello']\")\n    blocks = client.find_blocks(indexation_keys=[\"Hello\"])\n    print(f'Blocks: {blocks}')\n\n    print(f\"get_unspent_address()\")\n    unspent_addresses = client.get_unspent_address(seed=SEED)\n    print(f'(unspent_address, index): {unspent_addresses}')\n\n    print(f\"get_balance()\")\n    balance = client.get_balance(seed=SEED)\n    print(f'balance: {balance}')\n\n    addresses = []\n    for address, _changed in address_changed_list:\n        addresses.append(address)\n    print(f\"get_address_balances() for {addresses}\")\n    balances = client.get_address_balances(addresses)\n    print(f'balances: {balance}')\n\n\nif __name__ == \"__main__\":\n    main()\n\n")),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("p",null,"Note that in the following APIs, the corresponding exception will be returned if an error occurs.\nAlso for all the optional values, the default values are the same as the ones in the Rust version."),(0,i.kt)("h3",{id:"client"},"Client"),(0,i.kt)("h4",{id:"constructornetwork-optional-password-optional-polling_interval-optional-accountmanager"},"constructor(network (optional), password (optional), polling_interval (optional)): ",(0,i.kt)("a",{parentName:"h4",href:"#accountmanager"},"AccountManager")),(0,i.kt)("p",null,"Creates a new instance of the Client."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[network]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The network")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[primary_node_jwt_name_password]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"An array of array with node URLs and optional JWT and basic auth name and password (length 1 is only the url, length 2 is url with JWT, length 3 is url with basic auth name and password and length 4 is url with JWT and basic auth name and password)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[primary_pow_node_jwt_name_password]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"An array of array with node URLs and optional JWT and basic auth name and password (length 1 is only the url, length 2 is url with JWT, length 3 is url with basic auth name and password and length 4 is url with JWT and basic auth name and password)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[nodes_name_password]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[]list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"An array of array with node URLs and optional JWT and basic auth name and password (length 1 is only the url, length 2 is url with JWT, length 3 is url with basic auth name and password and length 4 is url with JWT and basic auth name and password)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[permanodes_name_password]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[]list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"An array of array with node URLs and optional JWT and basic auth name and password (length 1 is only the url, length 2 is url with JWT, length 3 is url with basic auth name and password and length 4 is url with JWT and basic auth name and password)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[node_sync_interval]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The interval for the node syncing process")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[node_sync_disabled]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bool")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Disables the node syncing process. Every node will be considered healthy and ready to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[quorum]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bool")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"Bool to define if quorum should be used")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[min_quorum_size]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"3")),(0,i.kt)("td",{parentName:"tr",align:null},"An int that defines how many nodes should be used for quorum")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[quorum_threshold]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"66")),(0,i.kt)("td",{parentName:"tr",align:null},"Define the % of nodes that need to return the same response to accept it")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[api_timeout]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the default HTTP request timeout")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[api_timeout]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"dict")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The API to set the request timeout. Key: 'GetHealth', 'GetInfo', 'GetPeers', 'GetTips', 'PostBlock', 'GetOutput', 'GetMilestone' Value: timeout in milliseconds")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[local_pow]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bool")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Flag determining if PoW should be done locally or remotely")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[tips_interval]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Time between requests for new tips during PoW")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[mqtt_broker_options]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[BrokerOptions](#brokeroptions)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the options for the MQTT connection with the node")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," The constructed ",(0,i.kt)("a",{parentName:"p",href:"#client"},"Client"),"."),(0,i.kt)("h3",{id:"full-node-apis"},"Full Node APIs"),(0,i.kt)("h4",{id:"get_health-bool"},"get_health(): bool"),(0,i.kt)("p",null,"Gets the node health status."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," whether the node is healthy."),(0,i.kt)("h4",{id:"get_info-nodeinfowrapper"},"get_info(): NodeInfoWrapper"),(0,i.kt)("p",null,"Gets information about the node."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#nodeinfowrapper"},"NodeInfoWrapper"),"."),(0,i.kt)("h4",{id:"get_peers-listpeerdto"},"get_peers(): list","[PeerDto]"),(0,i.kt)("p",null,"Gets peers of the node."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of ",(0,i.kt)("a",{parentName:"p",href:"#peerdto"},"PeerDto"),"."),(0,i.kt)("h4",{id:"get_tips-liststr"},"get_tips(): list","[str]"),(0,i.kt)("p",null,"Gets non-lazy tips."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," two non-lazy tips' block ids in list."),(0,i.kt)("h4",{id:"post_blockblock-str"},"post_block(block): str"),(0,i.kt)("p",null,"Submits a block."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[Block](#block)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block to submit")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the block id of the submitted block."),(0,i.kt)("h4",{id:"get_outputoutput_id-outputresponse"},"get_output(output_id): OutputResponse"),(0,i.kt)("p",null,"Gets the UTXO outputs associated with the given output id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[output_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The id of the output to search")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the OutputResponse","[#outputresponse]","."),(0,i.kt)("h4",{id:"get_address_balanceaddress-balanceaddressresponse"},"get_address_balance(address): BalanceAddressResponse"),(0,i.kt)("p",null,"Gets the balance in the address."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[address]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#BalanceAddressResponse"},"BalanceAddressResponse"),"."),(0,i.kt)("h4",{id:"get_address_outputsaddress-options-optional-listutxoinput"},"get_address_outputs(address, options (optional)): list","[UtxoInput]"),(0,i.kt)("p",null,"Gets the UTXO outputs associated with the given address."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[address]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[options]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[[AddressOutputsOptions](#addressoutputsoptions)]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The query filters")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of ",(0,i.kt)("a",{parentName:"p",href:"#UtxoInput"},"UtxoInput"),"."),(0,i.kt)("h4",{id:"find_outputsoutput_ids-optional-addresses-optional-listoutputresponse"},"find_outputs(output_ids (optional), addresses (optional)): list","[OutputResponse]"),(0,i.kt)("p",null,"Gets the UTXO outputs associated with the given output ids and addresses."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[output_ids]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The list of addresses to search")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[addresses]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The list of output ids to search")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of ",(0,i.kt)("a",{parentName:"p",href:"#outputresponse"},"OutputResponse"),"."),(0,i.kt)("h4",{id:"get_milestoneindex-milestonedto"},"get_milestone(index): MilestoneDto"),(0,i.kt)("p",null,"Gets the milestone by the given index."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The index of the milestone")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#milestonedto"},"MilestoneDto"),"."),(0,i.kt)("h4",{id:"get_milestone_utxo_changesindex-milestoneutxochanges"},"get_milestone_utxo_changes(index): MilestoneUTXOChanges"),(0,i.kt)("p",null,"Gets the utxo changes by the given milestone index."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The index of the milestone")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#milestoneutxochanges"},"MilestoneUTXOChanges"),"."),(0,i.kt)("h4",{id:"get_receipts-vec"},"get_receipts(): Vec",(0,i.kt)(m,{mdxType:"ReceiptDto"})),(0,i.kt)("p",null,"Get all receipts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#ReceiptDto"},"ReceiptDto"),"."),(0,i.kt)("h4",{id:"get_receipts_migrated_atindex-vec"},"get_receipts_migrated_at(index): Vec",(0,i.kt)(m,{mdxType:"ReceiptDto"})),(0,i.kt)("p",null,"Get all receipts for a given milestone index."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The index of the milestone")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#ReceiptDto"},"ReceiptDto"),"."),(0,i.kt)("h4",{id:"get_treasury-treasuryresponse"},"get_treasury(): TreasuryResponse"),(0,i.kt)("p",null,"Get the treasury amount."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#TreasuryResponse"},"TreasuryResponse"),"."),(0,i.kt)("h4",{id:"get_included_block-block"},"get_included_block(): Block"),(0,i.kt)("p",null,"Get the included block of a transaction."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},"The id of the transaction")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the new ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h3",{id:"high-level-apis"},"High-Level APIs"),(0,i.kt)("h4",{id:"blockseed-optional-account_index-optional-initial_address_index-optional-inputs-optional-input_range_begin-optional-input_range_end-optional-outputs-optional-dust_allowance_outputs-optional-index-optional-index_raw-optional-data-optional-data_str-optional-parents-optional-block"},"block(seed (optional), account_index (optional), initial_address_index (optional), inputs (optional), input_range_begin (optional), input_range_end (optional), outputs (optional), dust_allowance_outputs (optional), index (optional), index_raw (optional), data (optional), data_str (optional), parents (optional)): Block"),(0,i.kt)("p",null,"Build a block."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The hex-encoded seed of the account to spend")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[initial_address_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The initial address index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[inputs]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"list[",(0,i.kt)("a",{parentName:"td",href:"#utxoinput"},"UtxoInput"),"]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"UtxoInputs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[input_range_begin]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The begin index of the input")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[input_range_end]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The end index of the input")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[outputs]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[[Output](#output)]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Outputs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[dust_allowance_outputs]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[[Output](#output)]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Dust allowance output to the transaction")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The indexation string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index_raw]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[int]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The indexation byte array")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[data]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[int]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The data in bytes")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[data_str]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The data string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[parents]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block ids of the parents")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the built ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h4",{id:"get_block_metadatablock_id-blockmetadataresponse"},"get_block_metadata(block_id): BlockMetadataResponse"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#blockmetadataresponse"},"BlockMetadataResponse"),"."),(0,i.kt)("h4",{id:"get_block_datablock_id-block"},"get_block_data(block_id): Block"),(0,i.kt)("p",null,"Gets the block data from the block id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h4",{id:"get_block_rawblock_id-str"},"get_block_raw(block_id): str"),(0,i.kt)("p",null,"Gets the raw block string from the block id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the raw block string."),(0,i.kt)("h4",{id:"get_block_idpayload_str-str"},"get_block_id(payload_str): str"),(0,i.kt)("p",null,"Get the block id from the payload string."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"payload_str"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The payload string from the mqtt block event")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," The identifier of block."),(0,i.kt)("h4",{id:"get_block_indexindex-liststr"},"get_block_index(index): list","[str]"),(0,i.kt)("p",null,"Gets the list of block indices from the block_id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The identifier of block")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of block ids."),(0,i.kt)("h4",{id:"find_blocksindexation_keys-optional-block_ids-optional-listblock"},"find_blocks(indexation_keys (optional), block_ids (optional)): list","[Block]"),(0,i.kt)("p",null,"Finds all blocks associated with the given indexation keys and block ids."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[indexation_keys]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The list of indexations keys too search")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_ids]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The list of block ids to search")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of the found blocks."),(0,i.kt)("h4",{id:"get_unspent_addressseed-account_index-optional-initial_address_indexoptional-str-int"},"get_unspent_address(seed, account_index (optional), initial_address_index(optional)): (str, int)"),(0,i.kt)("p",null,"Gets a valid unspent address."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The hex-encoded seed to search")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[initial_address_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The initial address index")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," a tuple with type of ",(0,i.kt)("inlineCode",{parentName:"p"},"(str, int)")," as the address and corresponding index in the account."),(0,i.kt)("h4",{id:"get_addressesseed-account_index-optional-input_range_begin-optional-input_range_end-optional-get_all-optional-liststr-bool-optional"},"get_addresses(seed, account_index (optional), input_range_begin (optional), input_range_end (optional) get_all (optional)): list","[(str, bool (optional))]"),(0,i.kt)("p",null,"Finds addresses from the seed regardless of their validity."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The hex-encoded seed to search")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[input_range_begin]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The begin of the address range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[input_range_end]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The end of the address range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[get_all]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bool")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Get all addresses")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," a list of tuples with type of ",(0,i.kt)("inlineCode",{parentName:"p"},"(str, int)")," as the address and corresponding index in the account."),(0,i.kt)("h4",{id:"get_balanceseed-account_index-optional-initial_address_indexoptional-gap_limitoptional-int"},"get_balance(seed, account_index (optional), initial_address_index(optional), gap_limit(optional)): int"),(0,i.kt)("p",null,"Get balance on a given seed and its wallet account index."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The hex-encoded seed to search")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[initial_address_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The initial address index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[gap_limit]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The gap limit")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the amount of balance."),(0,i.kt)("h4",{id:"get_address_balancesaddresses-listaddressbalancepair"},"get_address_balances(addresses): list","[AddressBalancePair]"),(0,i.kt)("p",null,"Get the balance in iotas for the given addresses."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[addresses]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The list of addresses to search")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the list of ",(0,i.kt)("a",{parentName:"p",href:"#addressbalancepair"},"AddressBalancePair"),"."),(0,i.kt)("h4",{id:"generate_mnemonic"},"generate_mnemonic()"),(0,i.kt)("p",null,"Returns a random generated Bip39 mnemonic with the English word list."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A String"),(0,i.kt)("h4",{id:"mnemonic_to_hex_seedmnemonic"},"mnemonic_to_hex_seed(mnemonic)"),(0,i.kt)("p",null,"Returns the seed hex encoded."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"mnemonic"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Bip39 mnemonic with words from the English word list.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A String"),(0,i.kt)("h4",{id:"find_inputsaddresses-amount-u64"},"find_inputs(addresses, amount: u64)"),(0,i.kt)("p",null,"Return the inputs from addresses for a provided amount (useful for offline signing)"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"addresses"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The input address list.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"amount"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The input amount.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," The list of ",(0,i.kt)("a",{parentName:"p",href:"#utxoinput"},"UtxoInput"),"."),(0,i.kt)("h4",{id:"bech32_to_hexbech32"},"bech32_to_hex(bech32)"),(0,i.kt)("p",null,"Returns a parsed hex String from bech32."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bech32"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A String"),(0,i.kt)("h4",{id:"hex_to_bech32hex-bech32_hrp-optional"},"hex_to_bech32(hex, bech32_hrp (optional))"),(0,i.kt)("p",null,"Returns a parsed bech32 String from hex."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bech32"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bech32_hrp"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The Bech32 hrp string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A String"),(0,i.kt)("h4",{id:"hex_public_key_to_bech32_addresshex-bech32_hrp-optional"},"hex_public_key_to_bech32_address(hex, bech32_hrp (optional))"),(0,i.kt)("p",null,"Returns the bech32 address from the hex public key."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"hex"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Hex encoded public key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bech32_hrp"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The Bech32 hrp string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A String"),(0,i.kt)("h4",{id:"is_address_validaddress-bool"},"is_address_valid(address): bool"),(0,i.kt)("p",null,"Checks if a given address is valid."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," A boolean."),(0,i.kt)("h4",{id:"retryblock_id-str-block"},"retry(block_id): (str, Block)"),(0,i.kt)("p",null,"Retries (promotes or reattaches) the block associated with the given id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the block id and the retried ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h4",{id:"retry_until_includedblock_id-interval-optional-max_attempts-optional-liststr-block"},"retry_until_included(block_id, interval (optional), max_attempts (optional)): list","[(str, Block)]"),(0,i.kt)("p",null,"Retries (promotes or reattaches) the block associated with the given id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"interval"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"5")),(0,i.kt)("td",{parentName:"tr",align:null},"The interval in seconds in which we retry the block.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"max_attempts"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"40")),(0,i.kt)("td",{parentName:"tr",align:null},"The maximum of attempts we retry the block.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the block ids and ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block")," of reattached blocks."),(0,i.kt)("h4",{id:"consolidate_fundsseed-account_index-start_index-end_index-str"},"consolidate_funds(seed, account_index, start_index, end_index): str"),(0,i.kt)("p",null,"Function to consolidate all funds from a range of addresses to the address with the lowest index in that range"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},"The seed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[start_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The lowest address index, funds will be consolidated to this address.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[end_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The address index until which funds will be consolidated")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the address to which the funds got consolidated, if any were available."),(0,i.kt)("h4",{id:"search_addressseed-bech32_hrp-account_index-start_index-end_index-address-int-bool"},"search_address(seed, bech32_hrp, account_index, start_index, end_index, address): (int, bool)"),(0,i.kt)("p",null,"Function to find the index and address type of an address"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[seed]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"str")),(0,i.kt)("td",{parentName:"tr",align:null},"The seed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[bech32_hrp]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string")),(0,i.kt)("td",{parentName:"tr",align:null},"The Bech32 HRP")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[account_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The account index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[start_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The start address index")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[end_index]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"int")),(0,i.kt)("td",{parentName:"tr",align:null},"The end address index (excluded)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[address]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"str")),(0,i.kt)("td",{parentName:"tr",align:null},"The address Bech32 string")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," index and address type of an address."),(0,i.kt)("h4",{id:"reattachblock_id-str-block"},"reattach(block_id): (str, Block)"),(0,i.kt)("p",null,"Reattaches the block associated with the given id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the block id and the reattached ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h4",{id:"promoteblock_id-str-block"},"promote(block_id): (str, Block)"),(0,i.kt)("p",null,"Promotes the block associated with the given id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[block_id]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The block id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")," the block id and the promoted ",(0,i.kt)("a",{parentName:"p",href:"#block"},"Block"),"."),(0,i.kt)("h3",{id:"mqtt-apis"},"MQTT APIs"),(0,i.kt)("h4",{id:"subscribe_topictopic-callback-void"},"subscribe_topic(topic, callback): void"),(0,i.kt)("p",null,"Subscribe a topic and assign the associated callback."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[topic]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The MQTT topic")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"function")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The callback function")))),(0,i.kt)("h4",{id:"subscribe_topicstopics-callback-void"},"subscribe_topics(topics, callback): void"),(0,i.kt)("p",null,"Subscribe topics and assign the associated callbacks, respectively."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[topics]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list[str]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The MQTT topics")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"function")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The callback functions")))),(0,i.kt)("h4",{id:"unsubscribe-void"},"unsubscribe(): void"),(0,i.kt)("p",null,"Unsubscribe all topics."),(0,i.kt)("h4",{id:"disconnect-void"},"disconnect(): void"),(0,i.kt)("p",null,"Disconnect the mqtt broker."),(0,i.kt)("h4",{id:"walletaddress"},"WalletAddress"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"block_metadata_response = {\n    'block_id': str,\n    'parent_block_ids': list[str],\n    'is_solid': bool,\n    'referenced_by_milestone_index': int, # (optional)\n    'milestone_index': int,  # (optional)\n    'ledger_inclusion_state': LedgerInclusionStateDto,  # (optional)\n    'conflict_reason': int,  # (optional)\n    'should_promote:' bool  # (optional)\n    'should_reattach': bool  # (optional)\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#ledgerinclusionstatedto"},"LedgerInclusionStateDto")," for the details of this type."),(0,i.kt)("h4",{id:"balanceaddressresponse"},"BalanceAddressResponse"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"balance_for_address_response = {\n    'address_type': int,\n    'address': str,\n    'balance': int\n}\n")),(0,i.kt)("h4",{id:"addressbalancepair"},"AddressBalancePair"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"address_balance_pair = {\n    'address': str,\n    'balance': int\n    'dust_allowed': bool\n}\n")),(0,i.kt)("h4",{id:"milestonedto"},"MilestoneDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"milestoned_to = {\n    'index': int,\n    'timestamp': int,\n    'block_id':  str\n}\n")),(0,i.kt)("h4",{id:"milestoneutxochanges"},"MilestoneUTXOChanges"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"milestone_utxo_changes = {\n    'index': int,\n    'created_outputs': list[str],\n    'consumed_outputs': list[str]\n}\n")),(0,i.kt)("h4",{id:"receiptdto"},"ReceiptDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"receiptDto = {\n    'receipt': Receipt,\n    'milestone_index': int,\n}\n")),(0,i.kt)("h4",{id:"treasuryresponse"},"TreasuryResponse"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"treasuryResponse = {\n    'milestone_id': str,\n    'amount': int,\n}\n")),(0,i.kt)("h4",{id:"utxoinput"},"UtxoInput"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"utxo_input = {\n    'transaction_id': list[int],\n    'index': int\n}\n")),(0,i.kt)("h4",{id:"outputresponse"},"OutputResponse"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"output_response = {\n    'block_id': str,\n    'transaction_id': str,\n    'output_index': int,\n    'is_spent': bool,\n    'output': OutputDto\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#outputdto"},"OutputDto")," for the details of this type."),(0,i.kt)("h4",{id:"outputdto"},"OutputDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"output_dto = {\n    'treasury': TreasuryOutputDto, # (opitonal)\n    'signature_locked_single': SignatureLockedSingleOutputDto, # (opitonal)\n    'signature_locked_dust_allowance': SignatureLockedDustAllowanceOutputDto # (opitonal)\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#treasuryoutputdto"},"TreasuryOutputDto"),", ",(0,i.kt)("a",{parentName:"p",href:"#signaturelockedsingleoutputdto"},"SignatureLockedSingleOutputDto"),", and ",(0,i.kt)("a",{parentName:"p",href:"#signaturelockedDustallowanceoutputdto"},"SignatureLockedDustAllowanceOutputDto")," for the details of these types."),(0,i.kt)("h4",{id:"signaturelockedsingleoutputdto"},"SignatureLockedSingleOutputDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"signature_locked_single_output_dto = {\n    'kind': int,\n    'address': AddressDto,\n    'amount': int\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#addressdto"},"AddressDto")," for the details of this type."),(0,i.kt)("h4",{id:"signaturelockeddustallowanceoutputdto"},"SignatureLockedDustAllowanceOutputDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"signature_locked_dust_allowance_output_dto = {\n    'kind': int,\n    'address': AddressDto,\n    'amount': int\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#addressdto"},"AddressDto")," for the details of this type."),(0,i.kt)("h4",{id:"pub-struct-treasuryoutputdto-"},"pub struct TreasuryOutputDto {"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"treasury_output_dto = {\n    'kind': int,\n    'amount':int\n}\n")),(0,i.kt)("h4",{id:"addressdto"},"AddressDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"address_dto = {\n    'ed25519': Ed25519AddressDto\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#ed25519addressdto"},"Ed25519AddressDto")," for the details of this type."),(0,i.kt)("h4",{id:"ed25519addressdto"},"Ed25519AddressDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"ed25519_address_dto = {\n    'kind': int,\n    'address': str\n}\n")),(0,i.kt)("h4",{id:"block"},"Block"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"block = {\n    'block_id': str,\n    'network_id': int,\n    'parents': list[str],\n    'payload': Payload, # (optional)\n    'nonce': int\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#payload"},"Payload")," for the details of this type."),(0,i.kt)("h4",{id:"payload"},"Payload"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"payload = {\n    'transaction': list[Transaction], # (optional)\n    'milestone': list[Milestone], # (optional)\n    'indexation': list[Indexation], # (optional)\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#transaction"},"Transaction"),", ",(0,i.kt)("a",{parentName:"p",href:"#milestone"},"Milestone"),", and ",(0,i.kt)("a",{parentName:"p",href:"#indexation"},"Indexation")," for the details of these types."),(0,i.kt)("h4",{id:"transaction"},"Transaction"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"transaction = {\n    'essence': RegularEssence,\n    'unlocks': list[Unlock]\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#regularessence"},"RegularEssence"),", and ",(0,i.kt)("a",{parentName:"p",href:"#unlock"},"Unlock")," for the details of these types."),(0,i.kt)("h4",{id:"milestone"},"Milestone"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"milestone = {\n    'essence': MilestonePayloadEssence,\n    'signatures': list[list[int]]\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#milestonepayloadessence"},"MilestonePayloadEssence")," for the details of this type."),(0,i.kt)("h4",{id:"milestonepayloadessence"},"MilestonePayloadEssence"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"milestone_payload_essence = {\n    'index': int,\n    'timestamp': int,\n    'parents': list[str],\n    'merkle_proof': list[int],\n    'next_pow_score': int,\n    'next_pow_score_milestone_index': int,\n    'public_keys': list[list[int]]\n}\n")),(0,i.kt)("h4",{id:"indexation"},"Indexation"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"indexation = {\n    'index': str,\n    'data': list[int]\n}\n")),(0,i.kt)("h4",{id:"regularessence"},"RegularEssence"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"regular_essence = {\n    'inputs': list[Input],\n    'outputs': list[Output],\n    'payload': list[Payload]\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#input"},"Input"),", ",(0,i.kt)("a",{parentName:"p",href:"#output"},"Output"),", and ",(0,i.kt)("a",{parentName:"p",href:"#payload"},"Payload")," for the details of these types."),(0,i.kt)("h4",{id:"output"},"Output"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"output = {\n    'address': str,\n    'amount': int\n}\n")),(0,i.kt)("h4",{id:"input"},"Input"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"input = {\n    'transaction_id': str,\n    'index': int\n}\n")),(0,i.kt)("h4",{id:"unlock"},"Unlock"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"unlock = {\n    'signature': Ed25519Signature, # (optional)\n    'reference': int # (optional)\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#ed25519Signature"},"Ed25519Signature")," for the details of this type."),(0,i.kt)("h4",{id:"ed25519signature"},"Ed25519Signature"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"ed25519_signature = {\n    'public_key': list[int],\n    'signature': list[int]\n}\n")),(0,i.kt)("h4",{id:"brokeroptions"},"BrokerOptions"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"broker_options = {\n    'automatic_disconnect': bool,\n    'timeout': int,\n    'max_reconnection_attempts': int,\n}\n")),(0,i.kt)("h4",{id:"ledgerinclusionstatedto"},"LedgerInclusionStateDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"ledger_inclusion_state_dto = {\n    'state': str\n}\n")),(0,i.kt)("h4",{id:"nodeinfowrapper"},"NodeInfoWrapper"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"nodeinfo_wrapper{\n    url: str,\n    nodeinfo: info_response,\n}\ninfo_response = {\n    'name': str,\n    'version': str,\n    'is_healthy': bool,\n    'network_id': str,\n    'bech32_hrp': str,\n    'min_pow_score': float,\n    'blocks_per_second': float,\n    'referenced_blocks_per_second': float,\n    'referenced_rate': float,\n    'latest_milestone_timestamp': u64,\n    'latest_milestone_index': int,\n    'confirmed_milestone_index': int,\n    'pruning_index': int,\n    'features': list[str],\n    'min_pow_score': float,\n}\n")),(0,i.kt)("h4",{id:"networkinfo"},"NetworkInfo"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"network_info = {\n    'network': str,\n    'network_id': int,\n    'bech32_hrp': str,\n    'min_pow_score': float,\n    'local_pow': bool,\n    'tips_interval': int,\n}\n")),(0,i.kt)("h4",{id:"peerdto"},"PeerDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"peer_dto = {\n    'id': str,\n    'multi_addresses': list[str],\n    'alias': str, # (optional)\n    'relation': RelationDto,\n    'connected': bool,\n    'gossip': GossipDto, # (optional)\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#relationdto"},"RelationDto")," and ",(0,i.kt)("a",{parentName:"p",href:"#gossipdto"},"GossipDto")," for the details of these types."),(0,i.kt)("h4",{id:"relationdto"},"RelationDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"relation_dto = {\n    'relation': str\n}\n")),(0,i.kt)("h4",{id:"gossipdto"},"GossipDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"gossip_dto = {\n    'heartbeat': HeartbeatDto,\n    'metrics': MetricsDto\n}\n")),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"#heartbeatdto"},"HeartbeatDto")," and ",(0,i.kt)("a",{parentName:"p",href:"#metricsdto"},"MetricsDto")," for the details of these types."),(0,i.kt)("h4",{id:"heartbeatdto"},"HeartbeatDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"heart_beat_dto = {\n    'solid_milestone_index': int,\n    'pruned_milestone_index': int,\n    'latest_milestone_index': int,\n    'connected_neighbors': int,\n    'synced_neighbors': int\n}\n")),(0,i.kt)("h4",{id:"metricsdto"},"MetricsDto"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"metrics_dto = {\n    'received_blocks': int,\n    'known_blocks': int,\n    'received_block_requests': int,\n    'received_milestone_requests': int,\n    'received_heartbeats': int,\n    'sent_blocks': int,\n    'sent_block_requests': int,\n    'sent_milestone_requests': int,\n    'sent_heartbeats': int,\n    'dropped_packets': int,\n}\n")),(0,i.kt)("h4",{id:"addressoutputsoptions"},"AddressOutputsOptions"),(0,i.kt)("p",null,"A dict with the following key/value pairs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"options = {\n    'include_spent': bool,\n    'output_type': string\n}\n")))}N.isMDXComponent=!0},3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var o=a.createContext({}),p=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=p(t.components);return a.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),k=p(n),m=l,c=k["".concat(o,".").concat(m)]||k[m]||u[m]||r;return n?a.createElement(c,i(i({ref:e},s),{},{components:n})):a.createElement(c,i({ref:e},s))}));function m(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=k;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:l,i[1]=d;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"}}]);