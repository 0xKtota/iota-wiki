"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[73469],{3905:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>u});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),i=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},f=function(e){var t=i(e.components);return n.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,d=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),p=i(r),u=o,m=p["".concat(d,".").concat(u)]||p[u]||l[u]||s;return r?n.createElement(m,a(a({ref:t},f),{},{components:r})):n.createElement(m,a({ref:t},f))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=p;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var i=2;i<s;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},51503:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var n=r(87462),o=(r(67294),r(3905));const s={},a="Interface: AddressNftId",c={unversionedId:"references/nodejs/interfaces/AddressNftId",id:"references/nodejs/interfaces/AddressNftId",title:"Interface: AddressNftId",description:"Address with an NftId",source:"@site/content/build/wallet.rs/develop/documentation/docs/references/nodejs/interfaces/AddressNftId.md",sourceDirName:"references/nodejs/interfaces",slug:"/references/nodejs/interfaces/AddressNftId",permalink:"/wallet.rs/develop/references/nodejs/interfaces/AddressNftId",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/references/nodejs/interfaces/AddressNftId.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: AddressNativeTokens",permalink:"/wallet.rs/develop/references/nodejs/interfaces/AddressNativeTokens"},next:{title:"Interface: AddressWithAmount",permalink:"/wallet.rs/develop/references/nodejs/interfaces/AddressWithAmount"}},d={},i=[],f={toc:i};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"interface-addressnftid"},"Interface: AddressNftId"),(0,o.kt)("p",null,"Address with an NftId"))}l.isMDXComponent=!0}}]);