"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[38699],{89740:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),o=(n(67294),n(3905));const l={toc:[]};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Guide Coming Soon",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This how to guide is not available in your language of choice at the moment.\nPlease feel free to browse ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/more_examples"},"more examples")," which may suit your requirements.")))}s.isMDXComponent=!0},60546:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),o=(n(67294),n(3905));const l={toc:[]};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Replace the native token ID",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Before you run the code example, make sure to update the token ID with one which is available in your account. If you\nhaven't done so already, you can follow the ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/native_tokens/mint_native_token"},"how to mint a native token guide"),". If you\ndon't know the token ID you can ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/accounts_and_addresses/check_balance"},"check your accounts balance")," to retrieve\nthe available native tokens in your account.")))}s.isMDXComponent=!0},27359:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),o=(n(67294),n(3905));const l={toc:[]};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Dotenv",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This example uses dotenv, which is not safe for use in production environments.")))}s.isMDXComponent=!0},22339:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>_,contentTitle:()=>g,default:()=>N,frontMatter:()=>b,metadata:()=>y,toc:()=>T});var a=n(87462),o=(n(67294),n(3905)),l=n(54411),s=n(43305),r=n(44393);const i={toc:[]};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Update the token ID"),(0,o.kt)(r.Z,{className:"language-typescript",mdxType:"CodeBlock"},"/**\n * This example will send an NFT\n */\nconst getUnlockedManager = require('./account-manager');\n\nasync function run() {\n    try {\n        const { initLogger } = require('@iota/wallet');\n    initLogger({\n        name: './wallet.log',\n        levelFilter: 'debug',\n        targetExclusions: [\"h2\", \"hyper\", \"rustls\"]\n    });\n        const manager = await getUnlockedManager();\n\n        const account = await manager.getAccount('0');\n\n        await account.sync();\n\n        // Send the full NFT output to the specified address\n        const response = await account.sendNft([{\n            //TODO: Replace with the address of your choice!\n            address: 'rms1qrrv7flg6lz5cssvzv2lsdt8c673khad060l4quev6q09tkm9mgtupgf0h0',\n            //TODO: Replace with an NFT id from your account, you can mint one with `25-mint-nft.js`.\n            nftId: '0x09aa7871e126cc41f1f3784a479a5dd5f23e4dd8b97e932a001e77a11ad42f0c',\n        }]);\n\n        console.log(response);\n\n        console.log(\n            `Check your block on http://localhost:14265/api/core/v2/blocks/${response.blockId}`,\n        );\n    } catch (error) {\n        console.log('Error: ', error);\n    }\n    process.exit(0);\n}\n\nrun();\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,o.kt)(r.Z,{className:"language-bash",mdxType:"CodeBlock"},"node 26-send-nft.js"))}c.isMDXComponent=!0;const d={toc:[]};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  payload: {\n    type: 6,\n    essence: {\n      type: 1,\n      networkId: '8342982141227064571',\n      inputs: [Array],\n      inputsCommitment: '0xd549b56a017e51a4ff053171b55aba62aac59e38a167067769991ccfb663ce1b',\n      outputs: [Array]\n    },\n    unlocks: [ [Object] ]\n  },\n  blockId: '0x40c74e3e9bc8913e3d5c75723d8e018695f3be8a78bd05479500eff4a7a10915',\n  inclusionState: 'Pending',\n  timestamp: '1663000240615',\n  transactionId: '0x03d4fe1335d0880db4163e7cb19735e016c803b015c9e65123e07de579ed41d2',\n  networkId: '8342982141227064571',\n  incoming: false,\n  note: null\n}\nCheck your block on http://localhost:14265/api/core/v2/blocks/0x40c74e3e9bc8913e3d5c75723d8e018695f3be8a78bd05479500eff4a7a10915\n")))}u.isMDXComponent=!0;var p=n(89740);var m=n(27359);const h={toc:[{value:"Run the Example",id:"run-the-example",level:3}]};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(m.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(r.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example send_nft --release\n// In this example we will send an nft\n// Rename `.env.example` to `.env` first\n\nuse std::{env, str::FromStr};\n\nuse dotenv::dotenv;\nuse iota_wallet::{account_manager::AccountManager, iota_client::block::output::NftId, AddressAndNftId, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // This example uses dotenv, which is not safe for use in production\n    dotenv().ok();\n\n    // Create the account manager\n    let manager = AccountManager::builder().finish().await?;\n\n    // Get the account we generated with `01_create_wallet`\n    let account = manager.get_account("Alice").await?;\n\n    // Set the stronghold password\n    manager\n        .set_stronghold_password(&env::var("STRONGHOLD_PASSWORD").unwrap())\n        .await?;\n\n    let outputs = vec![AddressAndNftId {\n        address: "rms1qpszqzadsym6wpppd6z037dvlejmjuke7s24hm95s9fg9vpua7vluaw60xu".to_string(),\n        // Replace with an NftId that is available in the account\n        nft_id: NftId::from_str("0xe192461b30098a5da889ef6abc9e8130bf3b2d980450fa9201e5df404121b932")?,\n    }];\n\n    let transaction = account.send_nft(outputs, None).await?;\n\n    println!(\n        "Transaction: {} Block sent: {}/api/core/v2/blocks/{}",\n        transaction.transaction_id,\n        &env::var("NODE_URL").unwrap(),\n        transaction.block_id.expect("no block created yet")\n    );\n\n    Ok(())\n}\n'),(0,o.kt)("h3",{id:"run-the-example"},"Run the Example"),(0,o.kt)("p",null,"Run the example by running the following command:"),(0,o.kt)(r.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example send_nft --release"))}f.isMDXComponent=!0;const k={toc:[]};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Transaction: 0x4d3e01a0cf6d25e80af5ed774f0f741a476709a5517c21555e2c0351dda81f77 \nBlock sent: http://localhost:14265/api/core/v2/blocks/0x7ad6ce0789ea5b5340b7045a13947af95737b3728410cdde8362021ac57f3731\n")))}v.isMDXComponent=!0;var w=n(60546);const b={title:"Send NFTs",sidebar_label:"Send",description:"How to send NFTs using wallet.rs",image:"/img/logo/iota_mark_light.png",keywords:["how to","send","NFT","send NFT","nodejs","python","rust"]},g=void 0,y={unversionedId:"how_tos/NFT/send_nft",id:"how_tos/NFT/send_nft",title:"Send NFTs",description:"How to send NFTs using wallet.rs",source:"@site/content/build/wallet.rs/develop/documentation/docs/how_tos/NFT/02_send_nft.mdx",sourceDirName:"how_tos/NFT",slug:"/how_tos/NFT/send_nft",permalink:"/wallet.rs/develop/how_tos/NFT/send_nft",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/how_tos/NFT/02_send_nft.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Send NFTs",sidebar_label:"Send",description:"How to send NFTs using wallet.rs",image:"/img/logo/iota_mark_light.png",keywords:["how to","send","NFT","send NFT","nodejs","python","rust"]},sidebar:"docs",previous:{title:"Mint",permalink:"/wallet.rs/develop/how_tos/NFT/mint_nft"},next:{title:"Burn",permalink:"/wallet.rs/develop/how_tos/NFT/burn_nft"}},_={},T=[{value:"Code Example",id:"code-example",level:2},{value:"Expected Output",id:"expected-output",level:2}],x={toc:T};function N(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After you have ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/NFT/mint_nft"},"minted")," an\n",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/develop/explanations/what_is_stardust/tokenization#non-fungible-tokens-nfts"},"NFT"),",\nyou can easily send it by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"Account.send_nft(addresses_nft_ids, options)")," function."),(0,o.kt)("p",null,"As with any output, you can set a\n",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/develop/explanations/what_is_stardust/storage_deposit"},"storage deposit")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/develop/explanations/what_is_stardust/unlock_conditions"},"output unlock conditions"),".\nKeep in mind that if you set unlock conditions, whoever you send the native tokens to may need to\n",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/outputs_and_transactions/claim_outputs"},"claim them"),"."),(0,o.kt)("h2",{id:"code-example"},"Code Example"),(0,o.kt)(w.ZP,{mdxType:"ReplaceNFTId"}),(0,o.kt)("p",null,"The following example will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account manager."),(0,o.kt)("li",{parentName:"ol"},"Get Alice's account which was ",(0,o.kt)("a",{parentName:"li",href:"/wallet.rs/develop/how_tos/accounts_and_addresses/create_a_wallet_account"},"created in the first guide"),"."),(0,o.kt)("li",{parentName:"ol"},"Define the type of native token and amount to send."),(0,o.kt)("li",{parentName:"ol"},"Send the native tokens calling the ",(0,o.kt)("inlineCode",{parentName:"li"},"Account.send_nft(addresses_nft_ids, options)")," function.")),(0,o.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(f,{mdxType:"RustCode"})),(0,o.kt)(s.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(c,{mdxType:"NodejsCode"})),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(p.ZP,{mdxType:"PythonCode"}))),(0,o.kt)("h2",{id:"expected-output"},"Expected Output"),(0,o.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(v,{mdxType:"RustOutput"})),(0,o.kt)(s.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(u,{mdxType:"NodejsOutput"})),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(p.ZP,{mdxType:"PythonOutput"}))))}N.isMDXComponent=!0},43305:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),o=n(86010);const l="tabItem__kUE";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(l,s),hidden:n},t)}},54411:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),l=n(86010),s=n(51048),r=n(33609),i=n(1943),c=n(72957);const d="tabList_fbd4",u="tabItem_v5XY";function p(e){var t,n;const{lazy:s,block:p,defaultValue:m,values:h,groupId:f,className:k}=e,v=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),w=null!=h?h:v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,r.l)(w,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==g&&!w.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+w.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:_}=(0,i.U)(),[T,x]=(0,o.useState)(g),N=[],{blockElementScrollPositionUntilNextRender:I}=(0,c.o5)();if(null!=f){const e=y[f];null!=e&&e!==T&&w.some((t=>t.value===e))&&x(e)}const Z=e=>{const t=e.currentTarget,n=N.indexOf(t),a=w[n].value;a!==T&&(I(t),x(a),null!=f&&_(f,String(a)))},D=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=N.indexOf(e.currentTarget)+1;n=null!=(a=N[t])?a:N[0];break}case"ArrowLeft":{var o;const t=N.indexOf(e.currentTarget)-1;n=null!=(o=N[t])?o:N[N.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",d)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},k)},w.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>N.push(e),onKeyDown:D,onFocus:Z,onClick:Z},s,{className:(0,l.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),s?(0,o.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,s.Z)();return o.createElement(p,(0,a.Z)({key:String(t)},e))}}}]);