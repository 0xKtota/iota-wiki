"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[62482],{87358:function(e,n,t){t.d(n,{ZP:function(){return c}});var o=t(87462),r=t(63366),i=(t(67294),t(3905)),a=["components"],s={toc:[]};function c(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/examples"},"examples")," folder."))}c.isMDXComponent=!0},1279:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return p}});var o=t(87462),r=t(63366),i=(t(67294),t(3905)),a=t(87308),s=t(87358),c=["components"],u={title:"How To Generate A Mnemonic"},l=void 0,m={unversionedId:"libraries/rust/how_to/generate_mnemonic",id:"libraries/rust/how_to/generate_mnemonic",title:"How To Generate A Mnemonic",description:"Run it with",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/rust/how_to/generate_mnemonic.mdx",sourceDirName:"libraries/rust/how_to",slug:"/libraries/rust/how_to/generate_mnemonic",permalink:"/iota.rs/develop/libraries/rust/how_to/generate_mnemonic",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/rust/how_to/generate_mnemonic.mdx",tags:[],version:"current",frontMatter:{title:"How To Generate A Mnemonic"},sidebar:"docs",previous:{title:"How To Post A Block",permalink:"/iota.rs/develop/libraries/rust/how_to/post_block"},next:{title:"How To Generate Addresses",permalink:"/iota.rs/develop/libraries/rust/how_to/generate_addresses"}},d={},p=[],g={toc:p};function f(e){var n=e.components,t=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example generate_mnemonic --release\n\nuse iota_client::{Client, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    let mnemonic = Client::generate_mnemonic()?;\n\n    println!("Mnemonic: {mnemonic}");\n\n    Ok(())\n}\n'),(0,i.kt)("p",null,"Run it with"),(0,i.kt)(a.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example generate_mnemonic --release"),(0,i.kt)(s.ZP,{mdxType:"MoreExamples"}))}f.isMDXComponent=!0}}]);