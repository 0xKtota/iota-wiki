"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[55405],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),g=i,m=u["".concat(s,".").concat(g)]||u[g]||c[g]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63866:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const a={description:"Getting started with the official IOTA Client Library Java binding.",image:"/img/logo/iota_mark_light.png",keywords:["Java","Rust","jar","Gradle"]},o="Getting Started with Java",l={unversionedId:"libraries/java/getting_started",id:"libraries/java/getting_started",title:"Getting Started with Java",description:"Getting started with the official IOTA Client Library Java binding.",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/java/getting_started.md",sourceDirName:"libraries/java",slug:"/libraries/java/getting_started",permalink:"/iota.rs/develop/libraries/java/getting_started",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/java/getting_started.md",tags:[],version:"current",frontMatter:{description:"Getting started with the official IOTA Client Library Java binding.",image:"/img/logo/iota_mark_light.png",keywords:["Java","Rust","jar","Gradle"]},sidebar:"docs",previous:{title:"api_reference",permalink:"/iota.rs/develop/libraries/python/api_reference"},next:{title:"How To Get Node Info",permalink:"/iota.rs/develop/libraries/java/how_to/get_node_info"}},s={},d=[{value:"Build the JAR for your operating system (Linux, macOS, Windows)",id:"build-the-jar-for-your-operating-system-linux-macos-windows",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started-with-java"},"Getting Started with Java"),(0,i.kt)("p",null,"To use the IOTA Java Client Library in your Java project, you must first build the library JAR for your operating\nsystem."),(0,i.kt)("h2",{id:"build-the-jar-for-your-operating-system-linux-macos-windows"},"Build the JAR for your operating system (Linux, macOS, Windows)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To build your JAR, you must ensure that you have the latest stable version of Rust installed.\nVisit ",(0,i.kt)("a",{parentName:"strong",href:"https://www.rust-lang.org/tools/install"},"Install Rust")," for installing Rust.\nIn addition, make sure you have the latest Java Development Kit (JDK) installed.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Clone the repository: ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/iotaledger/iota.rs")),(0,i.kt)("li",{parentName:"ol"},"Change directory: ",(0,i.kt)("inlineCode",{parentName:"li"},"cd iota.rs/bindings/java/iota-client-java")),(0,i.kt)("li",{parentName:"ol"},"If needed make ",(0,i.kt)("inlineCode",{parentName:"li"},"gradlew")," executable: ",(0,i.kt)("inlineCode",{parentName:"li"},"chmod +x gradlew")),(0,i.kt)("li",{parentName:"ol"},"Build your JAR: ",(0,i.kt)("inlineCode",{parentName:"li"},"./gradlew jar")),(0,i.kt)("li",{parentName:"ol"},"Find the produced JAR in: ",(0,i.kt)("inlineCode",{parentName:"li"},"build/libs/")),(0,i.kt)("li",{parentName:"ol"},"Add the JAR as a library to your Java project.")),(0,i.kt)("p",null,"After you linked the library, you can create a Client instance and interface with it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.iota.Client;\nimport org.iota.types.ClientConfig;\nimport org.iota.types.ClientException;\nimport org.iota.types.responses.NodeInfoResponse;\n\npublic class HelloWorld {\n    public static void main(String[] args) throws ClientException {\n        // Build the client.\n        Client client = new Client(new ClientConfig().withNodes(new String[]{"https://api.testnet.shimmer.network"}));\n\n        // Get the node information for a given node.\n        NodeInfoResponse response = client.getNodeInfo();\n\n        // Print the URL of the node that was requested.\n        System.out.println(response.getNodeUrl());\n\n        // Print the node information for the requested node.\n        System.out.println(response.getNodeInfo());\n    }\n}\n')))}c.isMDXComponent=!0}}]);