"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[96702],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,p=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=s(n),g=i,h=d["".concat(p,".").concat(g)]||d[g]||c[g]||a;return n?r.createElement(h,o(o({ref:e},u),{},{components:n})):r.createElement(h,o({ref:e},u))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59652:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={description:"Getting started with the official IOTA Wallet Library Software Python binding.",image:"/img/logo/wallet_light.png",keywords:["Python","install","pip","unpack","getting started"]},p="Getting Started with Python",s={unversionedId:"getting_started/python",id:"getting_started/python",title:"Getting Started with Python",description:"Getting started with the official IOTA Wallet Library Software Python binding.",source:"@site/content/build/wallet.rs/production/documentation/docs/getting_started/python.md",sourceDirName:"getting_started",slug:"/getting_started/python",permalink:"/wallet.rs/getting_started/python",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/production/documentation/content/build/wallet.rs/production/documentation/docs/getting_started/python.md",tags:[],version:"current",frontMatter:{description:"Getting started with the official IOTA Wallet Library Software Python binding.",image:"/img/logo/wallet_light.png",keywords:["Python","install","pip","unpack","getting started"]},sidebar:"docs",previous:{title:"Getting Started with Node.js",permalink:"/wallet.rs/getting_started/nodejs"},next:{title:"Getting Started with Java",permalink:"/wallet.rs/getting_started/java"}},u={},c=[{value:"Security",id:"security",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],d={toc:c};function g(t){var e=t.components,n=(0,i.Z)(t,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started-with-python"},"Getting Started with Python"),(0,a.kt)("h2",{id:"security"},"Security"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"In a production setup, do not store passwords in the host's environment variables or in the source code. For reference, review our ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/chrysalis-docs/guides/backup_securityy"},"backup and security recommendations")," for production setups.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To get the python binding working, you need to leverage pre-built python libraries for linux, MacOs, or Windows. You can install these to your python environment (3.6+) using ",(0,a.kt)("em",{parentName:"p"},"pip")," . The binding is automatically generated using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wallet.rs/actions/workflows/python_binding_publish.yml"},"GitHub actions"),"."),(0,a.kt)("p",null,"You can download the latest artifacts for a major python version using the ",(0,a.kt)("a",{parentName:"p",href:"https://nightly.link/iotaledger/wallet.rs/workflows/python_binding_publish/dev"},"nighly.link service"),".  "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Download zip file for the given os and pyversion. "),(0,a.kt)("li",{parentName:"ol"},"Unpack wheel file ( ",(0,a.kt)("em",{parentName:"li"},".whl")," )."),(0,a.kt)("li",{parentName:"ol"},"Install it via ",(0,a.kt)("em",{parentName:"li"},"pip")," by running the following command:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install <wheel_file>\n")),(0,a.kt)("p",null,"Once it has been installed, you can double-check the installation using ",(0,a.kt)("em",{parentName:"p"},"pip")," :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip list\n")),(0,a.kt)("p",null,"The pip list should now include the ",(0,a.kt)("em",{parentName:"p"},"iota-wallet-python-binding"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"Package                    Version\n-------------------------- -------\niota-wallet-python-binding 0.1.0\n")),(0,a.kt)("p",null,"Once your python environment has installed the ",(0,a.kt)("inlineCode",{parentName:"p"},"iota-wallet-python-binding"),", you can start developing using the python binding."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To use the ",(0,a.kt)("em",{parentName:"p"},"iota_wallet")," you will need to add an import statement:  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import iota_wallet\n")),(0,a.kt)("p",null,"If you'd like more information on the ",(0,a.kt)("em",{parentName:"p"},"iota_wallet"),", you can print the documentation using the following snippet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"print(iota_wallet.__doc__)\n")))}g.isMDXComponent=!0}}]);