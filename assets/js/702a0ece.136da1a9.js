"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[6448],{49906:function(e,o,n){n.r(o),n.d(o,{assets:function(){return u},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return k}});var t=n(87462),r=n(63366),i=(n(67294),n(3905)),s=n(69319),c=n(76084),a=["components"],l={title:"How To Create A Block"},d=void 0,p={unversionedId:"libraries/nodejs/how_to/create_block",id:"libraries/nodejs/how_to/create_block",title:"How To Create A Block",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/5_create_block.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/create_block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/create_block",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/5_create_block.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"How To Create A Block"},sidebar:"docs",previous:{title:"How To Generate Addresses",permalink:"/iota.rs/develop/libraries/nodejs/how_to/generate_addresses"},next:{title:"How To Get A Block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_block"}},u={},k=[],m={toc:k};function b(e){var o=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},m,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\nrequire('dotenv').config({ path: '../.env' });\n\n// Run with command:\n// node ./dist/06_simple_block.js\n\n// In this example we will send a block without a payload\nasync function run() {\n    initLogger();\n    if (!process.env.NODE_URL) {\n        throw new Error('.env NODE_URL is undefined, see .env.example');\n    }\n\n    const client = new Client({\n        // Insert your node URL in the .env.\n        nodes: [process.env.NODE_URL],\n        localPow: true,\n    });\n\n    try {\n        // Create block with no payload\n        const blockIdAndBlock = await client.buildAndPostBlock();\n        console.log('Block:', blockIdAndBlock, '\\n');\n\n        console.log(\n            `Empty block sent: ${process.env.EXPLORER_URL}/block/${blockIdAndBlock[0]}`,\n        );\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun().then(() => process.exit());\n"),(0,i.kt)(c.ZP,{mdxType:"MoreExamples"}))}b.isMDXComponent=!0},76084:function(e,o,n){n.d(o,{ZP:function(){return a}});var t=n(87462),r=n(63366),i=(n(67294),n(3905)),s=["components"],c={toc:[]};function a(e){var o=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,t.Z)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}a.isMDXComponent=!0}}]);