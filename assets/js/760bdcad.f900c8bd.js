"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[69607],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||s[m]||i;return n?o.createElement(f,a(a({ref:t},u),{},{components:n})):o.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},69405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const i={description:"INX-MQTT provides an event-based real-time streaming node API.",image:"/img/Banner/banner_hornet.png",keywords:["IOTA Node","Hornet Node","INX","MQTT","IOTA","Shimmer","Node Software","Welcome","explanation"]},a="Welcome to INX-MQTT",c={unversionedId:"welcome",id:"welcome",title:"Welcome to INX-MQTT",description:"INX-MQTT provides an event-based real-time streaming node API.",source:"@site/content/build/inx-mqtt/documentation/docs/welcome.md",sourceDirName:".",slug:"/welcome",permalink:"/inx-mqtt/develop/welcome",draft:!1,editUrl:"https://github.com/gohornet/inx-mqtt/edit/develop/documentation/docs/content/build/inx-mqtt/documentation/docs/welcome.md",tags:[],version:"current",frontMatter:{description:"INX-MQTT provides an event-based real-time streaming node API.",image:"/img/Banner/banner_hornet.png",keywords:["IOTA Node","Hornet Node","INX","MQTT","IOTA","Shimmer","Node Software","Welcome","explanation"]},sidebar:"mySidebar",next:{title:"Core Configuration",permalink:"/inx-mqtt/develop/configuration"}},l={},p=[{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"API",id:"api",level:2},{value:"Source Code",id:"source-code",level:2}],u={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"welcome-to-inx-mqtt"},"Welcome to INX-MQTT"),(0,r.kt)("p",null,"INX-MQTT provides an event-based real-time streaming node API.\nThe built-in MQTT broker offers a list of topics clients can subscribe to, to receive the latest blocks and outputs attached on the tangle."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"The recommended setup is to use the provided ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/iotaledger/inx-mqtt"},"Docker images"),".\nThese images are also used in our ",(0,r.kt)("a",{parentName:"p",href:"http://wiki.iota.org/hornet/develop/how_tos/using_docker"},"HORNET recommended setup using Docker"),"."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The MQTT broker is configured by default to connect to your HORNET instance."),(0,r.kt)("p",null,"You can find all the configuration options in the ",(0,r.kt)("a",{parentName:"p",href:"/inx-mqtt/develop/configuration"},"configuration section"),"."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"The MQTT broker exposes a custom set of topics that can be used by wallets and applications to receive events from nodes."),(0,r.kt)("p",null,"You can find more information about the API in the ",(0,r.kt)("a",{parentName:"p",href:"/inx-mqtt/develop/api_reference"},"API reference section"),"."),(0,r.kt)("h2",{id:"source-code"},"Source Code"),(0,r.kt)("p",null,"The source code of the project is available on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/inx-mqtt"},"GitHub"),"."))}s.isMDXComponent=!0}}]);