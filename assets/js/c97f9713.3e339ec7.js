"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[23474],{38250:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(22122),a=t(19756),i=(t(67294),t(3905)),l=["components"],s={},o="Getting Started",c={unversionedId:"libraries/c/getting_started",id:"libraries/c/getting_started",isDocsHomePage:!1,title:"Getting Started",description:"The C bindings allow for you to build a Streams API which can be pulled into other languages.",source:"@site/external/streams/documentation/docs/libraries/c/getting_started.md",sourceDirName:"libraries/c",slug:"/libraries/c/getting_started",permalink:"/streams/libraries/c/getting_started",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Examples",permalink:"/streams/libraries/c/examples"},next:{title:"Iota Streams C Bindings API Reference",permalink:"/streams/libraries/c/api_reference"}},u=[{value:"Starting a Channel",id:"starting-a-channel",children:[]}],d={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"The C bindings allow for you to build a Streams API which can be pulled into other languages.\nThe streams instance underlying the bindings is built with the ",(0,i.kt)("inlineCode",{parentName:"p"},"sync-client")," flag to\nensure a compatible client interface using the ",(0,i.kt)("inlineCode",{parentName:"p"},"iota.rs iota-client")," crate. "),(0,i.kt)("p",null,"Before building anything you'll need to make sure you have ",(0,i.kt)("inlineCode",{parentName:"p"},"cmake")," installed on your\nmachine."),(0,i.kt)("p",null,"To build the library, first make sure you're in the c directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd bindings/c\n")),(0,i.kt)("p",null,"Update the flags in the ",(0,i.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," and run ",(0,i.kt)("inlineCode",{parentName:"p"},"cmake .")," to\nprepare the installation files. "),(0,i.kt)("h4",{id:"options-for-cmakelliststxt"},"Options for CMakeLlists.txt"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NO_STD"),": Enable no_std build, without iota_client (when ON, ",(0,i.kt)("inlineCode",{parentName:"li"},"SYNC_CLIENT")," isnt supported)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SYNC_CLIENT"),": Enable sync transport via iota_client, otherwise it's going to be Bucket which can only be used for tests"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"STATIC"),": Build static library when ON, otherwise dynamic library"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"RELEASE"),": Build in release or debug mode (when ON, builds release, when OFF, build debug)")),(0,i.kt)("p",null,"To build the library run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"make\n")),(0,i.kt)("p",null,"This generates a binary library to be included into a project. This can be either: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"iota_streams_c_static")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"iota_streams_c.so")," (Unix)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"iota_streams_c.dll")," (Windows)")),(0,i.kt)("p",null,"An example of the header file can be found in ",(0,i.kt)("inlineCode",{parentName:"p"},"include/channels.h"),"."),(0,i.kt)("h3",{id:"starting-a-channel"},"Starting a Channel"),(0,i.kt)("p",null,"Once the package has been built, you can pull it into a script file like so: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#include "iota_streams/channels.h"\n#include <stdio.h>\n\nint main()\n{\n uint8_t multi_branching = 0;\n char seed[] = "Some unique seed";\n char const encoding[] = "utf-8";\n const size_t size = 1024;\n char const *url = "https://chrysalis-nodes.iota.org";\n \n transport_t *tsp = tsp_client_new_from_url(url);\n // Author constructor requires: (seed, encoding, payload size, multi branching, transport client)\n author_t *auth = auth_new(seed, encoding, size, multi_branching, tsp);\n address_t const *ann_link = auth_send_announce(auth);\n printf("Announcement message sent");\n \n char const *ann_address_inst_str = get_address_inst_str(ann_link);\n char const *ann_address_id_str = get_address_id_str(ann_link);\n // Link used by subscribers to attach to instance\n printf("Link: %s:%s\\n", ann_address_inst_str, ann_address_id_str);\n \n // Clean up\n drop_str(ann_address_inst_str);\n drop_str(ann_address_id_str);\n drop_address(ann_link);\n auth_drop(auth);\n tsp_drop(tsp);\n}\n')))}p.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),c=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,h=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(h,l(l({ref:n},u),{},{components:t})):r.createElement(h,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);