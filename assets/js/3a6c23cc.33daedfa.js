"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[98870],{61902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var o=t(87462),i=(t(67294),t(3905)),s=t(44393),r=t(59728);const a={title:"How To Build An Output"},d=void 0,u={unversionedId:"libraries/nodejs/how_to/build_output",id:"libraries/nodejs/how_to/build_output",title:"How To Build An Output",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/1_build_output.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/build_output",permalink:"/iota.rs/develop/libraries/nodejs/how_to/build_output",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/1_build_output.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"How To Build An Output"},sidebar:"docs",previous:{title:"How To Get Node Info",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_node_info"},next:{title:"How To Get An Output",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_output"}},l={},p=[],c={toc:p};function m(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\nrequire('dotenv').config({ path: '../.env' });\n\n// Run with command:\n// node ./dist/11_build_output.js\n\n// Build a basic output\nasync function run() {\n    initLogger();\n    if (!process.env.NODE_URL) {\n        throw new Error('.env NODE_URL is undefined, see .env.example');\n    }\n\n    const client = new Client({\n        nodes: [process.env.NODE_URL],\n    });\n\n    try {\n        if (!process.env.NON_SECURE_USE_OF_DEVELOPMENT_MNEMONIC_1) {\n            throw new Error('.env mnemonic is undefined, see .env.example');\n        }\n        const secretManager = {\n            Mnemonic: process.env.NON_SECURE_USE_OF_DEVELOPMENT_MNEMONIC_1,\n        };\n\n        const addresses = await client.generateAddresses(secretManager, {\n            range: {\n                start: 0,\n                end: 1,\n            },\n        });\n\n        const hexAddress = await client.bech32ToHex(addresses[0]);\n\n        // most simple basic output\n        const basicOutput = await client.buildBasicOutput({\n            amount: '1000000',\n            unlockConditions: [\n                {\n                    type: 0,\n                    address: {\n                        type: 0,\n                        pubKeyHash: hexAddress,\n                    },\n                },\n            ],\n        });\n\n        console.log(basicOutput);\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun();\n"),(0,i.kt)(r.ZP,{mdxType:"MoreExamples"}))}m.isMDXComponent=!0},59728:(e,n,t)=>{t.d(n,{ZP:()=>r});var o=t(87462),i=(t(67294),t(3905));const s={toc:[]};function r(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}r.isMDXComponent=!0}}]);