"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[43224],{86636:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return k}});var n=r(22122),o=r(19756),i=(r(67294),r(3905)),a=["components"],c={title:"Network Token Migration",description:"We describe the process of migrating Tokens from the Legacy Network into the new Chrysalis Network"},s="Network Token migration:",l={unversionedId:"learn/networks/network-token-migration",id:"learn/networks/network-token-migration",isDocsHomePage:!1,title:"Network Token Migration",description:"We describe the process of migrating Tokens from the Legacy Network into the new Chrysalis Network",source:"@site/docs/learn/networks/network-token-migration.md",sourceDirName:"learn/networks",slug:"/learn/networks/network-token-migration",permalink:"/docs/learn/networks/network-token-migration",editUrl:"https://github.com/iota-community/iota-wiki/edit/develop/docs/learn/networks/network-token-migration.md",tags:[],version:"current",frontMatter:{title:"Network Token Migration",description:"We describe the process of migrating Tokens from the Legacy Network into the new Chrysalis Network"},sidebar:"learn",previous:{title:"Testnets",permalink:"/docs/learn/networks/testnets"},next:{title:"Glossary",permalink:"/docs/learn/resource-materials/glossary"}},u=[{value:"Thanks a lot",id:"thanks-a-lot",children:[]},{value:"The WIKI Team",id:"the-wiki-team",children:[]}],p={toc:u};function k(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"network-token-migration"},"Network Token migration:"),(0,i.kt)("p",null,"We are looking for contributors that would explain how the Migration of tokens from the IOTA legacy network to the IOTA Chrysalis Network takes place.\\\n\\\nIf You feel you can participate in this topic, please use the editor button below and start contributing."),(0,i.kt)("h3",{id:"thanks-a-lot"},"Thanks a lot"),(0,i.kt)("h3",{id:"the-wiki-team"},"The WIKI Team"))}k.isMDXComponent=!0},3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),k=l(r),f=o,m=k["".concat(s,".").concat(f)]||k[f]||p[f]||i;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=k;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"}}]);