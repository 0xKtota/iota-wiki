"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[28597],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return p}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),s=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},i=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=s(n),p=r,f=m["".concat(u,".").concat(p)]||m[p]||d[p]||a;return n?o.createElement(f,c(c({ref:t},i),{},{components:n})):o.createElement(f,c({ref:t},i))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<a;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50630:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var o=n(87462),r=n(63366),a=(n(67294),n(3905)),c=n(34259),l=n(18679),u=["components"],s={description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","deposit","transfer","chain","Rust","Solo","how to"]},i="The Common Account",d={unversionedId:"guide/core_concepts/accounts/the-common-account",id:"guide/core_concepts/accounts/the-common-account",title:"The Common Account",description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",source:"@site/content/build/wasp/develop/documentation/docs/guide/core_concepts/accounts/the-common-account.mdx",sourceDirName:"guide/core_concepts/accounts",slug:"/guide/core_concepts/accounts/the-common-account",permalink:"/smart-contracts/develop/guide/core_concepts/accounts/the-common-account",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/core_concepts/accounts/the-common-account.mdx",tags:[],version:"current",frontMatter:{description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","deposit","transfer","chain","Rust","Solo","how to"]},sidebar:"tutorialSidebar",previous:{title:"View Account Balances",permalink:"/smart-contracts/develop/guide/core_concepts/accounts/view-account-balances"},next:{title:"Testing Smart Contracts with Solo",permalink:"/smart-contracts/develop/guide/solo/what-is-solo"}},m={},p=[{value:"<code>harvest</code>",id:"harvest",level:2},{value:"Parameters",id:"parameters",level:3}],f={toc:p};function h(e){var t=e.components,n=(0,r.Z)(e,u);return(0,a.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"the-common-account"},"The Common Account"),(0,a.kt)("p",null,"The common account is controlled by the chain owner defined in the chain ",(0,a.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/core_concepts/core_contracts/root"},"root contract"),"."),(0,a.kt)("p",null,"This account is used to store funds collected by fees, or sent to the chain's L1 address, or to invalid contracts (this\nway the funds are not permanently lost)."),(0,a.kt)("h2",{id:"harvest"},(0,a.kt)("inlineCode",{parentName:"h2"},"harvest")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"harvest")," entry point allows the chain owner to move all funds available in the common account to their own L2\naccount."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ParamForceMinimumBaseTokens"),": The amount of base tokens to leave in the common account (default: 3000).")),(0,a.kt)(c.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Solo (Schema)",value:"soloctx"},{label:"Rust (Schema)",value:"rust"},{label:"Go (Schema)",value:"go"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"solo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"req := solo.NewCallParams(accounts.Contract.Name, accounts.FuncHarvest.Name)\n_, err := chain.PostRequestSync(req.WithMaxAffordableGasBudget(), wallet)\nrequire.NoError(t, err)\n"))),(0,a.kt)(l.Z,{value:"soloctx",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"w := coreaccounts.ScFuncs.Harvest(ctx.Sign(wallet))\nw.Func.TransferBaseTokens(1).PostToChain(chainID)\nrequire.NoError(t, ctx.Err)\n"))),(0,a.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let h = coreaccounts::ScFuncs::harvest(ctx);\nh.func.transfer_base_tokens(1).post_to_chain(chainID);\n"))),(0,a.kt)(l.Z,{value:"go",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"w := coreaccounts.ScFuncs.Harvest(ctx)\nw.Func.TransferBaseTokens(1).PostToChain(chainID)\n")))))}h.isMDXComponent=!0},18679:function(e,t,n){n.d(t,{Z:function(){return c}});var o=n(67294),r=n(86010),a="tabItem_Ymn6";function c(e){var t=e.children,n=e.hidden,c=e.className;return o.createElement("div",{role:"tabpanel",className:(0,r.Z)(a,c),hidden:n},t)}},34259:function(e,t,n){n.d(t,{Z:function(){return p}});var o=n(87462),r=n(67294),a=n(86010),c=n(51048),l=n(33609),u=n(1943),s=n(72957),i="tabList__CuJ",d="tabItem_LNqP";function m(e){var t,n,c=e.lazy,m=e.block,p=e.defaultValue,f=e.values,h=e.groupId,v=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(g,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(t=null!=p?p:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:b[0].props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,u.U)(),T=w.tabGroupChoices,N=w.setTabGroupChoices,O=(0,r.useState)(k),x=O[0],_=O[1],E=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var P=T[h];null!=P&&P!==x&&g.some((function(e){return e.value===P}))&&_(P)}var C=function(e){var t=e.currentTarget,n=E.indexOf(t),o=g[n].value;o!==x&&(S(t),_(o),null!=h&&N(h,String(o)))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o,r=E.indexOf(e.currentTarget)+1;n=null!=(o=E[r])?o:E[0];break;case"ArrowLeft":var a,c=E.indexOf(e.currentTarget)-1;n=null!=(a=E[c])?a:E[E.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,a.Z)("tabs-container",i)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":m},v)},g.map((function(e){var t=e.value,n=e.label,c=e.attributes;return r.createElement("li",(0,o.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return E.push(e)},onKeyDown:j,onFocus:C,onClick:C},c,{className:(0,a.Z)("tabs__item",d,null==c?void 0:c.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),c?(0,r.cloneElement)(b.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function p(e){var t=(0,c.Z)();return r.createElement(m,(0,o.Z)({key:String(t)},e))}}}]);