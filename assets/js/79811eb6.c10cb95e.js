"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[4031],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},74071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={description:"Solidity smart contract example.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","EVM","Solidity","how to"]},a="Solidity Smart Contract Example",c={unversionedId:"guide/evm/examples/introduction",id:"guide/evm/examples/introduction",title:"Solidity Smart Contract Example",description:"Solidity smart contract example.",source:"@site/content/build/wasp/develop/documentation/docs/guide/evm/examples/introduction.md",sourceDirName:"guide/evm/examples",slug:"/guide/evm/examples/introduction",permalink:"/smart-contracts/develop/guide/evm/examples/introduction",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/evm/examples/introduction.md",tags:[],version:"current",frontMatter:{description:"Solidity smart contract example.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","EVM","Solidity","how to"]},sidebar:"tutorialSidebar",previous:{title:"EVM Tooling",permalink:"/smart-contracts/develop/guide/evm/tooling"},next:{title:"ERC20 Example",permalink:"/smart-contracts/develop/guide/evm/examples/ERC20"}},l={},p=[],s={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"solidity-smart-contract-example"},"Solidity Smart Contract Example"),(0,o.kt)("p",null,"Solidity smart contracts on IOTA Smart Contracts are compatible with Solidity smart contracts on any other network, so most smart contracts will work directly without any modification. To get a rough indication of how a simple Solidity smart contract looks like, see the example below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma solidity ^0.8.6;\n// No SafeMath needed for Solidity 0.8+\n\ncontract Counter { \n   \n    uint256 private _count;\n        \n    function current() public view returns (uint256) {\n        return _count;\n    }   \n\n    function increment() public {\n        _count += 1;\n    }   \n\n    function decrement() public {\n        _count -= 1;\n    }   \n}\n")),(0,o.kt)("p",null,"For more information, please visit the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/"},"official Solidity documentation"),"."))}m.isMDXComponent=!0}}]);