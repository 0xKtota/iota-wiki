"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[4578],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return s}});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var d=n.createContext({}),o=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=o(t.components);return n.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),k=o(a),s=l,N=k["".concat(d,".").concat(s)]||k[s]||m[s]||r;return a?n.createElement(N,i(i({ref:e},u),{},{components:a})):n.createElement(N,i({ref:e},u))}));function s(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=k;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},57010:function(t,e,a){a.r(e),a.d(e,{assets:function(){return u},contentTitle:function(){return d},default:function(){return s},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return m}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),i=["components"],p={description:"This section describes the configuration parameters and their types for your HORNET node.",image:"/img/Banner/banner_hornet_configuration.png",keywords:["IOTA Node","HORNET Node","Configuration","JSON","Customize","Config","reference"]},d="Configuration",o={unversionedId:"references/configuration",id:"references/configuration",title:"Configuration",description:"This section describes the configuration parameters and their types for your HORNET node.",source:"@site/content/build/hornet/develop/documentation/docs/references/configuration.md",sourceDirName:"references",slug:"/references/configuration",permalink:"/hornet/develop/references/configuration",draft:!1,editUrl:"https://github.com/iotaledger/hornet/edit/develop/documentation/content/build/hornet/develop/documentation/docs/references/configuration.md",tags:[],version:"current",frontMatter:{description:"This section describes the configuration parameters and their types for your HORNET node.",image:"/img/Banner/banner_hornet_configuration.png",keywords:["IOTA Node","HORNET Node","Configuration","JSON","Customize","Config","reference"]},sidebar:"mySidebar",previous:{title:"Run a Private Tangle",permalink:"/hornet/develop/how_tos/private_tangle"},next:{title:"Peering",permalink:"/hornet/develop/references/peering"}},u={},m=[{value:'<a id="app"></a> 1. Application',id:"-1-application",level:2},{value:'<a id="node"></a> 2. Node',id:"-2-node",level:2},{value:'<a id="protocol"></a> 3. Protocol',id:"-3-protocol",level:2},{value:'<a id="protocol_basetoken"></a> BaseToken',id:"-basetoken",level:3},{value:'<a id="protocol_publickeyranges"></a> PublicKeyRanges',id:"-publickeyranges",level:3},{value:'<a id="db"></a> 4. Database',id:"-4-database",level:2},{value:'<a id="pow"></a> 5. Proof of Work',id:"-5-proof-of-work",level:2},{value:'<a id="p2p"></a> 6. Peer to Peer',id:"-6-peer-to-peer",level:2},{value:'<a id="p2p_connectionmanager"></a> ConnectionManager',id:"-connectionmanager",level:3},{value:'<a id="p2p_db"></a> Database',id:"-database",level:3},{value:'<a id="p2p_gossip"></a> Gossip',id:"-gossip",level:3},{value:'<a id="p2p_autopeering"></a> Autopeering',id:"-autopeering",level:3},{value:'<a id="requests"></a> 7. Requests',id:"-7-requests",level:2},{value:'<a id="tangle"></a> 8. Tangle',id:"-8-tangle",level:2},{value:'<a id="snapshots"></a> 9. Snapshots',id:"-9-snapshots",level:2},{value:'<a id="snapshots_downloadurls"></a> DownloadURLs',id:"-downloadurls",level:3},{value:'<a id="pruning"></a> 10. Pruning',id:"-10-pruning",level:2},{value:'<a id="pruning_milestones"></a> Milestones',id:"-milestones",level:3},{value:'<a id="pruning_size"></a> Size',id:"-size",level:3},{value:'<a id="profiling"></a> 11. Profiling',id:"-11-profiling",level:2},{value:'<a id="restapi"></a> 12. RestAPI',id:"-12-restapi",level:2},{value:'<a id="restapi_jwtauth"></a> JWT Auth',id:"-jwt-auth",level:3},{value:'<a id="restapi_pow"></a> Proof of Work',id:"-proof-of-work",level:3},{value:'<a id="restapi_limits"></a> Limits',id:"-limits",level:3},{value:'<a id="warpsync"></a> 13. WarpSync',id:"-13-warpsync",level:2},{value:'<a id="tipsel"></a> 14. Tipselection',id:"-14-tipselection",level:2},{value:'<a id="tipsel_nonlazy"></a> NonLazy',id:"-nonlazy",level:3},{value:'<a id="tipsel_semilazy"></a> SemiLazy',id:"-semilazy",level:3},{value:'<a id="receipts"></a> 15. Receipts',id:"-15-receipts",level:2},{value:'<a id="receipts_backup"></a> Backup',id:"-backup",level:3},{value:'<a id="receipts_validator"></a> Validator',id:"-validator",level:3},{value:'<a id="receipts_validator_api"></a> API',id:"-api",level:3},{value:'<a id="receipts_validator_coordinator"></a> Coordinator',id:"-coordinator",level:3},{value:'<a id="prometheus"></a> 16. Prometheus',id:"-16-prometheus",level:2},{value:'<a id="prometheus_fileservicediscovery"></a> FileServiceDiscovery',id:"-fileservicediscovery",level:3},{value:'<a id="inx"></a> 17. INX',id:"-17-inx",level:2},{value:'<a id="inx_pow"></a> Proof of Work',id:"-proof-of-work-1",level:3},{value:'<a id="debug"></a> 18. Debug',id:"-18-debug",level:2}],k={toc:m};function s(t){var e=t.components,p=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},k,p,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"HORNET Node Configuration",src:a(41573).Z,width:"862",height:"200"})),(0,r.kt)("p",null,"HORNET uses a JSON standard format as a config file. If you are unsure about JSON syntax, you can find more information in the ",(0,r.kt)("a",{parentName:"p",href:"https://www.json.org"},"official JSON specs"),"."),(0,r.kt)("p",null,"You can change the path of the config file by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"-c")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--config")," argument while executing ",(0,r.kt)("inlineCode",{parentName:"p"},"hornet")," executable."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hornet -c config_example.json\n")),(0,r.kt)("p",null,"You can always get the most up-to-date description of the config parameters by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hornet -h --full\n")),(0,r.kt)("h2",{id:"-1-application"},(0,r.kt)("a",{id:"app"})," 1. Application"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"checkForUpdates"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to check for updates of the application or not"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"stopGracePeriod"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum time to wait for background processes to finish during shutdown before terminating the app"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"5m"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "app": {\n      "checkForUpdates": true,\n      "stopGracePeriod": "5m"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-2-node"},(0,r.kt)("a",{id:"node"})," 2. Node"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"profile"),(0,r.kt)("td",{parentName:"tr",align:null},"The profile the node runs with"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"auto"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"alias"),(0,r.kt)("td",{parentName:"tr",align:null},"Set an alias to identify a node"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"HORNET node"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "node": {\n      "profile": "auto",\n      "alias": "HORNET node"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-3-protocol"},(0,r.kt)("a",{id:"protocol"})," 3. Protocol"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"targetNetworkName"),(0,r.kt)("td",{parentName:"tr",align:null},"The initial network name on which this node operates on"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"testnet"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"milestonePublicKeyCount"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of public keys in a milestone"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#protocol_basetoken"},"baseToken")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for baseToken"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#protocol_publickeyranges"},"publicKeyRanges")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for publicKeyRanges"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"see example below")))),(0,r.kt)("h3",{id:"-basetoken"},(0,r.kt)("a",{id:"protocol_basetoken"})," BaseToken"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"Shimmer"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tickerSymbol"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token ticker symbol"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"SMR"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unit"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token unit"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"SMR"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subunit"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token subunit"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"glow"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"decimals"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token amount of decimals"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"useMetricPrefix"),(0,r.kt)("td",{parentName:"tr",align:null},"The base token uses the metric prefix"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h3",{id:"-publickeyranges"},(0,r.kt)("a",{id:"protocol_publickeyranges"})," PublicKeyRanges"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"The ed25519 public key of the coordinator in hex representation"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"0000000000000000000000000000000000000000000000000000000000000000"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"The start milestone index of the public key"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"endIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"The end milestone index of the public key"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"0")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "protocol": {\n      "targetNetworkName": "testnet",\n      "milestonePublicKeyCount": 7,\n      "baseToken": {\n        "name": "Shimmer",\n        "tickerSymbol": "SMR",\n        "unit": "SMR",\n        "subunit": "glow",\n        "decimals": 6,\n        "useMetricPrefix": false\n      },\n      "publicKeyRanges": [\n        {\n          "key": "13ccdc2f5d3d9a3ebe06074c6b49b49090dd79ca72e04abf20f10f871ad8293b",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "f18f3f6a2d940b9bacd3084713f6877db22064ada4335cb53ae1da75044f978d",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "b3b4c920909720ba5f7c30dddc0f9169bf8243b529b601fc4776b8cb0a8ca253",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "bded01e93adf7a623118fd375fd93dc7d7ddf222324239cae33e4e4c47ec3b0e",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "488ac3fb1b8df5ef8c4acb4ef1f3e3d039c5d7197db87094a61af66320722313",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "61f95fed30b6e9bf0b2d03938f56d35789ff7f0ea122d01c5c1b7e869525e218",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "4587040de05907b70806c8725bdae1f7370785993b2a139208e247885d4ed1f8",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "aa6b36116206cc7d6c8f688e22113aa46f0de88d51aa7acf881ec2bd9d015f62",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "ede9760c7f2aaa4618a58a1357705cdc1874962ad369309543230394bb77548b",\n          "start": 0,\n          "end": 0\n        },\n        {\n          "key": "98d1f907caa99f9320f0e0eb64a5cf208751c2171c7938da5659328061e82a8e",\n          "start": 0,\n          "end": 0\n        }\n      ]\n    }\n  }\n')),(0,r.kt)("h2",{id:"-4-database"},(0,r.kt)("a",{id:"db"})," 4. Database"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"engine"),(0,r.kt)("td",{parentName:"tr",align:null},"The used database engine (pebble/rocksdb/mapdb)"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"rocksdb"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the database folder"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"testnet/database"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"autoRevalidation"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to automatically start revalidation on startup if the database is corrupted"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "db": {\n      "engine": "rocksdb",\n      "path": "testnet/database",\n      "autoRevalidation": false\n    }\n  }\n')),(0,r.kt)("h2",{id:"-5-proof-of-work"},(0,r.kt)("a",{id:"pow"})," 5. Proof of Work"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"refreshTipsInterval"),(0,r.kt)("td",{parentName:"tr",align:null},"Interval for refreshing tips during PoW for blocks passed without parents via API"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"5s"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "pow": {\n      "refreshTipsInterval": "5s"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-6-peer-to-peer"},(0,r.kt)("a",{id:"p2p"})," 6. Peer to Peer"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindMultiAddresses"),(0,r.kt)("td",{parentName:"tr",align:null},"The bind addresses for this node"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"/ip4/0.0.0.0/tcp/15600",(0,r.kt)("br",null),"/ip6/::/tcp/15600")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#p2p_connectionmanager"},"connectionManager")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for connectionManager"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identityPrivateKey"),(0,r.kt)("td",{parentName:"tr",align:null},"Private key used to derive the node identity (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'""')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#p2p_db"},"db")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for Database"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"reconnectInterval"),(0,r.kt)("td",{parentName:"tr",align:null},"The time to wait before trying to reconnect to a disconnected peer"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"30s"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#p2p_gossip"},"gossip")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for gossip"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#p2p_autopeering"},"autopeering")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for autopeering"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-connectionmanager"},(0,r.kt)("a",{id:"p2p_connectionmanager"})," ConnectionManager"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"highWatermark"),(0,r.kt)("td",{parentName:"tr",align:null},"The threshold up on which connections count truncates to the lower watermark"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lowWatermark"),(0,r.kt)("td",{parentName:"tr",align:null},"The minimum connections count to hold after the high watermark was reached"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"5")))),(0,r.kt)("h3",{id:"-database"},(0,r.kt)("a",{id:"p2p_db"})," Database"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the p2p database"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"testnet/p2pstore"')))),(0,r.kt)("h3",{id:"-gossip"},(0,r.kt)("a",{id:"p2p_gossip"})," Gossip"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unknownPeersLimit"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum amount of unknown peers a gossip protocol connection is established to"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"streamReadTimeout"),(0,r.kt)("td",{parentName:"tr",align:null},"The read timeout for reads from the gossip stream"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"1m"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"streamWriteTimeout"),(0,r.kt)("td",{parentName:"tr",align:null},"The write timeout for writes to the gossip stream"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"10s"')))),(0,r.kt)("h3",{id:"-autopeering"},(0,r.kt)("a",{id:"p2p_autopeering"})," Autopeering"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the autopeering plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"Bind address for autopeering"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"0.0.0.0:14626"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"entryNodes"),(0,r.kt)("td",{parentName:"tr",align:null},"List of autopeering entry nodes to use"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"/dns/entry-hornet-0.h.testnet.shimmer.network/udp/14626/autopeering/ANrRwJv2xs1S7TonyenM9qzkB8hfZ4Y6Gg2xsNUGozTJ",(0,r.kt)("br",null),"/dns/entry-hornet-1.h.testnet.shimmer.network/udp/14626/autopeering/3bTUFwKXzhHSv2kBs6gja8BbeawHNzMwUdJraXWmLkNk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"entryNodesPreferIPv6"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines if connecting over IPv6 is preferred for entry nodes"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"runAsEntryNode"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the node should act as an autopeering entry node"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "p2p": {\n      "bindMultiAddresses": [\n        "/ip4/0.0.0.0/tcp/15600",\n        "/ip6/::/tcp/15600"\n      ],\n      "connectionManager": {\n        "highWatermark": 10,\n        "lowWatermark": 5\n      },\n      "identityPrivateKey": "",\n      "db": {\n        "path": "testnet/p2pstore"\n      },\n      "reconnectInterval": "30s",\n      "gossip": {\n        "unknownPeersLimit": 4,\n        "streamReadTimeout": "1m",\n        "streamWriteTimeout": "10s"\n      },\n      "autopeering": {\n        "enabled": false,\n        "bindAddress": "0.0.0.0:14626",\n        "entryNodes": [\n          "/dns/entry-hornet-0.h.testnet.shimmer.network/udp/14626/autopeering/ANrRwJv2xs1S7TonyenM9qzkB8hfZ4Y6Gg2xsNUGozTJ",\n          "/dns/entry-hornet-1.h.testnet.shimmer.network/udp/14626/autopeering/3bTUFwKXzhHSv2kBs6gja8BbeawHNzMwUdJraXWmLkNk"\n        ],\n        "entryNodesPreferIPv6": false,\n        "runAsEntryNode": false\n      }\n    }\n  }\n')),(0,r.kt)("h2",{id:"-7-requests"},(0,r.kt)("a",{id:"requests"})," 7. Requests"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"discardOlderThan"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum time a request stays in the request queue"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"15s"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pendingReEnqueueInterval"),(0,r.kt)("td",{parentName:"tr",align:null},"The interval the pending requests are re-enqueued"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"5s"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "requests": {\n      "discardOlderThan": "15s",\n      "pendingReEnqueueInterval": "5s"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-8-tangle"},(0,r.kt)("a",{id:"tangle"})," 8. Tangle"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"milestoneTimeout"),(0,r.kt)("td",{parentName:"tr",align:null},"The interval milestone timeout events are fired if no new milestones are received"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"30s"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxDeltaBlockYoungestConeRootIndexToCMI"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum allowed delta value for the YCRI of a given block in relation to the current CMI before it gets lazy"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxDeltaBlockOldestConeRootIndexToCMI"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum allowed delta value between OCRI of a given block in relation to the current CMI before it gets semi-lazy"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"whiteFlagParentsSolidTimeout"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines the the maximum duration for the parents to become solid during white flag confirmation API or INX call"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"2s"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "tangle": {\n      "milestoneTimeout": "30s",\n      "maxDeltaBlockYoungestConeRootIndexToCMI": 8,\n      "maxDeltaBlockOldestConeRootIndexToCMI": 13,\n      "whiteFlagParentsSolidTimeout": "2s"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-9-snapshots"},(0,r.kt)("a",{id:"snapshots"})," 9. Snapshots"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"depth"),(0,r.kt)("td",{parentName:"tr",align:null},"The depth, respectively the starting point, at which a snapshot of the ledger is generated"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"50")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interval"),(0,r.kt)("td",{parentName:"tr",align:null},"Interval, in milestones, at which snapshot files are created (snapshots are only created if the node is synced)"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"200")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fullPath"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the full snapshot file"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"testnet/snapshots/full_snapshot.bin"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deltaPath"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the delta snapshot file"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"testnet/snapshots/delta_snapshot.bin"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deltaSizeThresholdPercentage"),(0,r.kt)("td",{parentName:"tr",align:null},"Create a full snapshot if the size of a delta snapshot reaches a certain percentage of the full snapshot (0.0 = always create delta snapshot to keep ms diff history)"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"50.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deltaSizeThresholdMinSize"),(0,r.kt)("td",{parentName:"tr",align:null},"The minimum size of the delta snapshot file before the threshold percentage condition is checked (below that size the delta snapshot is always created)"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"50M"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#snapshots_downloadurls"},"downloadURLs")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for downloadURLs"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"see example below")))),(0,r.kt)("h3",{id:"-downloadurls"},(0,r.kt)("a",{id:"snapshots_downloadurls"})," DownloadURLs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"full"),(0,r.kt)("td",{parentName:"tr",align:null},"URL of the full snapshot file"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'""')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"delta"),(0,r.kt)("td",{parentName:"tr",align:null},"URL of the delta snapshot file"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'""')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "snapshots": {\n      "depth": 50,\n      "interval": 200,\n      "fullPath": "testnet/snapshots/full_snapshot.bin",\n      "deltaPath": "testnet/snapshots/delta_snapshot.bin",\n      "deltaSizeThresholdPercentage": 50,\n      "deltaSizeThresholdMinSize": "50M",\n      "downloadURLs": [\n        {\n          "full": "https://files.testnet.shimmer.network/snapshots/latest-full_snapshot.bin",\n          "delta": "https://files.testnet.shimmer.network/snapshots/latest-delta_snapshot.bin"\n        }\n      ]\n    }\n  }\n')),(0,r.kt)("h2",{id:"-10-pruning"},(0,r.kt)("a",{id:"pruning"})," 10. Pruning"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pruning_milestones"},"milestones")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for milestones"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pruning_size"},"size")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for size"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pruneReceipts"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete old receipts data from the database"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h3",{id:"-milestones"},(0,r.kt)("a",{id:"pruning_milestones"})," Milestones"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete old block data from the database based on maximum milestones to keep"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxMilestonesToKeep"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum amount of milestone cones to keep in the database"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"60480")))),(0,r.kt)("h3",{id:"-size"},(0,r.kt)("a",{id:"pruning_size"})," Size"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete old block data from the database based on maximum database size"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"targetSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Target size of the database"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"30GB"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"thresholdPercentage"),(0,r.kt)("td",{parentName:"tr",align:null},"The percentage the database size gets reduced if the target size is reached"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"10.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cooldownTime"),(0,r.kt)("td",{parentName:"tr",align:null},"Cooldown time between two pruning by database size events"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"5m"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "pruning": {\n      "milestones": {\n        "enabled": false,\n        "maxMilestonesToKeep": 60480\n      },\n      "size": {\n        "enabled": true,\n        "targetSize": "30GB",\n        "thresholdPercentage": 10,\n        "cooldownTime": "5m"\n      },\n      "pruneReceipts": false\n    }\n  }\n')),(0,r.kt)("h2",{id:"-11-profiling"},(0,r.kt)("a",{id:"profiling"})," 11. Profiling"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the profiling plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"The bind address on which the profiler listens on"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"localhost:6060"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "profiling": {\n      "enabled": false,\n      "bindAddress": "localhost:6060"\n    }\n  }\n')),(0,r.kt)("h2",{id:"-12-restapi"},(0,r.kt)("a",{id:"restapi"})," 12. RestAPI"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the REST API plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"The bind address on which the REST API listens on"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"0.0.0.0:14265"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"publicRoutes"),(0,r.kt)("td",{parentName:"tr",align:null},"The HTTP REST routes which can be called without authorization. Wildcards using ","*"," are allowed"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"/health",(0,r.kt)("br",null),"/api/routes",(0,r.kt)("br",null),"/api/core/v2/info",(0,r.kt)("br",null),"/api/core/v2/tips",(0,r.kt)("br",null),"/api/core/v2/blocks","*",(0,r.kt)("br",null),"/api/core/v2/transactions","*",(0,r.kt)("br",null),"/api/core/v2/milestones","*",(0,r.kt)("br",null),"/api/core/v2/outputs","*",(0,r.kt)("br",null),"/api/core/v2/treasury",(0,r.kt)("br",null),"/api/core/v2/receipts","*",(0,r.kt)("br",null),"/api/debug/v1/","*",(0,r.kt)("br",null),"/api/indexer/v1/","*",(0,r.kt)("br",null),"/api/mqtt/v1",(0,r.kt)("br",null),"/api/participation/v1/events","*",(0,r.kt)("br",null),"/api/participation/v1/outputs","*",(0,r.kt)("br",null),"/api/participation/v1/addresses","*")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"protectedRoutes"),(0,r.kt)("td",{parentName:"tr",align:null},"The HTTP REST routes which need to be called with authorization. Wildcards using ","*"," are allowed"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/","*")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"debugRequestLoggerEnabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the debug logging for requests should be enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#restapi_jwtauth"},"jwtAuth")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for JWT Auth"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#restapi_pow"},"pow")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for Proof of Work"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#restapi_limits"},"limits")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for limits"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-jwt-auth"},(0,r.kt)("a",{id:"restapi_jwtauth"})," JWT Auth"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"salt"),(0,r.kt)("td",{parentName:"tr",align:null},"Salt used inside the JWT tokens for the REST API. Change this to a different value to invalidate JWT tokens not matching this new value"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"HORNET"')))),(0,r.kt)("h3",{id:"-proof-of-work"},(0,r.kt)("a",{id:"restapi_pow"})," Proof of Work"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the node does PoW if blocks are received via API"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workerCount"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of workers used for calculating PoW when issuing blocks via API"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"1")))),(0,r.kt)("h3",{id:"-limits"},(0,r.kt)("a",{id:"restapi_limits"})," Limits"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxBodyLength"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of characters that the body of an API call may contain"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"1M"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxResults"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of results that may be returned by an endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"1000")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "restAPI": {\n      "enabled": true,\n      "bindAddress": "0.0.0.0:14265",\n      "publicRoutes": [\n        "/health",\n        "/api/routes",\n        "/api/core/v2/info",\n        "/api/core/v2/tips",\n        "/api/core/v2/blocks*",\n        "/api/core/v2/transactions*",\n        "/api/core/v2/milestones*",\n        "/api/core/v2/outputs*",\n        "/api/core/v2/treasury",\n        "/api/core/v2/receipts*",\n        "/api/debug/v1/*",\n        "/api/indexer/v1/*",\n        "/api/mqtt/v1",\n        "/api/participation/v1/events*",\n        "/api/participation/v1/outputs*",\n        "/api/participation/v1/addresses*"\n      ],\n      "protectedRoutes": [\n        "/api/*"\n      ],\n      "debugRequestLoggerEnabled": false,\n      "jwtAuth": {\n        "salt": "HORNET"\n      },\n      "pow": {\n        "enabled": false,\n        "workerCount": 1\n      },\n      "limits": {\n        "maxBodyLength": "1M",\n        "maxResults": 1000\n      }\n    }\n  }\n')),(0,r.kt)("h2",{id:"-13-warpsync"},(0,r.kt)("a",{id:"warpsync"})," 13. WarpSync"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the warpsync plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"advancementRange"),(0,r.kt)("td",{parentName:"tr",align:null},"The used advancement range per warpsync checkpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"150")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "warpsync": {\n      "enabled": true,\n      "advancementRange": 150\n    }\n  }\n')),(0,r.kt)("h2",{id:"-14-tipselection"},(0,r.kt)("a",{id:"tipsel"})," 14. Tipselection"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the tipselection plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tipsel_nonlazy"},"nonLazy")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for nonLazy"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tipsel_semilazy"},"semiLazy")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for semiLazy"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-nonlazy"},(0,r.kt)("a",{id:"tipsel_nonlazy"})," NonLazy"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retentionRulesTipsLimit"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of current tips for which the retention rules are checked (non-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"100")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxReferencedTipAge"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum time a tip remains in the tip pool after it was referenced by the first block (non-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"3s"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxChildren"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum amount of references by other blocks before the tip is removed from the tip pool (non-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"30")))),(0,r.kt)("h3",{id:"-semilazy"},(0,r.kt)("a",{id:"tipsel_semilazy"})," SemiLazy"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retentionRulesTipsLimit"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of current tips for which the retention rules are checked (semi-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxReferencedTipAge"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum time a tip remains in the tip pool after it was referenced by the first block (semi-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"3s"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxChildren"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum amount of references by other blocks before the tip is removed from the tip pool (semi-lazy)"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"2")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "tipsel": {\n      "enabled": true,\n      "nonLazy": {\n        "retentionRulesTipsLimit": 100,\n        "maxReferencedTipAge": "3s",\n        "maxChildren": 30\n      },\n      "semiLazy": {\n        "retentionRulesTipsLimit": 20,\n        "maxReferencedTipAge": "3s",\n        "maxChildren": 2\n      }\n    }\n  }\n')),(0,r.kt)("h2",{id:"-15-receipts"},(0,r.kt)("a",{id:"receipts"})," 15. Receipts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the receipts plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#receipts_backup"},"backup")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for backup"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#receipts_validator"},"validator")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for validator"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-backup"},(0,r.kt)("a",{id:"receipts_backup"})," Backup"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to backup receipts in the backup folder"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the receipts backup folder"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"receipts"')))),(0,r.kt)("h3",{id:"-validator"},(0,r.kt)("a",{id:"receipts_validator"})," Validator"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"validate"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to validate receipts"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ignoreSoftErrors"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to ignore soft errors and not panic if one is encountered"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#receipts_validator_api"},"api")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for API"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#receipts_validator_coordinator"},"coordinator")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for coordinator"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-api"},(0,r.kt)("a",{id:"receipts_validator_api"})," API"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the legacy node API"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"http://localhost:14266"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout of API calls"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"5s"')))),(0,r.kt)("h3",{id:"-coordinator"},(0,r.kt)("a",{id:"receipts_validator_coordinator"})," Coordinator"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the legacy coordinator"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"UDYXTZBE9GZGPM9SSQV9LTZNDLJIZMPUVVXYXFYVBLIEUHLSEWFTKZZLXYRHHWVQV9MNNX9KZC9D9UZWZ"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"merkleTreeDepth"),(0,r.kt)("td",{parentName:"tr",align:null},"Depth of the Merkle tree of the coordinator"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"24")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "receipts": {\n      "enabled": true,\n      "backup": {\n        "enabled": false,\n        "path": "receipts"\n      },\n      "validator": {\n        "validate": false,\n        "ignoreSoftErrors": false,\n        "api": {\n          "address": "http://localhost:14266",\n          "timeout": "5s"\n        },\n        "coordinator": {\n          "address": "UDYXTZBE9GZGPM9SSQV9LTZNDLJIZMPUVVXYXFYVBLIEUHLSEWFTKZZLXYRHHWVQV9MNNX9KZC9D9UZWZ",\n          "merkleTreeDepth": 24\n        }\n      }\n    }\n  }\n')),(0,r.kt)("h2",{id:"-16-prometheus"},(0,r.kt)("a",{id:"prometheus"})," 16. Prometheus"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the prometheus plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"The bind address on which the Prometheus exporter listens on"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"localhost:9311"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#prometheus_fileservicediscovery"},"fileServiceDiscovery")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for fileServiceDiscovery"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"databaseMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include database metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodeMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include node metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gossipMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include gossip metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cachesMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include caches metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"restAPIMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include restAPI metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"inxMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include INX metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"migrationMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include migration metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"debugMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include debug metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"goMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include go metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"processMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include process metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"promhttpMetrics"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to include promhttp metrics"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h3",{id:"-fileservicediscovery"},(0,r.kt)("a",{id:"prometheus_fileservicediscovery"})," FileServiceDiscovery"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the plugin should write a Prometheus 'file SD' file"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"The path where to write the 'file SD' file to"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"target.json"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},"The target to write into the 'file SD' file"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"localhost:9311"')))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "prometheus": {\n      "enabled": false,\n      "bindAddress": "localhost:9311",\n      "fileServiceDiscovery": {\n        "enabled": false,\n        "path": "target.json",\n        "target": "localhost:9311"\n      },\n      "databaseMetrics": true,\n      "nodeMetrics": true,\n      "gossipMetrics": true,\n      "cachesMetrics": true,\n      "restAPIMetrics": true,\n      "inxMetrics": true,\n      "migrationMetrics": true,\n      "debugMetrics": false,\n      "goMetrics": false,\n      "processMetrics": false,\n      "promhttpMetrics": false\n    }\n  }\n')),(0,r.kt)("h2",{id:"-17-inx"},(0,r.kt)("a",{id:"inx"})," 17. INX"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the INX plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bindAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"The bind address on which the INX can be accessed from"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"localhost:9029"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#inx_pow"},"pow")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for Proof of Work"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"-proof-of-work-1"},(0,r.kt)("a",{id:"inx_pow"})," Proof of Work"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workerCount"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of workers used for calculating PoW when issuing blocks via INX. (use 0 to use the maximum possible)"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"0")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "inx": {\n      "enabled": false,\n      "bindAddress": "localhost:9029",\n      "pow": {\n        "workerCount": 0\n      }\n    }\n  }\n')),(0,r.kt)("h2",{id:"-18-debug"},(0,r.kt)("a",{id:"debug"})," 18. Debug"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the debug plugin is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "debug": {\n      "enabled": false\n    }\n  }\n')))}s.isMDXComponent=!0},41573:function(t,e,a){e.Z=a.p+"assets/images/banner_hornet_configuration-cdfbdbb68e66ee0ab595ed2a430d218e.png"}}]);