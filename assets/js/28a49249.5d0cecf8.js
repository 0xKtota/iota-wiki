"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[62035],{19419:function(e,n,o){o.r(n),o.d(n,{assets:function(){return l},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return p}});var t=o(87462),r=o(63366),i=(o(67294),o(3905)),a=o(69319),s=o(43791),c=["components"],d={title:"How To Generate A Mnemonic"},m=void 0,u={unversionedId:"libraries/nodejs/how_to/generate_mnemonic",id:"libraries/nodejs/how_to/generate_mnemonic",title:"How To Generate A Mnemonic",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/3_generate_mnemonic.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/generate_mnemonic",permalink:"/iota.rs/develop/libraries/nodejs/how_to/generate_mnemonic",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/3_generate_mnemonic.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"How To Generate A Mnemonic"},sidebar:"docs",previous:{title:"How To Get An Output",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_output"},next:{title:"How To Generate Addresses",permalink:"/iota.rs/develop/libraries/nodejs/how_to/generate_addresses"}},l={},p=[],g={toc:p};function f(e){var n=e.components,o=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,t.Z)({},g,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\n\n// Run with command:\n// node ./dist/01_mnemonic.js\n\n// In this example we will generate a random BIP39 mnemonic\nasync function run() {\n    initLogger();\n\n    const client = new Client({\n        // We don't need a node to generate a mnemonic\n        offline: true,\n    });\n\n    try {\n        const mnemonic = await client.generateMnemonic();\n\n        console.log('Mnemonic: ' + mnemonic);\n        // Example output:\n        // Mnemonic: endorse answer radar about source reunion marriage tag sausage weekend frost daring base attack because joke dream slender leisure group reason prepare broken river\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun().then(() => process.exit());\n"),(0,i.kt)(s.ZP,{mdxType:"MoreExamples"}))}f.isMDXComponent=!0},43791:function(e,n,o){o.d(n,{ZP:function(){return c}});var t=o(87462),r=o(63366),i=(o(67294),o(3905)),a=["components"],s={toc:[]};function c(e){var n=e.components,o=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}c.isMDXComponent=!0}}]);