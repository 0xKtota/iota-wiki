"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[17314],{88658:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return y}});var i=n(83117),r=n(80102),a=(n(67294),n(3905)),l=["components"],o=[{value:"API Reference",id:"api-reference",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2},{value:"Install the library:",id:"install-the-library",children:[],level:2},{value:"Build",id:"build",children:[],level:2},{value:"Minimum Requirements",id:"minimum-requirements",children:[],level:2},{value:"NodeJS Usage",id:"nodejs-usage",children:[],level:2},{value:"Web Setup",id:"web-setup",children:[{value:"Rollup",id:"rollup",children:[],level:3},{value:"Webpack",id:"webpack",children:[],level:3},{value:"Web Usage",id:"web-usage",children:[],level:3}],level:2}],s={toc:o};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"iota-identity-wasm"},"IOTA Identity WASM"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This is the beta version of the official WASM bindings for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/identity.rs"},"IOTA Identity"),".")),(0,a.kt)("h2",{id:"api-reference"},(0,a.kt)("a",{parentName:"h2",href:"https://wiki.iota.org/identity.rs/libraries/wasm/api_reference"},"API Reference")),(0,a.kt)("h2",{id:"examples"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/iotaledger/identity.rs/blob/main/bindings/wasm/examples/README.md"},"Examples")),(0,a.kt)("h2",{id:"install-the-library"},"Install the library:"),(0,a.kt)("p",null,"Latest Release: this version matches the main branch of this repository, is stable and will have changelogs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @iota/identity-wasm\n")),(0,a.kt)("p",null,"Development Release: this version matches the dev branch of this repository, may see frequent breaking changes and has the latest code changes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @iota/identity-wasm@dev\n")),(0,a.kt)("h2",{id:"build"},"Build"),(0,a.kt)("p",null,"Alternatively, you can build the bindings if you have Rust installed. If not, refer to ",(0,a.kt)("a",{parentName:"p",href:"https://rustup.rs"},"rustup.rs")," for the installation. Then install the necessary dependencies using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,a.kt)("p",null,"and then build the bindings for ",(0,a.kt)("inlineCode",{parentName:"p"},"node.js")," with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build:nodejs\n")),(0,a.kt)("p",null,"or for the ",(0,a.kt)("inlineCode",{parentName:"p"},"web")," with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build:web\n")),(0,a.kt)("h2",{id:"minimum-requirements"},"Minimum Requirements"),(0,a.kt)("p",null,"The minimum supported version for node is: ",(0,a.kt)("inlineCode",{parentName:"p"},"v16.0.0")),(0,a.kt)("h2",{id:"nodejs-usage"},"NodeJS Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const identity = require(\'@iota/identity-wasm/node\')\n\n// Generate a new KeyPair\nconst key = new identity.KeyPair(identity.KeyType.Ed25519)\n\n// Create a new DID Document with the KeyPair as the default verification method\nconst doc = new identity.Document(key)\n// const doc = new identity.Document(key, "dev") // if using the devnet\n\n// Sign the DID Document with the private key\ndoc.signSelf(key, doc.defaultSigningMethod().id.toString());\n\n// Create a default client instance for the mainnet\nconst config = identity.Config.fromNetwork(identity.Network.mainnet());\n// const config = identity.Config.fromNetwork(identity.Network.devnet()); // if using the devnet\nconst client = identity.Client.fromConfig(config);\n\n// Publish the DID Document to the IOTA Tangle\n// The message can be viewed at https://explorer.iota.org/<mainnet|devnet>/transaction/<messageId>\nclient.publishDocument(doc)\n    .then((receipt) => {\n        let explorer = identity.ExplorerUrl.mainnet();\n        // let explorer = identity.ExplorerUrl.devnet(); // if using the devnet\n        console.log("Tangle Message Receipt: ", receipt)\n        console.log("Tangle Message Url:", explorer.messageUrl(receipt.messageId))\n    })\n    .catch((error) => {\n        console.error("Error: ", error)\n        throw error\n    })\n')),(0,a.kt)("h2",{id:"web-setup"},"Web Setup"),(0,a.kt)("p",null,"The library loads the WASM file with an HTTP GET request, so the .wasm file must be copied to the root of the dist folder."),(0,a.kt)("h3",{id:"rollup"},"Rollup"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("inlineCode",{parentName:"li"},"rollup-plugin-copy"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install rollup-plugin-copy --save-dev\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add the copy plugin usage to the ",(0,a.kt)("inlineCode",{parentName:"li"},"plugins")," array under ",(0,a.kt)("inlineCode",{parentName:"li"},"rollup.config.js"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Include the copy plugin\nimport copy from 'rollup-plugin-copy'\n\n// Add the copy plugin to the `plugins` array of your rollup config:\ncopy({\n  targets: [{\n    src: 'node_modules/@iota/identity-wasm/web/identity_wasm_bg.wasm',\n    dest: 'public',\n    rename: 'identity_wasm_bg.wasm'\n  }]\n})\n")),(0,a.kt)("h3",{id:"webpack"},"Webpack"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("inlineCode",{parentName:"li"},"copy-webpack-plugin"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install copy-webpack-plugin --save-dev\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Include the copy plugin\nconst CopyWebPlugin= require('copy-webpack-plugin');\n\n// Add the copy plugin to the `plugins` array of your webpack config:\n\nnew CopyWebPlugin({\n  patterns: [\n    {\n      from: 'node_modules/@iota/identity-wasm/web/identity_wasm_bg.wasm',\n      to: 'identity_wasm_bg.wasm'\n    }\n  ]\n}),\n")),(0,a.kt)("h3",{id:"web-usage"},"Web Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import * as identity from "@iota/identity-wasm/web";\n\nidentity.init().then(() => {\n  const key = new identity.KeyPair(identity.KeyType.Ed25519)\n  const doc = new identity.Document(key)\n  // const doc = new identity.Document(key, "dev") // if using the devnet\n  console.log("Key Pair: ", key)\n  console.log("DID Document: ", doc)\n});\n\n// or\n\n(async () => {\n  await identity.init()\n  const key = new identity.KeyPair(identity.KeyType.Ed25519)\n  const doc = new identity.Document(key)\n  // const doc = new identity.Document(key, "dev") // if using the devnet\n  console.log("Key Pair: ", key)\n  console.log("DID Document: ", doc)\n})()\n\n// Default path is "identity_wasm_bg.wasm", but you can override it like this\nawait identity.init("./static/identity_wasm_bg.wasm");\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"identity.init().then(<callback>)")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"await identity.init()")," is required to load the wasm file (from the server if not available, because of that it will only be slow for the first time)"))}d.isMDXComponent=!0;var c=["components"],p={title:"Getting Started with WASM",sidebar_label:"Getting Started",description:"Getting started with the IOTA Identity WASM Library.",image:"/img/Identity_icon.png",keywords:["WASM","install","npm","yarn","build","nodejs","webpack"]},u=void 0,m={unversionedId:"libraries/wasm/getting_started",id:"libraries/wasm/getting_started",title:"Getting Started with WASM",description:"Getting started with the IOTA Identity WASM Library.",source:"@site/external/identity.rs/documentation/docs/libraries/wasm/getting_started.md",sourceDirName:"libraries/wasm",slug:"/libraries/wasm/getting_started",permalink:"/identity.rs/libraries/wasm/getting_started",editUrl:"https://github.com/iotaledger/identity.rs/edit/dev/external/identity.rs/documentation/docs/libraries/wasm/getting_started.md",tags:[],version:"current",frontMatter:{title:"Getting Started with WASM",sidebar_label:"Getting Started",description:"Getting started with the IOTA Identity WASM Library.",image:"/img/Identity_icon.png",keywords:["WASM","install","npm","yarn","build","nodejs","webpack"]},sidebar:"docs",previous:{title:"Troubleshooting",permalink:"/identity.rs/libraries/rust/troubleshooting"},next:{title:"Cheat Sheet",permalink:"/identity.rs/libraries/wasm/cheat_sheet"}},y=o,g={toc:y};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(d,{mdxType:"GettingStarted"}))}h.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,y=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return n?i.createElement(y,l(l({ref:t},c),{},{components:n})):i.createElement(y,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<a;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);