"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[39526],{87317:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={description:"Smart contracts can be invoked through their entry points, from outside via a request, or from inside via a call.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","requests","on-ledger","off-ledger","calls","invocation","explanation"]},c="Smart Contracts Invocation",l={unversionedId:"guide/core_concepts/invocation",id:"guide/core_concepts/invocation",title:"Smart Contracts Invocation",description:"Smart contracts can be invoked through their entry points, from outside via a request, or from inside via a call.",source:"@site/content/build/wasp/develop/documentation/docs/guide/core_concepts/invocation.md",sourceDirName:"guide/core_concepts",slug:"/guide/core_concepts/invocation",permalink:"/smart-contracts/guide/core_concepts/invocation",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/core_concepts/invocation.md",tags:[],version:"current",frontMatter:{description:"Smart contracts can be invoked through their entry points, from outside via a request, or from inside via a call.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","requests","on-ledger","off-ledger","calls","invocation","explanation"]},sidebar:"tutorialSidebar",previous:{title:"Anatomy of a Smart Contract",permalink:"/smart-contracts/guide/core_concepts/smart-contract-anatomy"},next:{title:"Sandbox Interface",permalink:"/smart-contracts/guide/core_concepts/sandbox"}},u={},d=[{value:"Requests",id:"requests",level:2},{value:"On-Ledger",id:"on-ledger",level:3},{value:"Off-Ledger",id:"off-ledger",level:3}],m={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"smart-contracts-invocation"},"Smart Contracts Invocation"),(0,o.kt)("p",null,"Just like any other computer program, a smart contract will lie dormant until someone or something would instruct it to activate. In the case of smart contracts, the basic way to activate them is to call one of their ",(0,o.kt)("a",{parentName:"p",href:"/smart-contracts/guide/core_concepts/smart-contract-anatomy#entry-points"},"entry points"),". It is the same as calling a program's function, and it will take a set of instructions of the smart contract and execute it over the current chain's state. View entry points can only read the state, and full entry points can both read and write to it."),(0,o.kt)("p",null,"In order to invoke a smart contract from outside the chain, the ",(0,o.kt)("em",{parentName:"p"},"sender")," (some entity that needs to be identified by a private/public key pair) has to wrap the call to the entry point into a ",(0,o.kt)("em",{parentName:"p"},"request"),".\nThe request has to be cryptographically signed and submitted to the ",(0,o.kt)("a",{parentName:"p",href:"/smart-contracts/guide/core_concepts/consensus"},"consensus")," procedure to let the chain's committee evaluate it and engrave the outcome of its execution into a new state update."),(0,o.kt)("p",null,"Upon receiving a request, the committee will either take it into work and execute the wrapped call fully, or it will reject the request with all its potential changes, never modifying the state only half-way through.\nThis means that every single request is an atomic operation."),(0,o.kt)("p",null,"After being invoked by a request, the smart contract code is allowed to invoke entry points of other smart contracts on the same chain; i.e. it can ",(0,o.kt)("em",{parentName:"p"},"call")," other smart contracts."),(0,o.kt)("p",null,"Smart contract calls are deterministic and synchronous, meaning that they always produce the same result and that all instructions are executed one immediately after another.\nBy extension, if a smart contract calls another smart contract, the resulting set of instructions is also deterministic and synchronous, meaning that for a request it makes no difference if a smart contract's entry point contains the whole set of instructions or if it is composed by multiple calls to different smart contracts of the chain.\nBeing able to combine smart contracts in this way is called ",(0,o.kt)("em",{parentName:"p"},"synchronous composability"),"."),(0,o.kt)("h2",{id:"requests"},"Requests"),(0,o.kt)("p",null,"A request contains a call to a smart contract and a signature of the sender (who is also the owner of the assets and funds that are going to be processed within the request).\nUnlike calls between smart contracts, requests are not executed immediately.\nInstead, they have to wait until the chain's validator nodes include them into a request batch.\nThis means that requests have a delay and are executed in an unpredictable order."),(0,o.kt)("p",null,"Requests are not only sent by humans; smart contracts can create requests too.\nFor example, a user could send a request to a smart contract that, in turn, creates a request to a third-party decentralized exchange which would convert the user's funds from one currency to another and send them back through another request.\nThis is called ",(0,o.kt)("em",{parentName:"p"},"asynchronous composability"),"."),(0,o.kt)("h3",{id:"on-ledger"},"On-Ledger"),(0,o.kt)("p",null,"An on-ledger request is a Layer 1 transaction that validator nodes retrieve from the Tangle. The Tangle acts as an arbiter between users and chains and guarantees that the transaction is valid, making it the only way to transfer assets to a chain or between the chains, albeit it is the slowest way to invoke a smart contract."),(0,o.kt)("h3",{id:"off-ledger"},"Off-Ledger"),(0,o.kt)("p",null,"If all necessary assets are in the chain already, it is possible to send a request directly to that chain's validator nodes.\nThis way it is not necessary to wait for the Tangle to process the message, making the overall confirmation time much shorter.\nDue to the shorter delay, off-ledger requests are preferred over on-ledger requests, unless it is required to move assets between chains or Layer 1 accounts."))}p.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),p=a,h=m["".concat(c,".").concat(p)]||m[p]||d[p]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);