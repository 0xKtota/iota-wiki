"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[71685],{39429:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return p}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=n(87308),i=["components"],d={title:"How To Generate Addresses"},c=void 0,l={unversionedId:"libraries/java/how_to/generate_addresses",id:"libraries/java/how_to/generate_addresses",title:"How To Generate Addresses",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/java/how_to/generate_addresses.mdx",sourceDirName:"libraries/java/how_to",slug:"/libraries/java/how_to/generate_addresses",permalink:"/iota.rs/develop/libraries/java/how_to/generate_addresses",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/java/how_to/generate_addresses.mdx",tags:[],version:"current",frontMatter:{title:"How To Generate Addresses"},sidebar:"docs",previous:{title:"How To Generate A Mnemonic",permalink:"/iota.rs/develop/libraries/java/how_to/generate_mnemonic"},next:{title:"How To Get An Output",permalink:"/iota.rs/develop/libraries/java/how_to/get_output"}},u={},p=[],g={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{className:"language-java",mdxType:"CodeBlock"},'package node_api_core;\n\nimport org.iota.Client;\nimport org.iota.types.ClientConfig;\nimport org.iota.types.ClientException;\nimport org.iota.types.secret.GenerateAddressesOptions;\nimport org.iota.types.secret.MnemonicSecretManager;\n\npublic class GenerateAddresses {\n    public static void main(String[] args) throws ClientException {\n        // Build the client.\n        Client client = new Client(new ClientConfig("{ \\"nodes\\": [ \\"https://api.testnet.shimmer.network\\" ], \\"nodeSyncEnabled\\": true }"));\n\n        // Generate the addresses.\n        MnemonicSecretManager secretManager = new MnemonicSecretManager("endorse answer radar about source reunion marriage tag sausage weekend frost daring base attack because joke dream slender leisure group reason prepare broken river");\n        String[] addresses = client.generateAddresses(secretManager, new GenerateAddressesOptions().withRange(0, 5));\n\n        // Print the addresses.\n        for (String address : addresses) {\n            System.out.println(address);\n        }\n    }\n}'))}m.isMDXComponent=!0}}]);