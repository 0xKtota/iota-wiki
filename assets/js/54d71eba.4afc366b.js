"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[1823],{80930:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return s},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var l=n(87462),a=n(63366),i=(n(67294),n(3905)),r=["components"],o={},d=void 0,p={unversionedId:"libraries/nodejs/api_reference",id:"libraries/nodejs/api_reference",title:"api_reference",description:"Classes",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/api_reference.md",sourceDirName:"libraries/nodejs",slug:"/libraries/nodejs/api_reference",permalink:"/iota.rs/develop/libraries/nodejs/api_reference",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/api_reference.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Examples",permalink:"/iota.rs/develop/libraries/nodejs/examples"},next:{title:"Getting Started with IOTA Client Python Binding",permalink:"/iota.rs/develop/libraries/python/getting_started"}},u={},c=[{value:"Classes",id:"classes",level:2},{value:"Members",id:"members",level:2},{value:"Functions",id:"functions",level:2},{value:"Client",id:"client",level:2},{value:"client.getInfo() \u21d2 <code>Promise.&lt;INodeInfoWrapper&gt;</code>",id:"clientgetinfo--promiseinodeinfowrapper",level:3},{value:"client.getNetworkInfo()",id:"clientgetnetworkinfo",level:3},{value:"client.basicOutputIds()",id:"clientbasicoutputids",level:3},{value:"client.getOutput()",id:"clientgetoutput",level:3},{value:"client.getOutputs()",id:"clientgetoutputs",level:3},{value:"client.generateMnemonic()",id:"clientgeneratemnemonic",level:3},{value:"client.mnemonicToHexSeed()",id:"clientmnemonictohexseed",level:3},{value:"client.generateAddresses()",id:"clientgenerateaddresses",level:3},{value:"client.generateBlock()",id:"clientgenerateblock",level:3},{value:"client.getTips()",id:"clientgettips",level:3},{value:"client.postBlock()",id:"clientpostblock",level:3},{value:"client.getBlock()",id:"clientgetblock",level:3},{value:"client.getBlockMetadata()",id:"clientgetblockmetadata",level:3},{value:"client.findInputs()",id:"clientfindinputs",level:3},{value:"client.findOutputs()",id:"clientfindoutputs",level:3},{value:"client.prepareTransaction()",id:"clientpreparetransaction",level:3},{value:"client.storeMnemonic()",id:"clientstoremnemonic",level:3},{value:"client.signTransaction()",id:"clientsigntransaction",level:3},{value:"client.submitPayload()",id:"clientsubmitpayload",level:3},{value:"client.parseBech32Address()",id:"clientparsebech32address",level:3},{value:"client.blockId()",id:"clientblockid",level:3},{value:"client.getNode()",id:"clientgetnode",level:3},{value:"client.getNetworkId()",id:"clientgetnetworkid",level:3},{value:"client.getBech32Hrp()",id:"clientgetbech32hrp",level:3},{value:"client.getMinPowScore()",id:"clientgetminpowscore",level:3},{value:"client.getTipsInterval()",id:"clientgettipsinterval",level:3},{value:"client.getLocalPow()",id:"clientgetlocalpow",level:3},{value:"client.getFallbackToLocalPow()",id:"clientgetfallbacktolocalpow",level:3},{value:"client.getHealth()",id:"clientgethealth",level:3},{value:"client.getNodeInfo()",id:"clientgetnodeinfo",level:3},{value:"client.getPeers()",id:"clientgetpeers",level:3},{value:"client.postBlockRaw()",id:"clientpostblockraw",level:3},{value:"client.getBlockRaw()",id:"clientgetblockraw",level:3},{value:"client.getMilestoneById()",id:"clientgetmilestonebyid",level:3},{value:"client.getUtxoChangesById()",id:"clientgetutxochangesbyid",level:3},{value:"client.getMilestoneByIndex()",id:"clientgetmilestonebyindex",level:3},{value:"client.getUtxoChangesByIndex()",id:"clientgetutxochangesbyindex",level:3},{value:"client.getReceipts()",id:"clientgetreceipts",level:3},{value:"client.getReceiptsMigratedAt()",id:"clientgetreceiptsmigratedat",level:3},{value:"client.getTreasury()",id:"clientgettreasury",level:3},{value:"client.getIncludedBlock()",id:"clientgetincludedblock",level:3},{value:"client.bech32ToHex()",id:"clientbech32tohex",level:3},{value:"client.hexToBech32()",id:"clienthextobech32",level:3},{value:"client.hexPublicKeyToBech32Address()",id:"clienthexpublickeytobech32address",level:3},{value:"client.isAddressValid()",id:"clientisaddressvalid",level:3},{value:"client.aliasOutputIds()",id:"clientaliasoutputids",level:3},{value:"client.aliasOutputId()",id:"clientaliasoutputid",level:3},{value:"client.nftOutputIds()",id:"clientnftoutputids",level:3},{value:"client.nftOutputId()",id:"clientnftoutputid",level:3},{value:"client.foundryOutputIds()",id:"clientfoundryoutputids",level:3},{value:"client.foundryOutputId()",id:"clientfoundryoutputid",level:3},{value:"client.tryGetOutputs()",id:"clienttrygetoutputs",level:3},{value:"client.findBlocks()",id:"clientfindblocks",level:3},{value:"client.retry()",id:"clientretry",level:3},{value:"client.retryUntilIncluded()",id:"clientretryuntilincluded",level:3},{value:"client.consolidateFunds()",id:"clientconsolidatefunds",level:3},{value:"client.reattach()",id:"clientreattach",level:3},{value:"client.reattachUnchecked()",id:"clientreattachunchecked",level:3},{value:"client.promote()",id:"clientpromote",level:3},{value:"client.promoteUnchecked()",id:"clientpromoteunchecked",level:3},{value:"client.unsyncedNodes()",id:"clientunsyncednodes",level:3},{value:"client.buildBasicOutput()",id:"clientbuildbasicoutput",level:3},{value:"client.buildAliasOutput()",id:"clientbuildaliasoutput",level:3},{value:"client.buildFoundryOutput()",id:"clientbuildfoundryoutput",level:3},{value:"client.buildNftOutput()",id:"clientbuildnftoutput",level:3},{value:"MessageHandler",id:"messagehandler",level:2},{value:"SHIMMER_TESTNET_BECH32_HRP",id:"shimmer_testnet_bech32_hrp",level:2},{value:"utf8ToBytes",id:"utf8tobytes",level:2},{value:"hexToUtf8",id:"hextoutf8",level:2},{value:"initLogger()",id:"initlogger",level:2},{value:"utf8ToBytes()",id:"utf8tobytes-1",level:2}],k={toc:c};function s(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,l.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("dl",null,(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#Client"},"Client")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"The Client to interact with nodes.")),(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#MessageHandler"},"MessageHandler")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"The MessageHandler which sends the commands to the Rust side."))),(0,i.kt)("h2",{id:"members"},"Members"),(0,i.kt)("dl",null,(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#SHIMMER_TESTNET_BECH32_HRP"},"SHIMMER_TESTNET_BECH32_HRP")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"BIP44 Coin Types for IOTA and Shimmer.")),(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#utf8ToBytes"},"utf8ToBytes")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"Convert hex encoded string to UTF8 string")),(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#hexToUtf8"},"hexToUtf8")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"Convert UTF8 string to hex encoded string"))),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("dl",null,(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#initLogger"},"initLogger()")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"Initialize logger, if no arguments are provided a default config will be used.")),(0,i.kt)("dt",null,(0,i.kt)("a",{href:"#utf8ToBytes"},"utf8ToBytes()")),(0,i.kt)("dd",null,(0,i.kt)("p",null,"Convert UTF8 string to an array of bytes"))),(0,i.kt)("a",{name:"Client"}),(0,i.kt)("h2",{id:"client"},"Client"),(0,i.kt)("p",null,"The Client to interact with nodes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global class  "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client"},"Client"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getInfo"},".getInfo()")," \u21d2 ",(0,i.kt)("code",null,"Promise.","<","INodeInfoWrapper",">")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getNetworkInfo"},".getNetworkInfo()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+basicOutputIds"},".basicOutputIds()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getOutput"},".getOutput()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getOutputs"},".getOutputs()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+generateMnemonic"},".generateMnemonic()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+mnemonicToHexSeed"},".mnemonicToHexSeed()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+generateAddresses"},".generateAddresses()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+generateBlock"},".generateBlock()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getTips"},".getTips()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+postBlock"},".postBlock()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getBlock"},".getBlock()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getBlockMetadata"},".getBlockMetadata()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+findInputs"},".findInputs()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+findOutputs"},".findOutputs()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+prepareTransaction"},".prepareTransaction()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+storeMnemonic"},".storeMnemonic()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+signTransaction"},".signTransaction()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+submitPayload"},".submitPayload()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+parseBech32Address"},".parseBech32Address()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+blockId"},".blockId()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getNode"},".getNode()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getNetworkId"},".getNetworkId()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getBech32Hrp"},".getBech32Hrp()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getMinPowScore"},".getMinPowScore()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getTipsInterval"},".getTipsInterval()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getLocalPow"},".getLocalPow()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getFallbackToLocalPow"},".getFallbackToLocalPow()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getHealth"},".getHealth()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getNodeInfo"},".getNodeInfo()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getPeers"},".getPeers()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+postBlockRaw"},".postBlockRaw()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getBlockRaw"},".getBlockRaw()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getMilestoneById"},".getMilestoneById()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getUtxoChangesById"},".getUtxoChangesById()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getMilestoneByIndex"},".getMilestoneByIndex()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getUtxoChangesByIndex"},".getUtxoChangesByIndex()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getReceipts"},".getReceipts()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getReceiptsMigratedAt"},".getReceiptsMigratedAt()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getTreasury"},".getTreasury()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+getIncludedBlock"},".getIncludedBlock()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+bech32ToHex"},".bech32ToHex()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+hexToBech32"},".hexToBech32()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+hexPublicKeyToBech32Address"},".hexPublicKeyToBech32Address()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+isAddressValid"},".isAddressValid()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+aliasOutputIds"},".aliasOutputIds()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+aliasOutputId"},".aliasOutputId()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+nftOutputIds"},".nftOutputIds()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+nftOutputId"},".nftOutputId()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+foundryOutputIds"},".foundryOutputIds()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+foundryOutputId"},".foundryOutputId()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+tryGetOutputs"},".tryGetOutputs()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+findBlocks"},".findBlocks()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+retry"},".retry()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+retryUntilIncluded"},".retryUntilIncluded()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+consolidateFunds"},".consolidateFunds()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+reattach"},".reattach()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+reattachUnchecked"},".reattachUnchecked()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+promote"},".promote()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+promoteUnchecked"},".promoteUnchecked()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+unsyncedNodes"},".unsyncedNodes()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+buildBasicOutput"},".buildBasicOutput()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+buildAliasOutput"},".buildAliasOutput()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+buildFoundryOutput"},".buildFoundryOutput()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Client+buildNftOutput"},".buildNftOutput()"))))),(0,i.kt)("a",{name:"Client+getInfo"}),(0,i.kt)("h3",{id:"clientgetinfo--promiseinodeinfowrapper"},"client.getInfo() \u21d2 ",(0,i.kt)("code",null,"Promise.","<","INodeInfoWrapper",">")),(0,i.kt)("p",null,"Returns the node information together with the url of the used node"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Returns"),": ",(0,i.kt)("code",null,"Promise.","<","INodeInfoWrapper",">")," - ",(0,i.kt)("p",null,"."),"  "),(0,i.kt)("a",{name:"Client+getNetworkInfo"}),(0,i.kt)("h3",{id:"clientgetnetworkinfo"},"client.getNetworkInfo()"),(0,i.kt)("p",null,"Gets the network related information such as network_id and min_pow_score"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+basicOutputIds"}),(0,i.kt)("h3",{id:"clientbasicoutputids"},"client.basicOutputIds()"),(0,i.kt)("p",null,"Fetch basic output IDs based on query parameters"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getOutput"}),(0,i.kt)("h3",{id:"clientgetoutput"},"client.getOutput()"),(0,i.kt)("p",null,"Get output from a known outputID"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getOutputs"}),(0,i.kt)("h3",{id:"clientgetoutputs"},"client.getOutputs()"),(0,i.kt)("p",null,"Fetch OutputResponse from provided OutputIds (requests are sent in parallel)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+generateMnemonic"}),(0,i.kt)("h3",{id:"clientgeneratemnemonic"},"client.generateMnemonic()"),(0,i.kt)("p",null,"Generates a new mnemonic."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+mnemonicToHexSeed"}),(0,i.kt)("h3",{id:"clientmnemonictohexseed"},"client.mnemonicToHexSeed()"),(0,i.kt)("p",null,"Returns a hex encoded seed for a mnemonic."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+generateAddresses"}),(0,i.kt)("h3",{id:"clientgenerateaddresses"},"client.generateAddresses()"),(0,i.kt)("p",null,"Generate addresses"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+generateBlock"}),(0,i.kt)("h3",{id:"clientgenerateblock"},"client.generateBlock()"),(0,i.kt)("p",null,"Generate client block"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getTips"}),(0,i.kt)("h3",{id:"clientgettips"},"client.getTips()"),(0,i.kt)("p",null,"Returns tips that are ideal for attaching a block. The tips can be considered as non-lazy and are therefore ideal for attaching a block."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+postBlock"}),(0,i.kt)("h3",{id:"clientpostblock"},"client.postBlock()"),(0,i.kt)("p",null,"Post block in JSON format, returns the block ID."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getBlock"}),(0,i.kt)("h3",{id:"clientgetblock"},"client.getBlock()"),(0,i.kt)("p",null,"Get block as JSON."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getBlockMetadata"}),(0,i.kt)("h3",{id:"clientgetblockmetadata"},"client.getBlockMetadata()"),(0,i.kt)("p",null,"Get block metadata."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+findInputs"}),(0,i.kt)("h3",{id:"clientfindinputs"},"client.findInputs()"),(0,i.kt)("p",null,"Find inputs from addresses for a provided amount (useful for offline signing)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+findOutputs"}),(0,i.kt)("h3",{id:"clientfindoutputs"},"client.findOutputs()"),(0,i.kt)("p",null,"Find all outputs based on the requests criteria. This method will try to query multiple nodes if the request amount exceeds individual node limit."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+prepareTransaction"}),(0,i.kt)("h3",{id:"clientpreparetransaction"},"client.prepareTransaction()"),(0,i.kt)("p",null,"Prepare a transaction for signing"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+storeMnemonic"}),(0,i.kt)("h3",{id:"clientstoremnemonic"},"client.storeMnemonic()"),(0,i.kt)("p",null,"Store a mnemonic in the Stronghold vault"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+signTransaction"}),(0,i.kt)("h3",{id:"clientsigntransaction"},"client.signTransaction()"),(0,i.kt)("p",null,"Sign a transaction"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+submitPayload"}),(0,i.kt)("h3",{id:"clientsubmitpayload"},"client.submitPayload()"),(0,i.kt)("p",null,"Submit a payload in a block"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+parseBech32Address"}),(0,i.kt)("h3",{id:"clientparsebech32address"},"client.parseBech32Address()"),(0,i.kt)("p",null,"Returns a valid Address parsed from a String."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+blockId"}),(0,i.kt)("h3",{id:"clientblockid"},"client.blockId()"),(0,i.kt)("p",null,"Returns a block ID (Blake2b256 hash of the block bytes)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getNode"}),(0,i.kt)("h3",{id:"clientgetnode"},"client.getNode()"),(0,i.kt)("p",null,"Get a node candidate from the synced node pool."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getNetworkId"}),(0,i.kt)("h3",{id:"clientgetnetworkid"},"client.getNetworkId()"),(0,i.kt)("p",null,"Get the network id of the node we're connecting to."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getBech32Hrp"}),(0,i.kt)("h3",{id:"clientgetbech32hrp"},"client.getBech32Hrp()"),(0,i.kt)("p",null,"Returns the bech32_hrp."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getMinPowScore"}),(0,i.kt)("h3",{id:"clientgetminpowscore"},"client.getMinPowScore()"),(0,i.kt)("p",null,"Returns the min PoW score."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getTipsInterval"}),(0,i.kt)("h3",{id:"clientgettipsinterval"},"client.getTipsInterval()"),(0,i.kt)("p",null,"Returns the tips interval."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getLocalPow"}),(0,i.kt)("h3",{id:"clientgetlocalpow"},"client.getLocalPow()"),(0,i.kt)("p",null,"Returns if local pow should be used or not."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getFallbackToLocalPow"}),(0,i.kt)("h3",{id:"clientgetfallbacktolocalpow"},"client.getFallbackToLocalPow()"),(0,i.kt)("p",null,"Get fallback to local proof of work timeout."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getHealth"}),(0,i.kt)("h3",{id:"clientgethealth"},"client.getHealth()"),(0,i.kt)("p",null,"Get health of node by input url."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getNodeInfo"}),(0,i.kt)("h3",{id:"clientgetnodeinfo"},"client.getNodeInfo()"),(0,i.kt)("p",null,"Get info of node with input url."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getPeers"}),(0,i.kt)("h3",{id:"clientgetpeers"},"client.getPeers()"),(0,i.kt)("p",null,"Get peers."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+postBlockRaw"}),(0,i.kt)("h3",{id:"clientpostblockraw"},"client.postBlockRaw()"),(0,i.kt)("p",null,"Post block as raw bytes, returns the block ID."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getBlockRaw"}),(0,i.kt)("h3",{id:"clientgetblockraw"},"client.getBlockRaw()"),(0,i.kt)("p",null,"Get block as raw bytes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getMilestoneById"}),(0,i.kt)("h3",{id:"clientgetmilestonebyid"},"client.getMilestoneById()"),(0,i.kt)("p",null,"Look up a milestone by a given milestone index."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getUtxoChangesById"}),(0,i.kt)("h3",{id:"clientgetutxochangesbyid"},"client.getUtxoChangesById()"),(0,i.kt)("p",null,"Returns all UTXO changes that happened at a specific milestone."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getMilestoneByIndex"}),(0,i.kt)("h3",{id:"clientgetmilestonebyindex"},"client.getMilestoneByIndex()"),(0,i.kt)("p",null,"Look up a milestone by a given milestone index."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getUtxoChangesByIndex"}),(0,i.kt)("h3",{id:"clientgetutxochangesbyindex"},"client.getUtxoChangesByIndex()"),(0,i.kt)("p",null,"Returns all UTXO changes that happened at a specific milestone."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getReceipts"}),(0,i.kt)("h3",{id:"clientgetreceipts"},"client.getReceipts()"),(0,i.kt)("p",null,"Get receipts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getReceiptsMigratedAt"}),(0,i.kt)("h3",{id:"clientgetreceiptsmigratedat"},"client.getReceiptsMigratedAt()"),(0,i.kt)("p",null,"Get the receipts by the given milestone index."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getTreasury"}),(0,i.kt)("h3",{id:"clientgettreasury"},"client.getTreasury()"),(0,i.kt)("p",null,"Get the treasury output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+getIncludedBlock"}),(0,i.kt)("h3",{id:"clientgetincludedblock"},"client.getIncludedBlock()"),(0,i.kt)("p",null,"Returns the included block of the transaction."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+bech32ToHex"}),(0,i.kt)("h3",{id:"clientbech32tohex"},"client.bech32ToHex()"),(0,i.kt)("p",null,"Transforms bech32 to hex."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+hexToBech32"}),(0,i.kt)("h3",{id:"clienthextobech32"},"client.hexToBech32()"),(0,i.kt)("p",null,"Transforms a hex encoded address to a bech32 encoded address."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+hexPublicKeyToBech32Address"}),(0,i.kt)("h3",{id:"clienthexpublickeytobech32address"},"client.hexPublicKeyToBech32Address()"),(0,i.kt)("p",null,"Transforms a hex encoded public key to a bech32 encoded address."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+isAddressValid"}),(0,i.kt)("h3",{id:"clientisaddressvalid"},"client.isAddressValid()"),(0,i.kt)("p",null,"Checks if a String is a valid bech32 encoded address."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+aliasOutputIds"}),(0,i.kt)("h3",{id:"clientaliasoutputids"},"client.aliasOutputIds()"),(0,i.kt)("p",null,"Fetch alias output IDs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+aliasOutputId"}),(0,i.kt)("h3",{id:"clientaliasoutputid"},"client.aliasOutputId()"),(0,i.kt)("p",null,"Fetch alias output ID"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+nftOutputIds"}),(0,i.kt)("h3",{id:"clientnftoutputids"},"client.nftOutputIds()"),(0,i.kt)("p",null,"Fetch NFT output IDs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+nftOutputId"}),(0,i.kt)("h3",{id:"clientnftoutputid"},"client.nftOutputId()"),(0,i.kt)("p",null,"Fetch NFT output ID"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+foundryOutputIds"}),(0,i.kt)("h3",{id:"clientfoundryoutputids"},"client.foundryOutputIds()"),(0,i.kt)("p",null,"Fetch Foundry Output IDs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+foundryOutputId"}),(0,i.kt)("h3",{id:"clientfoundryoutputid"},"client.foundryOutputId()"),(0,i.kt)("p",null,"Fetch Foundry Output ID"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+tryGetOutputs"}),(0,i.kt)("h3",{id:"clienttrygetoutputs"},"client.tryGetOutputs()"),(0,i.kt)("p",null,"Try to get OutputResponse from provided OutputIds (requests are sent in parallel and errors are ignored, can be useful for spent outputs)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+findBlocks"}),(0,i.kt)("h3",{id:"clientfindblocks"},"client.findBlocks()"),(0,i.kt)("p",null,"Find all blocks by provided block IDs."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+retry"}),(0,i.kt)("h3",{id:"clientretry"},"client.retry()"),(0,i.kt)("p",null,"Retries (promotes or reattaches) a block for provided block id. Block should be retried only if they are valid and haven't been confirmed for a while."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+retryUntilIncluded"}),(0,i.kt)("h3",{id:"clientretryuntilincluded"},"client.retryUntilIncluded()"),(0,i.kt)("p",null,"Retries (promotes or reattaches) a block for provided block id until it's included (referenced by a milestone). Default interval is 5 seconds and max attempts is 40. Returns the included block at first position and additional reattached blocks"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+consolidateFunds"}),(0,i.kt)("h3",{id:"clientconsolidatefunds"},"client.consolidateFunds()"),(0,i.kt)("p",null,"Function to consolidate all funds from a range of addresses to the address with the lowest index in that range Returns the address to which the funds got consolidated, if any were available"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+reattach"}),(0,i.kt)("h3",{id:"clientreattach"},"client.reattach()"),(0,i.kt)("p",null,"Reattaches blocks for provided block id. Blocks can be reattached only if they are valid and haven't been confirmed for a while."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+reattachUnchecked"}),(0,i.kt)("h3",{id:"clientreattachunchecked"},"client.reattachUnchecked()"),(0,i.kt)("p",null,"Reattach a block without checking if it should be reattached"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+promote"}),(0,i.kt)("h3",{id:"clientpromote"},"client.promote()"),(0,i.kt)("p",null,"Promotes a block. The method should validate if a promotion is necessary through get_block. If not, the method should error out and should not allow unnecessary promotions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+promoteUnchecked"}),(0,i.kt)("h3",{id:"clientpromoteunchecked"},"client.promoteUnchecked()"),(0,i.kt)("p",null,"Promote a block without checking if it should be promoted"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+unsyncedNodes"}),(0,i.kt)("h3",{id:"clientunsyncednodes"},"client.unsyncedNodes()"),(0,i.kt)("p",null,"Returns the unsynced nodes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+buildBasicOutput"}),(0,i.kt)("h3",{id:"clientbuildbasicoutput"},"client.buildBasicOutput()"),(0,i.kt)("p",null,"Build a Basic Output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+buildAliasOutput"}),(0,i.kt)("h3",{id:"clientbuildaliasoutput"},"client.buildAliasOutput()"),(0,i.kt)("p",null,"Build an Alias Output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+buildFoundryOutput"}),(0,i.kt)("h3",{id:"clientbuildfoundryoutput"},"client.buildFoundryOutput()"),(0,i.kt)("p",null,"Build a Foundry Output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"Client+buildNftOutput"}),(0,i.kt)("h3",{id:"clientbuildnftoutput"},"client.buildNftOutput()"),(0,i.kt)("p",null,"Build an Nft Output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.kt)("a",{parentName:"p",href:"#Client"},(0,i.kt)("code",null,"Client")),"  "),(0,i.kt)("a",{name:"MessageHandler"}),(0,i.kt)("h2",{id:"messagehandler"},"MessageHandler"),(0,i.kt)("p",null,"The MessageHandler which sends the commands to the Rust side."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global class  "),(0,i.kt)("a",{name:"SHIMMER_TESTNET_BECH32_HRP"}),(0,i.kt)("h2",{id:"shimmer_testnet_bech32_hrp"},"SHIMMER","_","TESTNET","_","BECH32","_","HRP"),(0,i.kt)("p",null,"BIP44 Coin Types for IOTA and Shimmer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global variable  "),(0,i.kt)("a",{name:"utf8ToBytes"}),(0,i.kt)("h2",{id:"utf8tobytes"},"utf8ToBytes"),(0,i.kt)("p",null,"Convert hex encoded string to UTF8 string"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global variable  "),(0,i.kt)("a",{name:"hexToUtf8"}),(0,i.kt)("h2",{id:"hextoutf8"},"hexToUtf8"),(0,i.kt)("p",null,"Convert UTF8 string to hex encoded string"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global variable  "),(0,i.kt)("a",{name:"initLogger"}),(0,i.kt)("h2",{id:"initlogger"},"initLogger()"),(0,i.kt)("p",null,"Initialize logger, if no arguments are provided a default config will be used."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,i.kt)("a",{name:"utf8ToBytes"}),(0,i.kt)("h2",{id:"utf8tobytes-1"},"utf8ToBytes()"),(0,i.kt)("p",null,"Convert UTF8 string to an array of bytes"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global function"))}s.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return s}});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=l.createContext({}),p=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return l.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=p(n),s=a,m=k["".concat(d,".").concat(s)]||k[s]||c[s]||i;return n?l.createElement(m,r(r({ref:t},u),{},{components:n})):l.createElement(m,r({ref:t},u))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"}}]);