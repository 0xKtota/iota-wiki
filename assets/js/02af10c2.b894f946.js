"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[26494],{17415:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var a=n(74034),i=n(79973),l=(n(67294),n(3905)),r=["components"],o={},s="\ud83d\uddd3\ufe0f 2020-10-28 Team Identity: Async Meeting Notes",u={unversionedId:"meeting-notes/2020-10-28",id:"meeting-notes/2020-10-28",isDocsHomePage:!1,title:"\ud83d\uddd3\ufe0f 2020-10-28 Team Identity: Async Meeting Notes",description:"tags: IOTA Identity Meeting",source:"@site/external/identity.rs/documentation/docs/meeting-notes/2020-10-28.md",sourceDirName:"meeting-notes",slug:"/meeting-notes/2020-10-28",permalink:"/identity.rs/meeting-notes/2020-10-28",tags:[],version:"current",frontMatter:{}},p=[{value:"tags: <code>IOTA</code> <code>Identity</code> <code>Meeting</code>",id:"tags-iota-identity-meeting",children:[],level:6},{value:"\u2139\ufe0f Info",id:"\u2139\ufe0f-info",children:[],level:2},{value:"\ud83d\udc65 Participants",id:"-participants",children:[],level:2},{value:"\ud83d\ude4b\u200d Standup",id:"-standup",children:[{value:"\u23ea What was last week&#39;s progress?",id:"-what-was-last-weeks-progress",children:[],level:3},{value:"\u23e9 What will be the focus this week?",id:"-what-will-be-the-focus-this-week",children:[],level:3}],level:2},{value:"\ud83d\udcac Discussion topics",id:"-discussion-topics",children:[{value:"Wasm iota and core lib together or only one? And what functionality do we want there?",id:"wasm-iota-and-core-lib-together-or-only-one-and-what-functionality-do-we-want-there",children:[],level:3},{value:"Schema&#39;s",id:"schemas",children:[],level:3},{value:"Snapshotting questions",id:"snapshotting-questions",children:[],level:3},{value:"Use identity.rs on micro controllers like ESP32",id:"use-identityrs-on-micro-controllers-like-esp32",children:[],level:3}],level:2},{value:"Questions",id:"questions",children:[],level:2}],d={toc:p};function c(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\ufe0f-2020-10-28-team-identity-async-meeting-notes"},"\ud83d\uddd3\ufe0f 2020-10-28 Team Identity: Async Meeting Notes"),(0,l.kt)("h6",{id:"tags-iota-identity-meeting"},"tags: ",(0,l.kt)("inlineCode",{parentName:"h6"},"IOTA")," ",(0,l.kt)("inlineCode",{parentName:"h6"},"Identity")," ",(0,l.kt)("inlineCode",{parentName:"h6"},"Meeting")),(0,l.kt)("h2",{id:"\u2139\ufe0f-info"},"\u2139\ufe0f Info"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Location"),": Google Hangouts\n",(0,l.kt)("strong",{parentName:"p"},"Date"),": Wednesday, 2020-10-28 - 17:00 to 18:00 (CET)\n",(0,l.kt)("strong",{parentName:"p"},"Agenda")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Standup ",(0,l.kt)("inlineCode",{parentName:"li"},"5min")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:2},(0,l.kt)("li",{parentName:"ol"},"Discussion topics ",(0,l.kt)("inlineCode",{parentName:"li"},"45min")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:3},(0,l.kt)("li",{parentName:"ol"},"Questions ",(0,l.kt)("inlineCode",{parentName:"li"},"10min"))))),(0,l.kt)("h2",{id:"-participants"},"\ud83d\udc65 Participants"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"@elenaf9 "),(0,l.kt)("li",{parentName:"ul"},"@Thoralf-M"),(0,l.kt)("li",{parentName:"ul"},"@tensor-programming"),(0,l.kt)("li",{parentName:"ul"},"@JelleMillenaar"),(0,l.kt)("li",{parentName:"ul"},"@l1h3r"),(0,l.kt)("li",{parentName:"ul"},"@huhn511"),(0,l.kt)("li",{parentName:"ul"},"@eike-hass")),(0,l.kt)("h2",{id:"-standup"},"\ud83d\ude4b\u200d Standup"),(0,l.kt)("h3",{id:"-what-was-last-weeks-progress"},"\u23ea What was last week's progress?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"JcsEd25519Signature2020"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"IotaDID"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"IotaDocument"),". Added a very basic example of issuing/verifying a signed credential."),(0,l.kt)("li",{parentName:"ul"},"Worked on Stronghold Client and added manual Diff implementation to the DID. "),(0,l.kt)("li",{parentName:"ul"},"Get wasm working with iota"),(0,l.kt)("li",{parentName:"ul"},"Bring WASM further and prepared npm release"),(0,l.kt)("li",{parentName:"ul"},"Start working on a communication actor by using iotaledger/actors.rs")),(0,l.kt)("h3",{id:"-what-will-be-the-focus-this-week"},"\u23e9 What will be the focus this week?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'Defines "higher level lib" methods for WASM binding'),(0,l.kt)("li",{parentName:"ul"},"Continue work on Stronghold")),(0,l.kt)("h2",{id:"-discussion-topics"},"\ud83d\udcac Discussion topics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Wasm iota and core lib together or only one? And what functionality do we want there?"),(0,l.kt)("li",{parentName:"ul"},"Schema's "),(0,l.kt)("li",{parentName:"ul"},"Snapshotting questions (brought up in the discord chat)"),(0,l.kt)("li",{parentName:"ul"},"X-Teams starting next week"),(0,l.kt)("li",{parentName:"ul"},"Tensor code reviews"),(0,l.kt)("li",{parentName:"ul"},"ESP32 (see: ",(0,l.kt)("a",{parentName:"li",href:"https://mabez.dev/blog/posts/esp32-rust/"},"https://mabez.dev/blog/posts/esp32-rust/"),")")),(0,l.kt)("h3",{id:"wasm-iota-and-core-lib-together-or-only-one-and-what-functionality-do-we-want-there"},"Wasm iota and core lib together or only one? And what functionality do we want there?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Focus on IOTA bindings")),(0,l.kt)("h3",{id:"schemas"},"Schema's"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Schema validation")),(0,l.kt)("p",null,"Example Code: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'let credential: Credential = ...;\nlet schema: Value = reqwest::get("https://example.org/schema.json").await?.json()?;\nlet schema = json_schema::JSONSchema::compile(&schema, None)?;\nlet result = schema.validate(&credential.to_json_value()?);\n\nprintln!("Schema Validation Result: {:#?}", result);\n')),(0,l.kt)("h3",{id:"snapshotting-questions"},"Snapshotting questions"),(0,l.kt)("p",null,"Ideas on how to stop DID documents from being destroyed by snapshotting on the tangle."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Selective Permanode"),(0,l.kt)("li",{parentName:"ul"},"Identity Nodes (holds all identities)"),(0,l.kt)("li",{parentName:"ul"},"WASP Node (Smart Contract Solution, holds specific identites (contries, use cases, etc.))")),(0,l.kt)("h3",{id:"use-identityrs-on-micro-controllers-like-esp32"},"Use identity.rs on micro controllers like ESP32"),(0,l.kt)("p",null,"How we handle errors?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"thiserror -> no std")),(0,l.kt)("p",null,"Pasers could be a problem"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"URL parser"),(0,l.kt)("li",{parentName:"ul"},"pest doesnt support no-std"),(0,l.kt)("li",{parentName:"ul"},"Timestamps (chrono)")),(0,l.kt)("p",null,"What do we need for ESP32 working"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"entrypoint which uses ","[no mangle]"),(0,l.kt)("li",{parentName:"ul"},"no-std")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://mabez.dev/blog/posts/esp32-rust/"},"Rust on the ESP32")),(0,l.kt)("h2",{id:"questions"},"Questions"),(0,l.kt)("p",null,"Q1: Do we need both inputs here?"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust="},"pub fn new(did: IotaDID, authentication: PublicKey)\n")),(0,l.kt)("p",null,"first line of the function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust="},"Self::check_authentication_key_id(&authentication, &did)?;\n")),(0,l.kt)("p",null,"A1: ",(0,l.kt)("del",{parentName:"p"},"No, we can extract ",(0,l.kt)("inlineCode",{parentName:"del"},"IotaDID")," from ",(0,l.kt)("inlineCode",{parentName:"del"},"PublicKey"))," Add a new constructor function"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Q2: How to structure the WASM lib?"),(0,l.kt)("p",null,"Option A: Everything in one lib (could get very big)\nOption B: Every crate also gets a WASM binding\npro: flexible small WASM bindings\ncontra: devs need to install and import many libs\nOption C: Mixture of Option A and B. Wasm Bindings for Each lib and a high level WASM binding. "),(0,l.kt)("p",null,"A2: First use Option A - then C"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Q3: How can we convert the JS input to a secretKey to sign the document?"),(0,l.kt)("p",null,"Idea: dont expose key's"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[wasm_bindgen]\npub struct Key(KeyPair);\n\n#[wasm_bindgen]\nimpl Key {\n  #[wasm_bindgen(constructor)]\n  pub fn new() -> Self {\n    Self(IotaDocument::generate_ed25519_keypair())\n  }\n\n  #[wasm_bindgen(getter)]\n  pub fn public(&self) -> String {\n    encode_b58(self.0.public())\n  }\n\n  #[wasm_bindgen(getter)]\n  pub fn secret(&self) -> String {\n    encode_b58(self.0.secret())\n  }\n}\n\n#[wasm_bindgen]\npub struct Document(IotaDocument);\n\n#[wasm_bindgen]\nimpl Document {\n  #[wasm_bindgen]\n  pub fn sign(&mut self, key: &Key) {\n    self.0.sign(key.secret());\n  }\n}\n")),(0,l.kt)("p",null,"A3: "),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Q4: Can we make the errors compatible with ",(0,l.kt)("a",{parentName:"p",href:"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/result.html"},"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/result.html"),"?"),(0,l.kt)("p",null,"A4: Anyhow should support WASM. Some extra work will be required to make things a little less rough. Look into Console.panic hook and converting errors to strings and throwing exceptions."),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Q5: Can we require that DIDs contain a network? Avoids the need to normalize and determine which address is original"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"did:iota:xyz == did:iota:main:xyz\n")),(0,l.kt)("p",null,"A5: "),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Q6: How do we generate diff chain addresses?"),(0,l.kt)("p",null,"A6:"))}c.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);