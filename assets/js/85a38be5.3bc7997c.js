"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[59334],{32504:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var i=t(74034),a=t(79973),o=(t(67294),t(3905)),r=["components"],c={keywords:["functions","access","self","chain","creator","agentID"],description:"The optional access subsection indicates the agent who is allowed to access the function. When this definition is omitted, anyone is allowed to call the function.",image:"/img/logo/WASP_logo_dark.png"},s="Limiting Access",l={unversionedId:"guide/schema/access",id:"guide/schema/access",isDocsHomePage:!1,title:"Limiting Access",description:"The optional access subsection indicates the agent who is allowed to access the function. When this definition is omitted, anyone is allowed to call the function.",source:"@site/external/wasp/documentation/docs/guide/schema/access.mdx",sourceDirName:"guide/schema",slug:"/guide/schema/access",permalink:"/wasp/guide/schema/access",tags:[],version:"current",frontMatter:{keywords:["functions","access","self","chain","creator","agentID"],description:"The optional access subsection indicates the agent who is allowed to access the function. When this definition is omitted, anyone is allowed to call the function.",image:"/img/logo/WASP_logo_dark.png"},sidebar:"tutorialSidebar",previous:{title:"Function Definitions",permalink:"/wasp/guide/schema/funcs"},next:{title:"Function Parameters",permalink:"/wasp/guide/schema/params"}},u=[],f={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"limiting-access"},"Limiting Access"),(0,o.kt)("p",null,"The optional ",(0,o.kt)("inlineCode",{parentName:"p"},"access")," subsection is made of a single definition, it indicates the agent\nwho is allowed to access the function. When this definition is omitted, anyone is allowed\nto call the function. When the definition is present it should be an access identifier,\noptionally followed by an explanatory comment. Access identifiers can be one of the\nfollowing:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"self"),": Only the smart contract itself can call this function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"chain"),": Only the chain owner can call this function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"creator"),": Only the contract creator can call this function"),(0,o.kt)("li",{parentName:"ul"},"anything else: The name of an AgentID or []AgentID variable in state storage. Only the\nagent(s) defined there can call this function. When this option is used you should also\nprovide functionality that can initialize and/or modify this variable. As long as this\nstate variable has not been set, nobody is allowed to call this function.")),(0,o.kt)("p",null,"The schema tool will automatically generate code to properly check the access rights of\nthe agent that called the function before the actual function is called."),(0,o.kt)("p",null,"You can see usage examples of the access identifier in the schema definition file, where\nthe state variable ",(0,o.kt)("inlineCode",{parentName:"p"},"owner")," is used as an access identifier. The ",(0,o.kt)("inlineCode",{parentName:"p"},"init")," function initializes\nthis state variable, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"setOwner")," function can only be used by the current owner to\nset a new owner. Finally, the ",(0,o.kt)("inlineCode",{parentName:"p"},"member")," function can also only be called by the current\nowner."),(0,o.kt)("p",null,"Note that there can be different access identifiers for different functions as needed. You\ncan set up as many access identifiers as you like."),(0,o.kt)("p",null,"In the next section we will look at ",(0,o.kt)("a",{parentName:"p",href:"/wasp/guide/schema/params"},(0,o.kt)("inlineCode",{parentName:"a"},"params")),"."))}p.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),l=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,h=p["".concat(s,".").concat(d)]||p[d]||f[d]||o;return t?i.createElement(h,r(r({ref:n},u),{},{components:t})):i.createElement(h,r({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var l=2;l<o;l++)r[l]=t[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);