"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[31681],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return d}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=t.createContext({}),c=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},s=function(e){var r=c(e.components);return t.createElement(p.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(p,".").concat(d)]||u[d]||f[d]||i;return n?t.createElement(m,a(a({ref:r},s),{},{components:n})):t.createElement(m,a({ref:r},s))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2615:function(e,r,n){n.r(r),n.d(r,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return f}});var t=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],l={},p="Interface: INodeInfoWrapper",c={unversionedId:"libraries/nodejs/references/interfaces/INodeInfoWrapper",id:"libraries/nodejs/references/interfaces/INodeInfoWrapper",title:"Interface: INodeInfoWrapper",description:"NodeInfo wrapper which contains the nodeinfo and the url from the node (useful when multiple nodes are used)",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/INodeInfoWrapper.md",sourceDirName:"libraries/nodejs/references/interfaces",slug:"/libraries/nodejs/references/interfaces/INodeInfoWrapper",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/INodeInfoWrapper",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/INodeInfoWrapper.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: INode",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/INode"},next:{title:"Interface: IPreparedTransactionData",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/IPreparedTransactionData"}},s={},f=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Properties",id:"properties",level:3},{value:"Properties",id:"properties-1",level:2},{value:"nodeInfo",id:"nodeinfo",level:3},{value:"url",id:"url",level:3}],u={toc:f};function d(e){var r=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interface-inodeinfowrapper"},"Interface: INodeInfoWrapper"),(0,i.kt)("p",null,"NodeInfo wrapper which contains the nodeinfo and the url from the node (useful when multiple nodes are used)"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/iota.rs/develop/libraries/nodejs/references/interfaces/INodeInfoWrapper#nodeinfo"},"nodeInfo")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/iota.rs/develop/libraries/nodejs/references/interfaces/INodeInfoWrapper#url"},"url"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"nodeinfo"},"nodeInfo"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"nodeInfo"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"INodeInfo")),(0,i.kt)("p",null,"The node info"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"url"},"url"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"url"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The url of the node"))}d.isMDXComponent=!0}}]);