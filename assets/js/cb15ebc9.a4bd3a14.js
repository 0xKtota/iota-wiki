"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[77806],{81482:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var o=t(87462),i=t(63366),a=(t(67294),t(3905)),r=t(87308),s=t(46603),c=["components"],l={title:"How To Mint Native Tokens"},d=void 0,u={unversionedId:"libraries/nodejs/how_to/mint_native_tokens",id:"libraries/nodejs/how_to/mint_native_tokens",title:"How To Mint Native Tokens",description:"",source:"@site/content/build/wallet.rs/develop/documentation/docs/libraries/nodejs/how_to/9_mint_native_tokens.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/mint_native_tokens",permalink:"/wallet.rs/develop/libraries/nodejs/how_to/mint_native_tokens",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/libraries/nodejs/how_to/9_mint_native_tokens.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"How To Mint Native Tokens"},sidebar:"docs",previous:{title:"How To Claim Outputs",permalink:"/wallet.rs/develop/libraries/nodejs/how_to/claim_outputs"},next:{title:"How To Send Native Tokens",permalink:"/wallet.rs/develop/libraries/nodejs/how_to/send_native_tokens"}},p={},m=[],k={toc:m};function v(n){var e=n.components,t=(0,i.Z)(n,c);return(0,a.kt)("wrapper",(0,o.Z)({},k,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)(r.Z,{className:"language-javascript",mdxType:"CodeBlock"},"/**\n * This example mints native tokens\n */\nconst getUnlockedManager = require('./account-manager');\n\nasync function run() {\n    try {\n        const manager = await getUnlockedManager();\n\n        const account = await manager.getAccount('0');\n\n        await account.sync();\n        \n        // If we omit the AccountAddress field the first address of the account is used by default\n        const nativeTokenOptions = {\n            // Hello in bytes\n            foundryMetadata: '0x48656c6c6f',\n            circulatingSupply: '0x64',\n            maximumSupply: '0x64',\n        };\n\n        let { transaction } = await account.mintNativeToken(\n            nativeTokenOptions,\n        );\n        console.log('Transaction ID: ', transaction.transactionId);\n    } catch (error) {\n        console.log('Error: ', error);\n    }\n    process.exit(0);\n}\n\nrun();\n"),(0,a.kt)(s.ZP,{mdxType:"MoreExamples"}))}v.isMDXComponent=!0},46603:function(n,e,t){t.d(e,{ZP:function(){return c}});var o=t(87462),i=t(63366),a=(t(67294),t(3905)),r=["components"],s={toc:[]};function c(n){var e=n.components,t=(0,i.Z)(n,r);return(0,a.kt)("wrapper",(0,o.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"More advanced examples can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wallet.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}c.isMDXComponent=!0}}]);