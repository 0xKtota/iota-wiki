"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[28568],{54620:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var i=n(74034),r=n(79973),a=(n(67294),n(3905)),o=["components"],s={title:"Resolve an IOTA Identity",sidebar_label:"Resolve",description:"Explain how resolving works including arguments.",image:"/img/Identity_icon.png",keywords:["Resolve","DID"]},d=void 0,l={unversionedId:"getting-started/decentralized_identifiers/resolve",id:"getting-started/decentralized_identifiers/resolve",isDocsHomePage:!1,title:"Resolve an IOTA Identity",description:"Explain how resolving works including arguments.",source:"@site/external/identity.rs/documentation/docs/getting-started/decentralized_identifiers/resolve.md",sourceDirName:"getting-started/decentralized_identifiers",slug:"/getting-started/decentralized_identifiers/resolve",permalink:"/identity.rs/getting-started/decentralized_identifiers/resolve",tags:[],version:"current",frontMatter:{title:"Resolve an IOTA Identity",sidebar_label:"Resolve",description:"Explain how resolving works including arguments.",image:"/img/Identity_icon.png",keywords:["Resolve","DID"]},sidebar:"docs",previous:{title:"Create and Publish",permalink:"/identity.rs/getting-started/decentralized_identifiers/create"},next:{title:"Update",permalink:"/identity.rs/getting-started/decentralized_identifiers/update"}},c=[{value:"Resolving an Identity using the Account",id:"resolving-an-identity-using-the-account",children:[],level:3},{value:"Resolving an Identity using the Identity Resolver tool",id:"resolving-an-identity-using-the-identity-resolver-tool",children:[],level:3},{value:"Dereferencing resources associated with a DID Document",id:"dereferencing-resources-associated-with-a-did-document",children:[],level:3}],p={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The previous section showed how to create a decentralized identity and publish the associated DID Document to the Tangle; this section explores resolving a published DID document."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Definition")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("em",{parentName:"p"},"DID resolution")," is the process of obtaining the latest version of a DID document for a given DID."))),(0,a.kt)("h3",{id:"resolving-an-identity-using-the-account"},"Resolving an Identity using the Account"),(0,a.kt)("p",null,"Continuing from the previous example, we'll use the ",(0,a.kt)("inlineCode",{parentName:"p"},"did")," associated with the identity we created to retrieve the published DID document."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'// Retrieve the DID from the newly created Identity state.\nlet did: &IotaDID = snapshot.identity().try_did()?;\n\n// Fetch the DID Document from the Tangle.\nlet resolved_document: IotaDocument = account.resolve_identity(did).await?;\n\nprintln!("[Example] Tangle Document = {:#?}", resolved_document);\n')),(0,a.kt)("p",null,"In simplified terms, resolution works by querying the Tangle for DID Document messages and returning the most recent valid message that matches the specified DID. In practice, the operation is more complex and is explained in full in the ",(0,a.kt)("a",{parentName:"p",href:"../../specs/iota_did_method_spec#read"},"IOTA DID Method specification"),"."),(0,a.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Normal nodes in the IOTA network do not store a full history of the Tangle, which means that at some point DID messages will be dropped. The solution is to use an IOTA permanode (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/chronicle.rs"},"Chronicle"),") which stores the entire history of the Tangle. For more information see the section on ",(0,a.kt)("a",{parentName:"p",href:"../advanced/did_messages#valid-did-documents"},"Valid DID Documents"),"."))),(0,a.kt)("h3",{id:"resolving-an-identity-using-the-identity-resolver-tool"},"Resolving an Identity using the Identity Resolver tool"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.iota.org/mainnet/identity-resolver/"},"Identity Resolver")," is a web-based tool for resolving Decentralized Identifiers (DIDs) into their associated DID Document. This tool can be used during the development of a DID application to easily browse and verify the correctness of documents being published to the Tangle. It supports both the mainnet and devnet."),(0,a.kt)("h3",{id:"dereferencing-resources-associated-with-a-did-document"},"Dereferencing resources associated with a DID Document"),(0,a.kt)("p",null,'In addition resolving a DID document, another "read" operation that can be performed is dereferencing.'),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Definitions")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"}," ",(0,a.kt)("em",{parentName:"p"},"DID URL dereferencing")," is the process of retrieving a representation of a resource for a given DID URL."))),(0,a.kt)("p",null,"Dereferencing takes a 'DID URL' and 'Dereference Options' returns the 'Dereference Metadata', a 'Content Stream', and 'Content Metadata'. For example, one could retrieve a file associated with a particular identity: ",(0,a.kt)("inlineCode",{parentName:"p"},"did:example:1234?service=files&relativeRef=%2Fmyresume%2Fdoc%3Fversion%3Dlatest")))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),l=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(d,".").concat(u)]||m[u]||p[u]||a;return n?i.createElement(h,o(o({ref:t},c),{},{components:n})):i.createElement(h,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);