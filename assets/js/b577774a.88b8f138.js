"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[73949],{3905:(e,n,r)=>{r.d(n,{Zo:()=>f,kt:()=>m});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},f=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,d=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return r?t.createElement(d,c(c({ref:n},f),{},{components:r})):t.createElement(d,c({ref:n},f))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},21312:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const o={},c="Interface: MnemonicSecretManager",i={unversionedId:"references/nodejs/interfaces/MnemonicSecretManager",id:"references/nodejs/interfaces/MnemonicSecretManager",title:"Interface: MnemonicSecretManager",description:"Secret manager that uses a mnemonic.",source:"@site/content/build/wallet.rs/develop/documentation/docs/references/nodejs/interfaces/MnemonicSecretManager.md",sourceDirName:"references/nodejs/interfaces",slug:"/references/nodejs/interfaces/MnemonicSecretManager",permalink:"/wallet.rs/develop/references/nodejs/interfaces/MnemonicSecretManager",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/references/nodejs/interfaces/MnemonicSecretManager.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: MintTokenTransaction",permalink:"/wallet.rs/develop/references/nodejs/interfaces/MintTokenTransaction"},next:{title:"Interface: NativeTokenBalance",permalink:"/wallet.rs/develop/references/nodejs/interfaces/NativeTokenBalance"}},s={},l=[],f={toc:l};function p(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interface-mnemonicsecretmanager"},"Interface: MnemonicSecretManager"),(0,a.kt)("p",null,"Secret manager that uses a mnemonic."))}p.isMDXComponent=!0}}]);