"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[84065],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(t),g=o,f=p["".concat(c,".").concat(g)]||p[g]||l[g]||a;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},28754:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],s={description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",image:"/img/Banner/banner_wasp_using_docker.png",keywords:["Smart Contracts","Running a node","docker","image","build","configure","arguments"]},c="Docker (Standalone)",u={unversionedId:"guide/chains_and_nodes/docker_standalone",id:"guide/chains_and_nodes/docker_standalone",title:"Docker (Standalone)",description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",source:"@site/content/build/wasp/develop/documentation/docs/guide/chains_and_nodes/docker_standalone.md",sourceDirName:"guide/chains_and_nodes",slug:"/guide/chains_and_nodes/docker_standalone",permalink:"/smart-contracts/develop/guide/chains_and_nodes/docker_standalone",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/chains_and_nodes/docker_standalone.md",tags:[],version:"current",frontMatter:{description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",image:"/img/Banner/banner_wasp_using_docker.png",keywords:["Smart Contracts","Running a node","docker","image","build","configure","arguments"]},sidebar:"tutorialSidebar",previous:{title:"Node Configuration",permalink:"/smart-contracts/develop/guide/chains_and_nodes/node-config"},next:{title:"Configuring wasp-cli",permalink:"/smart-contracts/develop/guide/chains_and_nodes/wasp-cli"}},d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Running a Wasp Node",id:"running-a-wasp-node",level:2},{value:"Configuration of built images",id:"configuration-of-built-images",level:3}],p={toc:l};function g(e){var n=e.components,s=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker-standalone"},"Docker (Standalone)"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Wasp Node using Docker",src:t(8737).Z,width:"862",height:"200"})),(0,a.kt)("p",null,"This page describes the configuration of a single Wasp node in combination with Docker. "),(0,a.kt)("p",null,"The docker setup comes preconfigured and should work as is, differing setups might require a different configuration."),(0,a.kt)("p",null,"In this case the following instructions should be read ",(0,a.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/chains_and_nodes/running-a-node"},"Running a Node"),"."),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("h2",{id:"running-a-wasp-node"},"Running a Wasp Node"),(0,a.kt)("p",null,"Checkout the project, switch to 'develop' and build the main image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/iotaledger/wasp.git\ncd wasp\ndocker build -t wasp-node .\n")),(0,a.kt)("p",null,"The build process will copy the docker_config.json file into the image, which will be used when the node gets started."),(0,a.kt)("p",null,"By default, the build process will use ",(0,a.kt)("inlineCode",{parentName:"p"},"-tags rocksdb,builtin_static")," as a build argument. This argument can be modified with ",(0,a.kt)("inlineCode",{parentName:"p"},"--build-arg BUILD_TAGS=<tags>"),"."),(0,a.kt)("p",null,"Depending on the use case, it might be required to change the default Hornet configuration, which can be changed in this location inside the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp/blob/develop/docker_config.json"},"docker_config.json")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"l1": {\n  "apiAddress": "http://hornet:14265",\n  "faucetAddress": "http://hornet:8091"\n},\n')),(0,a.kt)("p",null,"After the build process has finished, you can start your Wasp node by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run wasp-node\n")),(0,a.kt)("h3",{id:"configuration-of-built-images"},"Configuration of built images"),(0,a.kt)("p",null,"After the build process has been completed, it is still possible to inject a different configuration file into a new container by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -v $(pwd)/alternative_docker_config.json:/etc/wasp_config.json wasp-node\n")),(0,a.kt)("p",null,"You can also add further configuration using arguments:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'docker run wasp-node --l1.apiAddress="alt_hornet:14265"\n')),(0,a.kt)("p",null,"To get a list of all available arguments, run the node with the argument '--help'"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run wasp-node --help\n")))}g.isMDXComponent=!0},8737:function(e,n,t){n.Z=t.p+"assets/images/banner_wasp_using_docker-f65ddb8d20cc101767281e95f48eaa5e.png"}}]);