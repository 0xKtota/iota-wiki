"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[18306],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),f=i,b=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return t?n.createElement(b,o(o({ref:r},c),{},{components:t})):n.createElement(b,o({ref:r},c))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},91048:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var n=t(87462),i=t(63366),a=(t(67294),t(3905)),o=["components"],s={},l="Interface: IGenerateAddressesOptions",p={unversionedId:"libraries/nodejs/references/interfaces/IGenerateAddressesOptions",id:"libraries/nodejs/references/interfaces/IGenerateAddressesOptions",title:"Interface: IGenerateAddressesOptions",description:"Input options for GenerateAddresses",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/IGenerateAddressesOptions.md",sourceDirName:"libraries/nodejs/references/interfaces",slug:"/libraries/nodejs/references/interfaces/IGenerateAddressesOptions",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/IGenerateAddressesOptions",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/IGenerateAddressesOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: IGenerateAddressMetadata",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/IGenerateAddressMetadata"},next:{title:"Interface: IInputSigningData",permalink:"/iota.rs/develop/libraries/nodejs/references/interfaces/IInputSigningData"}},c={},d=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Properties",id:"properties",level:3},{value:"Properties",id:"properties-1",level:2},{value:"internal",id:"internal",level:3},{value:"bech32Hrp",id:"bech32hrp",level:3}],u={toc:d};function f(e){var r=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interface-igenerateaddressesoptions"},"Interface: IGenerateAddressesOptions"),(0,a.kt)("p",null,"Input options for GenerateAddresses"),(0,a.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,a.kt)("h3",{id:"properties"},"Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/iota.rs/develop/libraries/nodejs/references/interfaces/IGenerateAddressesOptions#internal"},"internal")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/iota.rs/develop/libraries/nodejs/references/interfaces/IGenerateAddressesOptions#bech32hrp"},"bech32Hrp"))),(0,a.kt)("h2",{id:"properties-1"},"Properties"),(0,a.kt)("h3",{id:"internal"},"internal"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"internal"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Internal addresses"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"bech32hrp"},"bech32Hrp"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"bech32Hrp"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Bech32 human readable part"))}f.isMDXComponent=!0}}]);