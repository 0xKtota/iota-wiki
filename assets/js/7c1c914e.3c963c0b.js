"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[88264],{78811:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),o=(n(67294),n(3905));const s={toc:[]};function r(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Iota.js",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can also find this guide in the native ",(0,o.kt)("a",{href:n.exampleURL}," iota.js library"))))}r.isMDXComponent=!0},30878:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),o=(n(67294),n(3905));const s={toc:[]};function r(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Account Approaches",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Wallet.rs supports a ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/explanations/account_approaches#multi-account-approach"},"multi-account approach")," and\na ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/explanations/account_approaches#single-account-approach"},"single-account approach"),".")))}r.isMDXComponent=!0},27359:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),o=(n(67294),n(3905));const s={toc:[]};function r(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Dotenv",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This example uses dotenv, which is not safe for use in production environments.")))}r.isMDXComponent=!0},26746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>Z,contentTitle:()=>T,default:()=>D,frontMatter:()=>b,metadata:()=>N,toc:()=>A});var a=n(87462),o=(n(67294),n(3905)),s=n(54411),r=n(43305),l=n(44393);const d={toc:[]};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{className:"language-typescript",mdxType:"CodeBlock"},"/**\n * This example generates a new address.\n */\nconst getUnlockedManager = require('./account-manager');\n\nasync function run() {\n    try {\n        const manager = await getUnlockedManager();\n\n        const account = await manager.getAccount('0');\n        console.log('Account:', account);\n\n        const address = await account.generateAddress();\n        console.log('New address:', address);\n\n        // It's also possible to generate multiple addresses\n        // const addresses = await account.generateAddresses(2);\n        // console.log('New addresses:', addresses);\n\n        // Use the Faucet to send testnet tokens to your address:\n        console.log(\"Fill your address with the Faucet:  https://faucet.testnet.shimmer.network\")\n    } catch (error) {\n        console.log('Error: ', error);\n    }\n    process.exit(0);\n}\n\nrun();\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,o.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"node 2-generate-address.js"))}c.isMDXComponent=!0;const u={toc:[]};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"Account: Account {\n  meta: {\n    index: 0,\n    coinType: 4219,\n    alias: 'Alice',\n    publicAddresses: [ [Object] ],\n    internalAddresses: [],\n    addressesWithUnspentOutputs: [],\n    outputs: {},\n    lockedOutputs: [],\n    unspentOutputs: {},\n    transactions: {},\n    pendingTransactions: [],\n    incomingTransactions: {}\n  },\n  messageHandler: MessageHandler { messageHandler: [External: 7fa6ffff18d0] }\n}\nNew address: {\n  address: 'rms1qqqp07ychhkc3u68ueug0zqq9g0wtfgeatynr6ksm9jwud30rvlkyqnhpl5',\n  keyIndex: 1,\n  internal: false,\n  used: false\n}\nFill your address with the Faucet:  https://faucet.testnet.shimmer.network\n\n")))}p.isMDXComponent=!0;const i={toc:[]};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{className:"language-python",mdxType:"CodeBlock"},"from iota_wallet import IotaWallet\n\n# This example generates a new address.\n\nwallet = IotaWallet('./alice-database')\n\nwallet.set_stronghold_password(\"some_hopefully_secure_password\")\n\naccount = wallet.get_account('Alice')\n\naddress = account.generate_addresses(1)\n# address = account.generate_addresses(\n#     1, {'internal': True, 'metadata': {'syncing': True, 'network': 'Testnet'}})\nprint(f'Address: {address}')\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"binding/python/native/examples")," folder:"),(0,o.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"python3 1-generate-address.py"))}m.isMDXComponent=!0;const h={toc:[]};function g(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"Address: [\n  {\n    'address': 'rms1qplwj3pwn0kgamynajff2xqemu7h9rw0as7ayxt8hq0pl5wxfyxwsfdprdu',\n    'keyIndex': 1,\n    'internal': False,\n    'used': False\n  }\n]\n")))}g.isMDXComponent=!0;var w=n(27359);const k={toc:[{value:"Run the Example",id:"run-the-example",level:3}]};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(w.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(l.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2021 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example generate_address --release\n// In this example we will generate an address\n// Rename `.env.example` to `.env` first\n\nuse std::env;\n\nuse dotenv::dotenv;\nuse iota_wallet::{account_manager::AccountManager, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // This example uses dotenv, which is not safe for use in production\n    dotenv().ok();\n\n    // Create the account manager\n    let manager = AccountManager::builder().finish().await?;\n\n    // Get the account we generated with `01_create_wallet`\n    let account = manager.get_account("Alice").await?;\n\n    // Set the stronghold password\n    manager\n        .set_stronghold_password(&env::var("STRONGHOLD_PASSWORD").unwrap())\n        .await?;\n\n    let address = account.generate_addresses(1, None).await?;\n    println!("Generated address: {}", address[0].address().to_bech32());\n\n    Ok(())\n}\n'),(0,o.kt)("h3",{id:"run-the-example"},"Run the Example"),(0,o.kt)("p",null,"Run the example by running the following command:"),(0,o.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example generate_address --release"))}y.isMDXComponent=!0;const f={toc:[]};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Generated address: rms1qzzk86qv30l4e85ljtccxa0ruy8y7u8zn2dle3g8dv2tl2m4cu227a7n2wj\n")))}v.isMDXComponent=!0;var _=n(30878),x=n(78811);const b={title:"Generate an Address",description:"How to generate an address for a wallet account.",image:"/img/logo/iota_mark_light.png",keywords:["how to","generate address","generate wallet address","account manager","multi account approach","single account approach","nodejs","python","rust"]},T=void 0,N={unversionedId:"how_tos/accounts_and_addresses/generate_address",id:"how_tos/accounts_and_addresses/generate_address",title:"Generate an Address",description:"How to generate an address for a wallet account.",source:"@site/content/build/wallet.rs/develop/documentation/docs/how_tos/accounts_and_addresses/02_generate_address.mdx",sourceDirName:"how_tos/accounts_and_addresses",slug:"/how_tos/accounts_and_addresses/generate_address",permalink:"/wallet.rs/develop/how_tos/accounts_and_addresses/generate_address",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/how_tos/accounts_and_addresses/02_generate_address.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Generate an Address",description:"How to generate an address for a wallet account.",image:"/img/logo/iota_mark_light.png",keywords:["how to","generate address","generate wallet address","account manager","multi account approach","single account approach","nodejs","python","rust"]},sidebar:"docs",previous:{title:"Create a Wallet Account",permalink:"/wallet.rs/develop/how_tos/accounts_and_addresses/create_a_wallet_account"},next:{title:"Request Funds",permalink:"/wallet.rs/develop/how_tos/accounts_and_addresses/request_funds"}},Z={},A=[{value:"Code Example",id:"code-example",level:2},{value:"Expected Output",id:"expected-output",level:2}],C={toc:A};function D(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After you have ",(0,o.kt)("a",{parentName:"p",href:"/wallet.rs/develop/how_tos/accounts_and_addresses/create_a_wallet_account"},"created an account"),", you have a single address in the account. But you can generate more addresses."),(0,o.kt)(_.ZP,{mdxType:"TipAccountApproaches"}),(0,o.kt)(x.ZP,{exampleURL:"https://wiki.iota.org/iotajs/how_tos/address",mdxType:"IOTAJsExample"}),(0,o.kt)("h2",{id:"code-example"},"Code Example"),(0,o.kt)("p",null,"The following example will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account manager."),(0,o.kt)("li",{parentName:"ol"},"Get Alice's account which was ",(0,o.kt)("a",{parentName:"li",href:"/wallet.rs/develop/how_tos/accounts_and_addresses/create_a_wallet_account"},"created in the first guide"),"."),(0,o.kt)("li",{parentName:"ol"},"Generate an address in Alice's account.")),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(y,{mdxType:"RustCode"})),(0,o.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(c,{mdxType:"NodejsCode"})),(0,o.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(m,{mdxType:"PythonCode"}))),(0,o.kt)("h2",{id:"expected-output"},"Expected Output"),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(v,{mdxType:"RustOutput"})),(0,o.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(p,{mdxType:"NodejsOutput"})),(0,o.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(g,{mdxType:"PythonOutput"}))))}D.isMDXComponent=!0},43305:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),o=n(86010);const s="tabItem__kUE";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,r),hidden:n},t)}},54411:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),s=n(86010),r=n(51048),l=n(33609),d=n(1943),c=n(72957);const u="tabList_fbd4",p="tabItem_v5XY";function i(e){var t,n;const{lazy:r,block:i,defaultValue:m,values:h,groupId:g,className:w}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=h?h:k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,l.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(t=null!=m?m:null==(n=k.find((e=>e.props.default)))?void 0:n.props.value)?t:k[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:_,setTabGroupChoices:x}=(0,d.U)(),[b,T]=(0,o.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:Z}=(0,c.o5)();if(null!=g){const e=_[g];null!=e&&e!==b&&y.some((t=>t.value===e))&&T(e)}const A=e=>{const t=e.currentTarget,n=N.indexOf(t),a=y[n].value;a!==b&&(Z(t),T(a),null!=g&&x(g,String(a)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=N.indexOf(e.currentTarget)+1;n=null!=(a=N[t])?a:N[0];break}case"ArrowLeft":{var o;const t=N.indexOf(e.currentTarget)-1;n=null!=(o=N[t])?o:N[N.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,s.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},w)},y.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,key:t,ref:e=>N.push(e),onKeyDown:C,onFocus:A,onClick:A},r,{className:(0,s.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":b===t})}),null!=n?n:t)}))),r?(0,o.cloneElement)(k.filter((e=>e.props.value===b))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==b})))))}function m(e){const t=(0,r.Z)();return o.createElement(i,(0,a.Z)({key:String(t)},e))}}}]);