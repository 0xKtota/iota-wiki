"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[6448],{86190:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var t=n(87462),r=(n(67294),n(3905)),i=n(44393),s=n(59728);const a={title:"How To Create A Block"},l=void 0,c={unversionedId:"libraries/nodejs/how_to/create_block",id:"libraries/nodejs/how_to/create_block",title:"How To Create A Block",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/5_create_block.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/create_block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/create_block",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/5_create_block.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"How To Create A Block"},sidebar:"docs",previous:{title:"How To Generate Addresses",permalink:"/iota.rs/develop/libraries/nodejs/how_to/generate_addresses"},next:{title:"How To Get A Block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_block"}},d={},p=[],k={toc:p};function u(e){let{components:o,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},k,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\nrequire('dotenv').config({ path: '../.env' });\n\n// Run with command:\n// node ./dist/06_simple_block.js\n\n// In this example we will send a block without a payload\nasync function run() {\n    initLogger();\n    if (!process.env.NODE_URL) {\n        throw new Error('.env NODE_URL is undefined, see .env.example');\n    }\n\n    const client = new Client({\n        // Insert your node URL in the .env.\n        nodes: [process.env.NODE_URL],\n        localPow: true,\n    });\n\n    try {\n        // Create block with no payload\n        const blockIdAndBlock = await client.buildAndPostBlock();\n        console.log('Block:', blockIdAndBlock, '\\n');\n\n        console.log(\n            `Empty block sent: ${process.env.EXPLORER_URL}/block/${blockIdAndBlock[0]}`,\n        );\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun().then(() => process.exit());\n"),(0,r.kt)(s.ZP,{mdxType:"MoreExamples"}))}u.isMDXComponent=!0},59728:(e,o,n)=>{n.d(o,{ZP:()=>s});var t=n(87462),r=(n(67294),n(3905));const i={toc:[]};function s(e){let{components:o,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},i,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"More advanced examples can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}s.isMDXComponent=!0}}]);