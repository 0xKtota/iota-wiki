"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[62482],{74848:(e,t,n)=>{n.d(t,{ZP:()=>a});var o=n(87462),i=(n(67294),n(3905));const r={toc:[]};function a(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/examples"},"examples")," folder."))}a.isMDXComponent=!0},14236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>m,toc:()=>d});var o=n(87462),i=(n(67294),n(3905)),r=n(44393),a=n(74848);const s={title:"How To Generate A Mnemonic"},l=void 0,m={unversionedId:"libraries/rust/how_to/generate_mnemonic",id:"libraries/rust/how_to/generate_mnemonic",title:"How To Generate A Mnemonic",description:"Run it with",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/rust/how_to/generate_mnemonic.mdx",sourceDirName:"libraries/rust/how_to",slug:"/libraries/rust/how_to/generate_mnemonic",permalink:"/iota.rs/develop/libraries/rust/how_to/generate_mnemonic",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/rust/how_to/generate_mnemonic.mdx",tags:[],version:"current",frontMatter:{title:"How To Generate A Mnemonic"},sidebar:"docs",previous:{title:"How To Post A Block",permalink:"/iota.rs/develop/libraries/rust/how_to/post_block"},next:{title:"How To Generate Addresses",permalink:"/iota.rs/develop/libraries/rust/how_to/generate_addresses"}},c={},d=[],u={toc:d};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(r.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example generate_mnemonic --release\n\nuse iota_client::{Client, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    let mnemonic = Client::generate_mnemonic()?;\n\n    println!("Mnemonic: {mnemonic}");\n\n    Ok(())\n}\n'),(0,i.kt)("p",null,"Run it with"),(0,i.kt)(r.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example generate_mnemonic --release"),(0,i.kt)(a.ZP,{mdxType:"MoreExamples"}))}p.isMDXComponent=!0}}]);