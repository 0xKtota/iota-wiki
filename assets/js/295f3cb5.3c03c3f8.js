"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[3631],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},15479:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={},s="Interface: Transaction",c={unversionedId:"libraries/nodejs/references/interfaces/Transaction",id:"libraries/nodejs/references/interfaces/Transaction",title:"Interface: Transaction",description:"A Transaction with metadata",source:"@site/content/build/wallet.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/Transaction.md",sourceDirName:"libraries/nodejs/references/interfaces",slug:"/libraries/nodejs/references/interfaces/Transaction",permalink:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/content/build/wallet.rs/develop/documentation/docs/libraries/nodejs/references/interfaces/Transaction.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: StrongholdSecretManager",permalink:"/wallet.rs/develop/libraries/nodejs/references/interfaces/StrongholdSecretManager"},next:{title:"Interface: TransactionOptions",permalink:"/wallet.rs/develop/libraries/nodejs/references/interfaces/TransactionOptions"}},p={},d=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Properties",id:"properties",level:3},{value:"Properties",id:"properties-1",level:2},{value:"payload",id:"payload",level:3},{value:"blockId",id:"blockid",level:3},{value:"inclusionState",id:"inclusionstate",level:3},{value:"timestamp",id:"timestamp",level:3},{value:"transactionId",id:"transactionid",level:3},{value:"networkId",id:"networkid",level:3},{value:"incoming",id:"incoming",level:3}],u={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interface-transaction"},"Interface: Transaction"),(0,i.kt)("p",null,"A Transaction with metadata"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#payload"},"payload")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#blockid"},"blockId")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#inclusionstate"},"inclusionState")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#timestamp"},"timestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#transactionid"},"transactionId")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#networkid"},"networkId")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/wallet.rs/develop/libraries/nodejs/references/interfaces/Transaction#incoming"},"incoming"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"payload"},"payload"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"payload"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ITransactionPayload")),(0,i.kt)("p",null,"The transaction payload"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"blockid"},"blockId"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"blockId"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The block id in which the transaction payload was included"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"inclusionstate"},"inclusionState"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"inclusionState"),": ",(0,i.kt)("a",{parentName:"p",href:"/wallet.rs/develop/libraries/nodejs/references/enums/InclusionState"},(0,i.kt)("inlineCode",{parentName:"a"},"InclusionState"))),(0,i.kt)("p",null,"The inclusion state of the transaction"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"timestamp"},"timestamp"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"timestamp"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The creation time"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"transactionid"},"transactionId"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"transactionId"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The transaction id"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"networkid"},"networkId"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"networkId"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The network id in which the transaction was sent"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"incoming"},"incoming"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"incoming"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"If the transaction was created by the wallet or someone else"))}f.isMDXComponent=!0}}]);