"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[47362],{44707:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=o(87462),n=o(63366),a=(o(67294),o(3905)),i=["components"],l={description:"Solo is a testing framework that allows developers to validate real smart contracts and entire inter-chain protocols",image:"/img/logo/WASP_logo_dark.png",keywords:["testing framework","golang","rust","inter-chain protocols","validate smart contracts","install"]},s="Testing Smart Contracts with Solo",c={unversionedId:"guide/solo/what-is-solo",id:"guide/solo/what-is-solo",title:"Testing Smart Contracts with Solo",description:"Solo is a testing framework that allows developers to validate real smart contracts and entire inter-chain protocols",source:"@site/content/build/wasp/develop/documentation/docs/guide/solo/what-is-solo.md",sourceDirName:"guide/solo",slug:"/guide/solo/what-is-solo",permalink:"/smart-contracts/develop/guide/solo/what-is-solo",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/solo/what-is-solo.md",tags:[],version:"current",frontMatter:{description:"Solo is a testing framework that allows developers to validate real smart contracts and entire inter-chain protocols",image:"/img/logo/WASP_logo_dark.png",keywords:["testing framework","golang","rust","inter-chain protocols","validate smart contracts","install"]},sidebar:"tutorialSidebar",previous:{title:"The Common Account",permalink:"/smart-contracts/develop/guide/core_concepts/accounts/the-common-account"},next:{title:"First Example",permalink:"/smart-contracts/develop/guide/solo/first-example"}},p={},u=[{value:"What is Solo?",id:"what-is-solo",level:2},{value:"Installation",id:"installation",level:2}],m={toc:u};function d(e){var t=e.components,o=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"testing-smart-contracts-with-solo"},"Testing Smart Contracts with Solo"),(0,a.kt)("h2",{id:"what-is-solo"},"What is Solo?"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp/tree/develop/packages/solo"},(0,a.kt)("em",{parentName:"a"},"Solo"))," is a testing framework that allows developers to validate real smart contracts and entire inter-chain protocols before deploying them on the distributed network."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Solo")," tests are written in Go. Go (version 1.18) needs to be installed on your machine."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Solo")," is part of the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp.git"},(0,a.kt)("em",{parentName:"a"},"Wasp")," codebase repository"),". You can access the Solo framework by cloning the repository with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/iotaledger/wasp.git\n")),(0,a.kt)("p",null,"Alternatively, you can install the Solo package separately using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"go get github.com/iotaledger/wasp/packages/solo\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You can browse the Solo Go API reference (updated to the ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," branch) in ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/iotaledger/wasp/packages/solo"},"go-docs"),".")),(0,a.kt)("p",null,"Of course, along with Solo you will need a smart contract to test.\nYou can find example implementations of Rust/Wasm smart contracts (including source code and tests) in the Wasp repository, in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp/tree/develop/contracts/wasm"},"contracts/wasm folder"),".\nFor information about how to create Wasm smart contracts, refer to the ",(0,a.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/wasm_vm/intro"},"Wasm VM chapter"),"."),(0,a.kt)("p",null,"In the following sections we will present some Solo usage examples. The example code can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp/tree/develop/documentation/tutorial-examples"},"Wasp repository"),"."))}d.isMDXComponent=!0},3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return d}});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(o),d=n,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return o?r.createElement(g,i(i({ref:t},p),{},{components:o})):r.createElement(g,i({ref:t},p))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=o[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"}}]);