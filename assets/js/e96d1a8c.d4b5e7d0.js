"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[93130],{33564:function(e,o,n){n.r(o),n.d(o,{assets:function(){return u},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return k}});var t=n(87462),r=n(63366),i=(n(67294),n(3905)),a=n(69319),c=n(43791),l=["components"],s={title:"How To Get A Block"},d=void 0,p={unversionedId:"libraries/nodejs/how_to/get_block",id:"libraries/nodejs/how_to/get_block",title:"How To Get A Block",description:"",source:"@site/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/6_get_block.mdx",sourceDirName:"libraries/nodejs/how_to",slug:"/libraries/nodejs/how_to/get_block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/get_block",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/libraries/nodejs/how_to/6_get_block.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"How To Get A Block"},sidebar:"docs",previous:{title:"How To Create A Block",permalink:"/iota.rs/develop/libraries/nodejs/how_to/create_block"},next:{title:"How To Prepare And Sign A Transaction",permalink:"/iota.rs/develop/libraries/nodejs/how_to/prepare_sign_transaction"}},u={},k=[],b={toc:k};function m(e){var o=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},b,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\nrequire('dotenv').config({ path: '../.env' });\n\n// Run with command:\n// node ./dist/07_get_block_data.js\n\n// In this example we will send a block and get the data and metadata for it\nasync function run() {\n    initLogger();\n    if (!process.env.NODE_URL) {\n        throw new Error('.env NODE_URL is undefined, see .env.example');\n    }\n\n    const client = new Client({\n        // Insert your node URL in the .env.\n        nodes: [process.env.NODE_URL],\n    });\n\n    try {\n        // Create block with no payload.\n        const blockIdAndBlock = await client.buildAndPostBlock();\n        console.log('Block:', blockIdAndBlock, '\\n');\n\n        // Get the metadata for the block.\n        const blockMetadata = await client.getBlockMetadata(blockIdAndBlock[0]);\n        console.log('Block metadata: ', blockMetadata, '\\n');\n\n        // Request the block by its id.\n        const blockData = await client.getBlock(blockIdAndBlock[0]);\n        console.log('Block data: ', blockData, '\\n');\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun().then(() => process.exit());\n"),(0,i.kt)(c.ZP,{mdxType:"MoreExamples"}))}m.isMDXComponent=!0},43791:function(e,o,n){n.d(o,{ZP:function(){return l}});var t=n(87462),r=n(63366),i=(n(67294),n(3905)),a=["components"],c={toc:[]};function l(e){var o=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"More advanced examples can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/bindings/nodejs/examples"},"examples")," folder."))}l.isMDXComponent=!0}}]);