"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[46294],{36941:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return m},default:function(){return f}});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),c=n(31137),l=n(71871),u=["components"],s={keywords:["ISCP","view","account","balances","Rust","Solo"],description:"The Accounts contract provides the balance, totalAssets and accounts views.",image:"/img/logo/WASP_logo_dark.png"},i="View Account Balances",p={unversionedId:"guide/core_concepts/accounts/view-account-balances",id:"guide/core_concepts/accounts/view-account-balances",isDocsHomePage:!1,title:"View Account Balances",description:"The Accounts contract provides the balance, totalAssets and accounts views.",source:"@site/external/wasp/documentation/docs/guide/core_concepts/accounts/view-account-balances.mdx",sourceDirName:"guide/core_concepts/accounts",slug:"/guide/core_concepts/accounts/view-account-balances",permalink:"/wasp/guide/core_concepts/accounts/view-account-balances",tags:[],version:"current",frontMatter:{keywords:["ISCP","view","account","balances","Rust","Solo"],description:"The Accounts contract provides the balance, totalAssets and accounts views.",image:"/img/logo/WASP_logo_dark.png"},sidebar:"tutorialSidebar",previous:{title:"How to Withdraw From a Chain",permalink:"/wasp/guide/core_concepts/accounts/how-to-withdraw-from-a-chain"},next:{title:"The Common Account",permalink:"/wasp/guide/core_concepts/accounts/the-common-account"}},m=[{value:"balance",id:"balance",children:[]},{value:"totalAssets",id:"totalassets",children:[]},{value:"accounts",id:"accounts",children:[]},{value:"getAccountNonce",id:"getaccountnonce",children:[]}],d={toc:m};function f(e){var t=e.components,n=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"view-account-balances"},"View Account Balances"),(0,o.kt)("p",null,"The Accounts contract provides the following views:"),(0,o.kt)("h2",{id:"balance"},"balance"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"balance")," - get the account balance of a specific account"),(0,o.kt)("p",null,"parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ParamAgentID")," - account's AgentID")),(0,o.kt)("p",null,"returns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a map of ","[token_color]"," -> ","[amount]")),(0,o.kt)("p",null,"examples:"),(0,o.kt)(c.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Rust (ISCP)",value:"rust"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"solo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"balances := chain.GetAccountBalance(agentID)\n"))),(0,o.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// TODO does this work?\nlet parms = ScMutableMap::new();\nparms.get_int64("a").set_value(AGENT_ID)\nlet ret = ctx.call(ScHname::new("accounts"), ScHname::new("balance"), Some(params), None);\nlet balances = ret.get_map(&KEY_BALANCES).immutable()\n')))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"totalassets"},"totalAssets"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"totalAssets")," - get the total colored balances controlled by the chain"),(0,o.kt)("p",null,"returns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a map of ","[token_color]"," -> ","[amount]")),(0,o.kt)(c.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Rust (ISCP)",value:"rust"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"solo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"balances:= chain.GetTotalAssets()\n"))),(0,o.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'let ret = ctx.call(ScHname::new("accounts"), ScHname::new("totalAssets") , None);\nlet balances = ret.get_map(&KEY_BALANCES).immutable()\n')))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"accounts"},"accounts"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"accounts")," - get a list of all accounts existing on the chain"),(0,o.kt)("p",null,"returns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a list of accounts (AgentIDs)")),(0,o.kt)(c.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Rust (ISCP)",value:"rust"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"solo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"accounts := chain.GetAccounts()\n"))),(0,o.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// TODO does this work?\nlet ret = ctx.call(ScHname::new("accounts"), ScHname::new("accounts") , None);\nlet account = ret.get_agent_id_array(&KEY_PARAMS)\n')))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"getaccountnonce"},"getAccountNonce"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getAccountNonce")," - get the current nonce for a given account."),(0,o.kt)("p",null,"parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ParamAgentID")," - account's AgentI")),(0,o.kt)("p",null,"returns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the current nonce")),(0,o.kt)(c.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Rust (ISCP)",value:"rust"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"solo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"ret, err := chain.CallView(accounts.Contract.Name, accounts.FuncGetAccountNonce.Name,\n    accounts.ParamAgentID, iscp.NewAgentID(address, 0),\n)\nrequire.NoError(t, err)\nnonce, _, err := codec.DecodeUint64(ret.MustGet(accounts.ParamAccountNonce)\n"))),(0,o.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// TODO does this work?\nlet parms = ScMutableMap::new();\nparms.get_int64("a").set_value(AGENT_ID)\nlet ret = ctx.call(ScHname::new("accounts"), ScHname::new("getAccountNonce"), Some(params), None);\nlet nonce = ret.get_int64("n")\n')))))}f.isMDXComponent=!0},71871:function(e,t,n){var a=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},31137:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(67294),r=n(54179);var o=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},c=n(86010),l="tabItem_1uMI",u="tabItemActive_2DSg";var s=function(e){var t,n=e.lazy,r=e.block,s=e.defaultValue,i=e.values,p=e.groupId,m=e.className,d=a.Children.toArray(e.children),f=null!=i?i:d.map((function(e){return{value:e.props.value,label:e.props.label}})),v=null!=s?s:null==(t=d.find((function(e){return e.props.default})))?void 0:t.props.value,g=o(),b=g.tabGroupChoices,k=g.setTabGroupChoices,h=(0,a.useState)(v),w=h[0],y=h[1],N=[];if(null!=p){var A=b[p];null!=A&&A!==w&&f.some((function(e){return e.value===A}))&&y(A)}var T=function(e){var t=e.currentTarget,n=N.indexOf(t),a=f[n].value;y(a),null!=p&&(k(p,a),setTimeout((function(){var e,n,a,r,o,c,l,s;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,o=e.right,c=window,l=c.innerHeight,s=c.innerWidth,n>=0&&o<=s&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(u),setTimeout((function(){return t.classList.remove(u)}),2e3))}),150))},_=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case"ArrowLeft":var r=N.indexOf(e.target)-1;n=N[r]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":r},m)},f.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,c.Z)("tabs__item",l,{"tabs__item--active":w===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:_,onFocus:T,onClick:T},null!=n?n:t)}))),n?(0,a.cloneElement)(d.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}},54179:function(e,t,n){var a=(0,n(67294).createContext)(void 0);t.Z=a},3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},i=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(f,c(c({ref:t},i),{},{components:n})):a.createElement(f,c({ref:t},i))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},86010:function(e,t,n){function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);