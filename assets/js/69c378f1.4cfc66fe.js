"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[53067],{60902:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return h}});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),s=["components"],i={},c="Data Access Proxies",l={unversionedId:"guide/schema/proxies",id:"guide/schema/proxies",isDocsHomePage:!1,title:"Data Access Proxies",description:"To recap why we need a library to access the sandbox functionality: we cannot call the",source:"@site/external/wasp/documentation/docs/guide/schema/proxies.mdx",sourceDirName:"guide/schema",slug:"/guide/schema/proxies",permalink:"/wasp/guide/schema/proxies",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Smart Contract Schemas for ISCP",permalink:"/wasp/guide/schema/intro"},next:{title:"WasmLib Data Types",permalink:"/wasp/guide/schema/types"}},p=[],u={toc:p};function h(e){var t=e.components,i=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-access-proxies"},"Data Access Proxies"),(0,o.kt)("p",null,"To recap why we need a library to access the sandbox functionality: we cannot call the\nISCP sandbox functions directly. There is no way for the Wasm code to access any memory\noutside its own memory space. Therefore, any data that is governed by the ISCP sandbox has\nto be copied in and out of that memory space through well-defined protected channels in\nthe Wasm runtime system."),(0,o.kt)("p",null,"To make this whole process as seamless as possible the WasmLib interface provides a number\nof so-called ",(0,o.kt)("inlineCode",{parentName:"p"},"proxies"),". Proxies are objects that can perform the underlying data transfers\nbetween the separate systems. Proxies are a bit like data references in that regard.\nProxies refer to the actual objects or values stored on the ISCP host and know how to\nmanipulate them. They provide a consistent interface to the smart contract to achieve\nthat."),(0,o.kt)("p",null,"The most basic proxies are value proxies. They refer to a single value instance stored on\nthe ISCP host. All values are stored as key/value pairs in container objects on the ISCP\nhost. Value proxies refer to their values through an object id and key id combination that\nuniquely defines the value's location in the container object."),(0,o.kt)("p",null,"Another type of proxies are container proxies. To keep things as simple and understandable\nas possible these are limited to only two different kinds. Array proxies and map proxies.\nThese are enough to be able to define quite complex data structures, because we allow\nnesting of container objects. The underlying ISCP sandbox provides access to its data in\nthe form of simple key/value stores that can have arbitrary byte data for both key and\nvalue. WasmLib provides an abstraction on top of this one-dimensional storage system that\nsupports nesting of maps and arrays, very similar to the way objects in JSON can be\nnested."),(0,o.kt)("p",null,"A map is a key/value store where the key is one of our supported value types. Maps always\nstore elements of the same data type, which can be one of our supported value types, a\nuser-defined data type, or another container object\n(map or array)."),(0,o.kt)("p",null,"An array can be seen as a special kind of map. Its key is an integer value with the\nproperty that keys always form a sequence from 0 to N-1 for an array with N elements.\nArrays always store elements of the same data type, which can be one of our supported\nvalue types, a user-defined type, or a map. We do not support arrays of arrays at this\nmoment."),(0,o.kt)("p",null,"Here is an example that shows the use of proxies in WasmLib:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Proxies image",src:n(10766).Z})),(0,o.kt)("p",null,"In this example we have a single map in ISCP state storage that contains a number of\nkey/value combinations (Key 1 through Key 4). One of them (Key 4)\nrefers to an array, which in turn contains indexed values stored at indexes 0 through N.\nNotice how the WasmLib proxies mirror these exactly. There is a container proxy for every\ncontainer, and a value proxy for each value stored. Each container proxy can uniquely\nidentify the container it references through the container's id. Each value proxy uniquely\nidentifies the value it references through the container id of the container it is in, and\nthe key id (or index)\nthat correlates to its position in the container."),(0,o.kt)("p",null,"Note that despite the one-to-one correspondence in the example it is not necessary for a\nsmart contract function to define a proxy for every value or container in ISCP state\nstorage. In practice a function will only define proxies to data that it actually needs to\naccess."),(0,o.kt)("p",null,"In the next section we will go into more detail about the supported data types."))}h.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(n),d=r,f=h["".concat(c,".").concat(d)]||h[d]||u[d]||o;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},10766:function(e,t,n){t.Z=n.p+"assets/images/Proxies-1e4a9291ff02bd1c32181c3f35120333.png"}}]);