"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[36733],{36595:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>Z,contentTitle:()=>_,default:()=>D,frontMatter:()=>C,metadata:()=>N,toc:()=>M});var o=t(87462),a=(t(67294),t(3905)),l=t(54411),r=t(43305),i=t(44393);const s={toc:[]};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{className:"language-java",mdxType:"CodeBlock"},'package node_api_core;\n\nimport org.iota.Client;\nimport org.iota.types.ClientConfig;\nimport org.iota.types.ClientException;\n\npublic class GenerateMnemonic {\n    public static void main(String[] args) throws ClientException {\n        // Build the client.\n        Client client = new Client(new ClientConfig().withNodes(new String[]{"https://api.testnet.shimmer.network"}));\n\n        // Generate a mnemonic.\n        String mnemonic = client.generateMnemonic();\n\n        // Print the mnemonic.\n        System.out.println(mnemonic);\n    }\n}'))}c.isMDXComponent=!0;const m={toc:[]};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"glance zoo dove legend razor season evoke twenty flush solution essence destroy loud traffic friend decorate emotion total borrow expect actor switch shock zer\n")))}u.isMDXComponent=!0;const p={toc:[]};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\n\n// Run with command:\n// node ./dist/01_mnemonic.js\n\n// In this example we will generate a random BIP39 mnemonic\nasync function run() {\n    initLogger();\n\n    const client = new Client({});\n\n    try {\n        const mnemonic = await client.generateMnemonic();\n\n        console.log('Mnemonic: ' + mnemonic);\n        // Example output:\n        // Mnemonic: endorse answer radar about source reunion marriage tag sausage weekend frost daring base attack because joke dream slender leisure group reason prepare broken river\n    } catch (error) {\n        console.error('Error: ', error);\n    }\n}\n\nrun().then(() => process.exit());\n"),(0,a.kt)("p",null,"You can run the example by running the following command from the ",(0,a.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,a.kt)(i.Z,{className:"language-bash",mdxType:"CodeBlock"},"node dist/01_mnemonic.js"))}d.isMDXComponent=!0;const g={toc:[]};function k(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"Mnemonic: glance zoo dove legend razor season evoke twenty flush solution essence destroy loud traffic friend decorate emotion total borrow expect actor switch shock zer\n")))}k.isMDXComponent=!0;const h={toc:[]};function y(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{className:"language-python",mdxType:"CodeBlock"},"from iota_client import IotaClient\n\n# Create an IotaClient instance\nclient = IotaClient()\n\n# Generate a random BIP39 mnemonic\nmnemonic = client.generate_mnemonic()\nprint(f'Mnemonic: {mnemonic}')\n"),(0,a.kt)("p",null,"You can run the example by running the following command from the ",(0,a.kt)("inlineCode",{parentName:"p"},"binding/python/native/examples")," folder:"),(0,a.kt)(i.Z,{className:"language-bash",mdxType:"CodeBlock"},"python3 01_mnemonic.py"))}y.isMDXComponent=!0;const f={toc:[]};function v(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"Mnemonic: glance zoo dove legend razor season evoke twenty flush solution essence destroy loud traffic friend decorate emotion total borrow expect actor switch shock zer\n")))}v.isMDXComponent=!0;const b={toc:[]};function x(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example generate_mnemonic --release\n\nuse iota_client::{Client, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    let mnemonic = Client::generate_mnemonic()?;\n\n    println!("Mnemonic: {mnemonic}");\n\n    Ok(())\n}\n'),(0,a.kt)("p",null,"Run the example by running the following command:"),(0,a.kt)(i.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example generate_mnemonic --release"))}x.isMDXComponent=!0;const w={toc:[]};function T(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},w,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"Mnemonic: glance zoo dove legend razor season evoke twenty flush solution essence destroy loud traffic friend decorate emotion total borrow expect actor switch shock zer\n")))}T.isMDXComponent=!0;const C={title:"Generate a Mnemonic",description:"You can generate a mnemonic using any Client instance.",image:"/img/logo/iota_mark_light.png",keywords:["how to","generate mnemonic","java","nodejs","python","rust"]},_=void 0,N={unversionedId:"how_tos/generate_mnemonic",id:"how_tos/generate_mnemonic",title:"Generate a Mnemonic",description:"You can generate a mnemonic using any Client instance.",source:"@site/content/build/iota.rs/develop/documentation/docs/how_tos/02_generate_mnemonic.mdx",sourceDirName:"how_tos",slug:"/how_tos/generate_mnemonic",permalink:"/iota.rs/develop/how_tos/generate_mnemonic",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/content/build/iota.rs/develop/documentation/docs/how_tos/02_generate_mnemonic.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Generate a Mnemonic",description:"You can generate a mnemonic using any Client instance.",image:"/img/logo/iota_mark_light.png",keywords:["how to","generate mnemonic","java","nodejs","python","rust"]},sidebar:"docs",previous:{title:"Get Node Information",permalink:"/iota.rs/develop/how_tos/get_node_info"},next:{title:"Generate Addresses",permalink:"/iota.rs/develop/how_tos/generate_addresses"}},Z={},M=[{value:"Code Examples",id:"code-examples",level:2},{value:"Expected Output",id:"expected-output",level:2}],I={toc:M};function D(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},I,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following example will generate a mnemonic using a ",(0,a.kt)("inlineCode",{parentName:"p"},"Client")," instance.  Since this functionality doesn't need to\ncommunicate with any nodes, you can start your ",(0,a.kt)("inlineCode",{parentName:"p"},"Client")," in offline mode."),(0,a.kt)("p",null,"The following code example will:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"Client")," in offline mode."),(0,a.kt)("li",{parentName:"ol"},"Use the created client to generate a mnemonic.")),(0,a.kt)("h2",{id:"code-examples"},"Code Examples"),(0,a.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,a.kt)(x,{mdxType:"RustCode"})),(0,a.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,a.kt)(d,{mdxType:"NodejsCode"})),(0,a.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(y,{mdxType:"PythonCode"})),(0,a.kt)(r.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)(c,{mdxType:"JavaCode"}))),(0,a.kt)("h2",{id:"expected-output"},"Expected Output"),(0,a.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,a.kt)(T,{mdxType:"RustOutput"})),(0,a.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,a.kt)(k,{mdxType:"NodejsOutput"})),(0,a.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(v,{mdxType:"PythonOutput"})),(0,a.kt)(r.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)(u,{mdxType:"JavaOutput"}))))}D.isMDXComponent=!0},43305:(e,n,t)=>{t.d(n,{Z:()=>r});var o=t(67294),a=t(86010);const l="tabItem__kUE";function r(e){let{children:n,hidden:t,className:r}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,r),hidden:t},n)}},54411:(e,n,t)=>{t.d(n,{Z:()=>d});var o=t(87462),a=t(67294),l=t(86010),r=t(51048),i=t(33609),s=t(1943),c=t(72957);const m="tabList_fbd4",u="tabItem_v5XY";function p(e){var n,t;const{lazy:r,block:p,defaultValue:d,values:g,groupId:k,className:h}=e,y=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=g?g:y.map((e=>{let{props:{value:n,label:t,attributes:o}}=e;return{value:n,label:t,attributes:o}})),v=(0,i.l)(f,((e,n)=>e.value===n.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const b=null===d?d:null!=(n=null!=d?d:null==(t=y.find((e=>e.props.default)))?void 0:t.props.value)?n:y[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:x,setTabGroupChoices:w}=(0,s.U)(),[T,C]=(0,a.useState)(b),_=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=k){const e=x[k];null!=e&&e!==T&&f.some((n=>n.value===e))&&C(e)}const Z=e=>{const n=e.currentTarget,t=_.indexOf(n),o=f[t].value;o!==T&&(N(n),C(o),null!=k&&w(k,String(o)))},M=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var o;const n=_.indexOf(e.currentTarget)+1;t=null!=(o=_[n])?o:_[0];break}case"ArrowLeft":{var a;const n=_.indexOf(e.currentTarget)-1;t=null!=(a=_[n])?a:_[_.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",m)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},h)},f.map((e=>{let{value:n,label:t,attributes:r}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>_.push(e),onKeyDown:M,onFocus:Z,onClick:Z},r,{className:(0,l.Z)("tabs__item",u,null==r?void 0:r.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),r?(0,a.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},y.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function d(e){const n=(0,r.Z)();return a.createElement(p,(0,o.Z)({key:String(n)},e))}}}]);