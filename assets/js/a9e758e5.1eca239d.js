"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[77083],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),p=i,g=u["".concat(c,".").concat(p)]||u[p]||h[p]||r;return t?a.createElement(g,o(o({ref:n},d),{},{components:t})):a.createElement(g,o({ref:n},d))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},35161:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return h}});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),o=["components"],s={keywords:["Smart Contracts","Chain","Management","Grafana"],description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging and validators.",image:"/img/logo/WASP_logo_dark.png"},c="Chain Management",l={unversionedId:"guide/chains_and_nodes/chain-management",id:"guide/chains_and_nodes/chain-management",title:"Chain Management",description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging and validators.",source:"@site/content/build/wasp/develop/documentation/docs/guide/chains_and_nodes/chain-management.md",sourceDirName:"guide/chains_and_nodes",slug:"/guide/chains_and_nodes/chain-management",permalink:"/smart-contracts/develop/guide/chains_and_nodes/chain-management",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/content/build/wasp/develop/documentation/docs/guide/chains_and_nodes/chain-management.md",tags:[],version:"current",frontMatter:{keywords:["Smart Contracts","Chain","Management","Grafana"],description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging and validators.",image:"/img/logo/WASP_logo_dark.png"},sidebar:"tutorialSidebar",previous:{title:"Setting Up a Chain",permalink:"/smart-contracts/develop/guide/chains_and_nodes/setting-up-a-chain"},next:{title:"Testnet",permalink:"/smart-contracts/develop/guide/chains_and_nodes/testnet"}},d={},h=[{value:"Monitoring",id:"monitoring",level:2},{value:"Managing Chain Configuration and Validators",id:"managing-chain-configuration-and-validators",level:2},{value:"Changing chain ownership",id:"changing-chain-ownership",level:3},{value:"Changing Access nodes",id:"changing-access-nodes",level:3},{value:"Changing the set of validators",id:"changing-the-set-of-validators",level:3}],u={toc:h};function p(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"chain-management"},"Chain Management"),(0,r.kt)("h2",{id:"monitoring"},"Monitoring"),(0,r.kt)("p",null,"Each Wasp node provides a ",(0,r.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/chains_and_nodes/running-a-node#grafana"},"Grafana dashboard")," where you can visualize metrics gathered by the node."),(0,r.kt)("p",null,"You can view the chain state using the ",(0,r.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/chains_and_nodes/running-a-node#dashboard"},"dashboard")," (by default on port ",(0,r.kt)("inlineCode",{parentName:"p"},":7000"),")."),(0,r.kt)("p",null,"You can also set up a client to receive ",(0,r.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/chains_and_nodes/running-a-node#publisher"},"published events")," to have insights on what's happening in the system."),(0,r.kt)("p",null,"Lastly, each Wasp node will produce a log file (",(0,r.kt)("inlineCode",{parentName:"p"},"wasp.log"),") where the behaviour of a node can be investigated."),(0,r.kt)("h2",{id:"managing-chain-configuration-and-validators"},"Managing Chain Configuration and Validators"),(0,r.kt)("p",null,"You can manage the chain configuration and committee of validators by interacting with the ",(0,r.kt)("a",{parentName:"p",href:"/smart-contracts/develop/guide/core_concepts/core_contracts/governance"},"Governance contract"),"."),(0,r.kt)("p",null,'Administrative tasks can only be performed by the "Chain Owner".'),(0,r.kt)("h3",{id:"changing-chain-ownership"},"Changing chain ownership"),(0,r.kt)("p",null,"In order to change the chain ownership, there must be a call to ",(0,r.kt)("inlineCode",{parentName:"p"},"delegateChainOwnership")," by the current owner, specifying the agentID of the next owner, then the next owner must call ",(0,r.kt)("inlineCode",{parentName:"p"},"claimChainOwnership")," to finalize the process."),(0,r.kt)("h3",{id:"changing-access-nodes"},"Changing Access nodes"),(0,r.kt)("p",null,"For new access nodes to join the network they need to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"be added as a trusted peer to at least 1 of the existing nodes"),(0,r.kt)("li",{parentName:"ul"},"be added by the administrator to the list of access nodes by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"changeAccessNodes")," (there is a helper for this in wasp-cli: ",(0,r.kt)("inlineCode",{parentName:"li"},"wasp-cli chain change-access-nodes"),").")),(0,r.kt)("p",null,"After this, new nodes should be able to sync the state and execute view queries (call view entrypoints)."),(0,r.kt)("p",null,"To remove an access node, a call to ",(0,r.kt)("inlineCode",{parentName:"p"},"changeAccessNodes")," should be enough."),(0,r.kt)("h3",{id:"changing-the-set-of-validators"},"Changing the set of validators"),(0,r.kt)("p",null,"This can be done in different ways, depending who the ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/develop/explanations/ledger/alias"},"governor address")," of the alias output of the chain is."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the chain governor address is the chain itself, or another chain, the rotation can be performed by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"rotateStateController")," after adding the next state controller via ",(0,r.kt)("inlineCode",{parentName:"li"},"addAllowedStateControllerAddress"),"."),(0,r.kt)("li",{parentName:"ul"},"If the chain governor address is an regular user wallet, the rotation transaction can be issued by using wasp-cli: ",(0,r.kt)("inlineCode",{parentName:"li"},"wasp-cli chain rotate <new controller address>"))))}p.isMDXComponent=!0}}]);