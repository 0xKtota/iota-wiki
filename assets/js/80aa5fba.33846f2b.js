"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[41326],{26570:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={},l="Getting Started",u={unversionedId:"libraries/wasm/getting_started",id:"libraries/wasm/getting_started",isDocsHomePage:!1,title:"Getting Started",description:"The WASM bindings allow for you to build a Streams API for web applications and nodejs.",source:"@site/external/streams/documentation/docs/libraries/wasm/getting_started.md",sourceDirName:"libraries/wasm",slug:"/libraries/wasm/getting_started",permalink:"/streams/libraries/wasm/getting_started",editUrl:"https://github.com/iotaledger/streams/edit/develop/external/streams/documentation/docs/libraries/wasm/getting_started.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Examples",permalink:"/streams/libraries/wasm/examples"},next:{title:"API Reference",permalink:"/streams/libraries/wasm/api_reference"}},c=[{value:"Starting a Channel",id:"starting-a-channel",children:[],level:3}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"The WASM bindings allow for you to build a Streams API for web applications and nodejs.\nThe streams instance underlying the bindings is built with the ",(0,i.kt)("inlineCode",{parentName:"p"},"wasm-client")," flag to\nensure a compatible client interface using the ",(0,i.kt)("inlineCode",{parentName:"p"},"iota.rs iota-client")," crate. "),(0,i.kt)("p",null,"Before building anything you'll need to make sure you have ",(0,i.kt)("inlineCode",{parentName:"p"},"npm")," installed on your\nmachine."),(0,i.kt)("p",null,"To build the library, first make sure you're in the wasm directory:\n",(0,i.kt)("inlineCode",{parentName:"p"},"cd bindings/wasm")," and run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install")," to sync up your dependencies. "),(0,i.kt)("p",null,"For building the nodejs compatible api, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build:nodejs  <- Builds to node/streams_wasm\n")),(0,i.kt)("p",null,"And for building the web compatible api, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build:web  <- Builds to web/streams_wasm\n")),(0,i.kt)("h3",{id:"starting-a-channel"},"Starting a Channel"),(0,i.kt)("p",null,"Once the package has been built, you can pull it into a script file like so: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const streams = require("./node/streams_wasm");\n\nlet node = "https://chrysalis-nodes.iota.org/";\n// Options include: (node-url, depth, local pow, # of threads)\nlet options = new streams.SendOptions(node, 3, true, 1);\n\n// Author generated with: (Seed, Options, Multi-branching flag)\nlet auth = new streams.Author("Unique Seed Here", options, false);\n\n// Response formatting: { link, sequence link, msg }\nlet response = await auth.clone().send_announce();\nlet ann_link = response.get_link();\nconsole.log("Channel Announcement at: ", ann_link.to_string());\n')))}d.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);